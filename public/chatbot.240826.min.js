(function(a,b){'object'==typeof exports&&'object'==typeof module?module.exports=b():'function'==typeof define&&define.amd?define([],b):'object'==typeof exports?exports.Datepickk=b():a.Datepickk=b()})(this,function(){return function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=0)}([function(a,b,c){'use strict';function d(a){function b(){z.el.days.innerHTML='';var a=null==ba?E[S].weekStart:ba;if(Y)for(var b,c=0;c<J&&3>c;c++){b=document.createElement('div'),b.setAttribute('class','d-week');for(var d=0;7>d;d++){var e=d+a>E[S].dayNames.length-1?d+a-E[S].dayNames.length:d+a,f=document.createElement('div'),g=document.createElement('p');g.innerHTML=E[S].dayNames[e],f.appendChild(g),b.appendChild(f)}z.el.days.appendChild(b)}}function h(){[].slice.call(z.el.yearPicker.childNodes).forEach(function(a){a.innerHTML='\''+(C+parseInt(a.getAttribute('data-year'))).toString().substring(2,4)})}function c(){function a(a){function b(a){var b=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a);return b?{r:parseInt(b[1],16),g:parseInt(b[2],16),b:parseInt(b[3],16)}:null}if('LABEL'===a.target.nodeName){var c=a.target.getAttribute('data-legend-id')?a.target.getAttribute('data-legend-id').split(' '):[];c.length&&c.forEach(function(c){var d=z.el.legend.querySelector('[data-legend-id="'+c+'"]');if('mouseover'==a.type&&d){var e=d.getAttribute('data-color')?b(d.getAttribute('data-color')):null;d.setAttribute('style','background-color:rgba('+e.r+','+e.g+','+e.b+',0.35);')}else d&&d.removeAttribute('style')})}}z.el.tables.innerHTML='';for(var b,c=0;c<J;c++){b=document.createElement('div'),b.setAttribute('class','d-table');for(var e,f=0;42>f;f++){e=document.createElement('input'),e.type='checkbox',e.id=d.numInstances+'-'+c+'-d-day-'+f;var g=document.createElement('label');g.setAttribute('for',d.numInstances+'-'+c+'-d-day-'+f);var h=document.createElement('text'),i=document.createElement('span');i.setAttribute('class','d-tooltip'),b.appendChild(e),b.appendChild(g),g.appendChild(h),g.appendChild(i),e.addEventListener(A,function(a){ca&&a.preventDefault()}),e.addEventListener('change',s)}z.el.tables.appendChild(b)}z.el.tables.addEventListener('mouseover',a),z.el.tables.addEventListener('mouseout',a)}function i(){function a(a){[].slice.call(z.el.tables.querySelectorAll('[data-legend-id*="'+this.getAttribute('data-legend-id')+'"]')).forEach(function(b){'mouseover'==a.type?b.classList.add('legend-hover'):b.classList.remove('legend-hover')})}for(var b=new Date(z.el.tables.childNodes[0].childNodes[0].getAttribute('data-date')),c=new Date(z.el.tables.childNodes[J-1].childNodes[82].getAttribute('data-date')),d=W.filter(function(a){for(var d=0;d<a.dates.length;d++)if(a.dates[d].start<c&&a.dates[d].end>b)return!0;return!1}),e=[],f=0;f<d.length;f++)if('legend'in d[f]&&d[f].legend){var g=H.querySelector('.d-legend-item[data-legend="'+d[f].legend+'"][data-color="'+d[f].backgroundColor+'"]');if(null==g){var h=document.createElement('p');h.setAttribute('class','d-legend-item'),h.setAttribute('data-legend',d[f].legend),h.setAttribute('data-legend-id',W.indexOf(d[f])),h.setAttribute('data-color',d[f].backgroundColor);var i=document.createElement('span');i.setAttribute('style','background-color:'+d[f].backgroundColor),h.appendChild(i),z.el.legend.appendChild(h),h.addEventListener('mouseover',a),h.addEventListener('mouseout',a),e.push(h)}else e.push(g)}[].slice.call(z.el.legend.querySelectorAll('.d-legend-item')).forEach(function(b){0>e.indexOf(b)&&(b.removeEventListener('mouseover',a),b.removeEventListener('mouseout',a),z.el.legend.removeChild(b))})}function j(a){return 11<a?a-=12:0>a&&(a+=12),a}function k(a,b){var c=z.el.querySelectorAll('.d-table'),d=null==ba?E[S].weekStart:ba;[].slice.call(z.el.querySelectorAll('.d-table')).forEach(function(e,f){var g=new Date(a,b+f,0).getDate(),h=new Date(a,b+f-1,0).getDate(),k=new Date(a,b+f-1,1).getDay();0>k-d?k=7-d:k-=d;var i=E[S].monthNames[j(b-1+f)];e.setAttribute('data-month',i),[].slice.call(e.querySelectorAll('.d-table input')).forEach(function(d,e){var i=d.nextSibling;d.checked=!1,d.removeAttribute('disabled'),i.removeAttribute('style'),i.removeAttribute('data-legend-id'),i.className='';var j=null;if(e<k?(i.childNodes[0].innerHTML=h-(k-e-1),0==f?(j=new Date(a,b+f-2,h-(k-e-1)),i.className='prev'):(j='',i.className='d-hidden',d.setAttribute('disabled',!0))):e<g+k?(j=new Date(a,b+f-1,e-k+1),i.childNodes[0].innerHTML=e-k+1,i.className=''):(i.childNodes[0].innerHTML=e-g-k+1,f==c.length-1?(j=new Date(a,b+f,e-g-k+1),i.className='next'):(j='',i.className='d-hidden',d.setAttribute('disabled',!0))),j instanceof Date){d.setAttribute('data-date',j.toJSON()),(-1!=U.indexOf(j.getTime())||-1!=V.indexOf(j.getDay()))&&d.setAttribute('disabled',!0),(_&&j<_||aa&&j>aa)&&(d.setAttribute('disabled',!0),i.className='d-hidden'),Z&&j.getTime()==new Date().setHours(0,0,0,0)?i.classList.add('today'):i.classList.remove('today'),X[j.getTime()]?(i.childNodes[0].setAttribute('data-tooltip',!0),i.childNodes[1].innerHTML=X[j.getTime()]):(i.childNodes[0].removeAttribute('data-tooltip'),i.childNodes[1].innerHTML='');var l=W.filter(function(a){for(var b=0;b<a.dates.length;b++)if(j.getTime()>=a.dates[b].start.getTime()&&j.getTime()<=a.dates[b].end.getTime())return!0;return!1});if(0<l.length){var m='',n='';if(1<l.length){var o=Math.round(100/l.length);m='background: linear-gradient(-45deg,';for(var p=0;p<l.length;p++)n+=W.indexOf(l[p]),p!==l.length-1&&(n+=' '),m+=l[p].backgroundColor+' '+o*p+'%',p!=l.length-1&&(m+=',',m+=l[p].backgroundColor+' '+o*(p+1)+'%,');m+=');'}else m=l[0].backgroundColor?'background:'+l[0].backgroundColor+';':'',n+=W.indexOf(l[0]);var q=l[0].color?'color:'+l[0].color+';':'';i.setAttribute('style',m+q),i.setAttribute('data-legend-id',n)}}})}),i()}function l(){if(z.el.tables.childNodes.length&&z.el.tables.childNodes[0].childNodes.length){n(),(12<D||1>D)&&(12<D?(C+=1,D-=12):(C-=1,D+=12)),aa&&new Date(C,D-1+J-1,1)>=new Date(aa).setDate(1)?(C=aa.getFullYear(),D=aa.getMonth()+1-J+1,z.el.header.childNodes[2].setAttribute('style','visibility:hidden')):z.el.header.childNodes[2].removeAttribute('style'),_&&new Date(C,D-1,1)<=new Date(_).setDate(1)?(C=_.getFullYear(),D=_.getMonth()+1,z.el.header.childNodes[0].setAttribute('style','visibility:hidden')):z.el.header.childNodes[0].removeAttribute('style');for(var a,b=0;b<J;b++)a=D-1+b,11<a?a-=12:0>a&&(a+=12),z.el.monthPicker.childNodes[a].classList.add('current');k(C,D),h();var c=E[S].monthNames[D-1],d='';if(1<J){d+=' - ';var e=D-1+J-1;11<e?e-=12:0>e&&(e+=12),d+=E[S].monthNames[e]}var f=11<D-1+J-1?C.toString().substring(2,4)+'/'+(C+1).toString().substring(2,4):C.toString().substring(2,4);z.el.header.childNodes[1].childNodes[0].innerHTML=c+d,z.el.header.childNodes[1].childNodes[1].innerHTML=f,z.el.yearPicker.querySelector('[data-year="0"]').classList.add('current'),11<D-1+J-1&&z.el.yearPicker.querySelector('[data-year="1"]').classList.add('current'),m(),N&&N.call(z)}}function m(){if(B.forEach(function(a){var b=z.el.querySelector('[data-date="'+a.toJSON()+'"]');b&&(b.checked=!0)}),z.el.tables.classList.remove('before'),F&&1<B.length){var a=new Date(C,D-1,1),b=B.sort(function(c,a){return c.getTime()-a.getTime()}),c=z.el.querySelector('[data-date="'+b[0].toJSON()+'"]');!c&&a>=new Date(b[0].getFullYear(),b[0].getMonth(),1)&&a<=new Date(b[1].getFullYear(),b[1].getMonth(),1)&&z.el.tables.classList.add('before')}}function n(){[].slice.call(z.el.querySelectorAll('.d-table input')).forEach(function(a){a.checked=!1}),[].slice.call(z.el.monthPicker.querySelectorAll('.current')).forEach(function(a){a.classList.remove('current')}),[].slice.call(z.el.yearPicker.querySelectorAll('.current')).forEach(function(a){a.classList.remove('current')})}function o(){D+=J,l()}function p(){D-=J,l()}function q(a,b){a=new Date(a),a.setHours(0,0,0,0);var c=z.el.querySelector('[data-date="'+a.toJSON()+'"]');F&&c&&c.checked&&c.classList.add('single'),c&&!c.checked&&(c.checked=!0),B.push(a),T&&!b&&T.apply(a,[!0])}function r(a,b){a=new Date(a),a.setHours(0,0,0,0);var c=z.el.querySelector('[data-date="'+a.toJSON()+'"]');c&&(c.classList.remove('single'),c.checked&&(c.checked=!1)),B=B.filter(function(b){return b.getTime()!=a.getTime()}),T&&!b&&T.call(a,!1)}function s(){var a=this,b=new Date(a.getAttribute('data-date'));if(a.classList.remove('single'),!ca){if(F&&z.el.tables.classList.remove('before'),a.checked){if(G&&B.length>G-1){var c=B.length;for(c;c>G-1;c--)r(B[0])}if(F&&B.length){var d=z.el.querySelector('[data-date="'+B[0].toJSON()+'"]');!d&&b>B[0]&&z.el.tables.classList.add('before')}B.push(b),K&&z.hide()}else F&&1==B.length&&B[0].getTime()==b.getTime()?(q(b),a.classList.add('single')):B=B.filter(function(a){return a.getTime()!=b.getTime()});T&&T.call(b,a.checked)}}function t(a){a?(F=!0,z.el.tables.classList.add('range')):(F=!1,z.el.tables.classList.remove('range'))}function u(a){z.inline||z.container!==document.body||document.body.classList.add('d-noscroll'),x(a);z.el.calendar.addEventListener(e(),function a(){z.el.classList.remove('d-show'),z.el.calendar.removeEventListener(e(),a)}),z.el.classList.add('d-show'),H.appendChild(z.el),I=!0,$&&(D=$.getMonth()+1,C=$.getFullYear()),l()}function v(){document.body.classList.remove('d-noscroll');z.el.addEventListener(e(),function a(){z.el.parentNode.removeChild(z.el),I=!1,z.el.classList.remove('d-hide'),'function'==typeof O&&O.apply(z),z.el.removeEventListener(e(),a)}),z.el.classList.add('d-hide')}function w(){z.el.header.childNodes[0].addEventListener(A,p),z.el.header.childNodes[2].addEventListener(A,o),z.el.header.childNodes[1].childNodes[0].addEventListener(A,function(){z.el.monthPicker.classList.contains('d-show')?z.el.monthPicker.classList.remove('d-show'):z.el.monthPicker.classList.add('d-show'),z.el.yearPicker.classList.remove('d-show')}),z.el.header.childNodes[1].childNodes[1].addEventListener(A,function(){h(),z.el.yearPicker.classList.contains('d-show')?z.el.yearPicker.classList.remove('d-show'):z.el.yearPicker.classList.add('d-show'),z.el.monthPicker.classList.remove('d-show')}),z.el.button.addEventListener(A,v),z.el.overlay.addEventListener(A,function(){Q&&z.hide()}),[].slice.call(z.el.monthPicker.childNodes).forEach(function(a){a.addEventListener(A,function(){D=parseInt(this.getAttribute('data-month')),l(),z.el.monthPicker.classList.remove('d-show')})}),[].slice.call(z.el.yearPicker.childNodes).forEach(function(a){a.addEventListener(A,function(){C+=parseInt(this.getAttribute('data-year')),l(),z.el.yearPicker.classList.remove('d-show')})});var a=0,b=0;z.el.calendar.addEventListener('touchstart',function(b){a=b.changedTouches[0].clientX||b.originalEvent.changedTouches[0].clientX}),z.el.calendar.addEventListener('touchmove',function(c){b=c.changedTouches[0].clientX-a||c.originalEvent.changedTouches[0].clientX-a,c.preventDefault()}),z.el.calendar.addEventListener('touchend',function(){50<b?p():-50>b&&o(),b=0})}function x(a){for(var b in a)b in z&&(z[b]=a[b])}function y(a){a=new Date(a),D=a.getMonth()+1,C=a.getFullYear(),l()}d.numInstances=(d.numInstances||0)+1;var z=this,A='click',B=[],C=new Date().getFullYear(),D=new Date().getMonth()+1,E={no:{monthNames:['Januar','Februar','Mars','April','Mai','Juni','Juli','August','September','Oktober','November','Desember'],dayNames:['s\xF8','ma','ti','on','to','fr','l\xF8'],weekStart:1},se:{monthNames:['januari','februari','mars','april','maj','juni','juli','augusti','september','oktober','november','december'],dayNames:['s\xF6','m\xE5','ti','on','to','fr','l\xF6'],weekStart:1},ru:{monthNames:['\u042F\u043D\u0432\u0430\u0440\u044C','\u0424\u0435\u0432\u0440\u0430\u043B\u044C','\u041C\u0430\u0440\u0442','\u0410\u043F\u0440\u0435\u043B\u044C','\u041C\u0430\u0439','\u0418\u044E\u043D\u044C','\u0418\u044E\u043B\u044C','\u0410\u0432\u0433\u0443\u0441\u0442','\u0421\u0435\u043D\u0442\u044F\u0431\u0440\u044C','\u041E\u043A\u0442\u044F\u0431\u0440\u044C','\u041D\u043E\u044F\u0431\u0440\u044C','\u0414\u0435\u043A\u0430\u0431\u0440\u044C'],dayNames:['\u0432\u0441','\u043F\u043D','\u0432\u0442','\u0441\u0440','\u0447\u0442','\u043F\u0442','\u0441\u0431'],weekStart:1},en:{monthNames:['january','february','march','april','may','june','july','august','september','october','november','december'],dayNames:['su','mo','tu','we','th','fr','sa'],weekStart:0},de:{monthNames:['Januar','Februar','M\xE4rz','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember'],dayNames:['So','Mo','Di','Mi','Do','Fr','Sa'],weekStart:1}};E.nb=E.no,E.nn=E.no;var F=!1,G=null,H=document.body,I=!1,J=1,K=!1,L=null,M=null,N=null,O=null,P=null,Q=!0,R=!1,S='en',T=null,U=[],V=[],W=[],X={},Y=!0,Z=!0,$=null,_=null,aa=null,ba=null,ca=!1;return z.show=u,z.hide=v,z.selectDate=q,z.unselectAll=function(a){B.forEach(function(b){r(b,a)})},z.unselectDate=r,Object.defineProperties(z,{selectedDates:{get:function(){return B.sort(function(c,a){return c.getTime()-a.getTime()})}},range:{get:function(){return F},set:function(a){t(a),a&&(G=2)}},button:{get:function(){return L},set:function(a){L='string'==typeof a?a:null,z.el.button.innerHTML=L?L:''}},title:{get:function(){return M},set:function(a){M='string'==typeof a?a:null,z.el.titleBox.innerText=M?M:''}},lang:{get:function(){return S},set:function(a){a in E?(S=a,b(),l()):console.error('Language not found')}},weekStart:{get:function(){return null==ba?E[S].weekStart:ba},set:function(a){'number'==typeof a&&-1<a&&7>a?(ba=a,b(),l()):console.error('weekStart must be a number between 0 and 6')}},months:{get:function(){return J},set:function(a){'number'==typeof a&&0<a?(J=a,b(),c(),l(),1==J?z.el.classList.remove('multi'):z.el.classList.add('multi')):console.error('months must be a number > 0')}},isOpen:{get:function(){return I}},closeOnSelect:{get:function(){return K},set:function(a){K=!!a}},disabledDays:{get:function(){return V},set:function(a){if(a instanceof Array)for(var b=0;b<a.length;b++)'number'==typeof a[b]&&V.push(a[b]);else'number'==typeof a?V=[a]:a||(V=[]);l()}},disabledDates:{get:function(){return U.map(function(a){return new Date(a)})},set:function(a){a instanceof Array?a.forEach(function(a){a instanceof Date&&U.push(new Date(a.getFullYear(),a.getMonth(),a.getDate()).getTime())}):a instanceof Date?U=[new Date(a.getFullYear(),a.getMonth(),a.getDate()).getTime()]:!a&&(U=[]),l()}},highlight:{get:function(){return W},set:function(a){if(a instanceof Array)a.forEach(function(a){if(a instanceof Object){var b={};b.dates=[],'start'in a?b.dates.push({start:new Date(a.start.getFullYear(),a.start.getMonth(),a.start.getDate()),end:'end'in a?new Date(a.end.getFullYear(),a.end.getMonth(),a.end.getDate()):new Date(a.start.getFullYear(),a.start.getMonth(),a.start.getDate())}):'dates'in a&&a.dates instanceof Array&&a.dates.forEach(function(a){b.dates.push({start:new Date(a.start.getFullYear(),a.start.getMonth(),a.start.getDate()),end:'end'in a?new Date(a.end.getFullYear(),a.end.getMonth(),a.end.getDate()):new Date(a.start.getFullYear(),a.start.getMonth(),a.start.getDate())})}),b.color=a.color,b.backgroundColor=a.backgroundColor,b.legend='legend'in a?a.legend:null,W.push(b)}});else if(a instanceof Object){var b={};b.dates=[],'start'in a?b.dates.push({start:new Date(a.start.getFullYear(),a.start.getMonth(),a.start.getDate()),end:'end'in a?new Date(a.end.getFullYear(),a.end.getMonth(),a.end.getDate()):new Date(a.start.getFullYear(),a.start.getMonth(),a.start.getDate())}):'dates'in a&&a.dates instanceof Array&&a.dates.forEach(function(a){b.dates.push({start:new Date(a.start.getFullYear(),a.start.getMonth(),a.start.getDate()),end:'end'in a?new Date(a.end.getFullYear(),a.end.getMonth(),a.end.getDate()):new Date(a.start.getFullYear(),a.start.getMonth(),a.start.getDate())})}),b.color=a.color,b.backgroundColor=a.backgroundColor,b.legend='legend'in a?a.legend:null,W.push(b)}else a||(W=[]);l()}},onClose:{set:function(a){O=a}},onSelect:{set:function(a){T=a}},today:{get:function(){return Z},set:function(a){Z=!!a}},daynames:{get:function(){return Y},set:function(a){Y=!!a,b()}},fullscreen:{get:function(){return z.el.classList.contains('fullscreen')},set:function(a){a?z.el.classList.add('fullscreen'):z.el.classList.remove('fullscreen')}},locked:{get:function(){return ca},set:function(a){a?(ca=!0,z.el.tables.classList.add('locked')):(ca=!1,z.el.tables.classList.remove('locked'))}},maxSelections:{get:function(){return G},set:function(a){G='number'!=typeof a||F?F?2:null:a}},onConfirm:{set:function(a){'function'==typeof a?(P=a.bind(z),z.el.button.addEventListener(A,P)):!a&&(z.el.button.removeEventListener(A,P),P=null)}},onNavigation:{set:function(a){'function'==typeof a?N=a.bind(z):!a&&(N=null)}},closeOnClick:{get:function(){return Q},set:function(a){Q=!!a}},tooltips:{get:function(){var a=[];for(key in X)a.push({date:new Date(parseInt(key)),text:X[key]});return a},set:function(a){a instanceof Array?a.forEach(function(a){a.date&&a.text&&a.date instanceof Date&&(X[new Date(a.date.getFullYear(),a.date.getMonth(),a.date.getDate()).getTime()]=a.text)}):a instanceof Object?a.date&&a.text&&a.date instanceof Date&&(X[new Date(a.date.getFullYear(),a.date.getMonth(),a.date.getDate()).getTime()]=a.text):!a&&(X=[]),l()}},currentDate:{get:function(){return new Date(C,D-1,1)},set:y},setDate:{set:y},startDate:{get:function(){return $},set:function(a){a?$=new Date(a):($=null,C=new Date().getFullYear(),D=new Date().getMonth()+1),l()}},minDate:{get:function(){return _},set:function(a){_=a?new Date(a):null,l()}},maxDate:{get:function(){return aa},set:function(a){aa=a?new Date(a):null,l()}},container:{get:function(){return H},set:function(a){if(a instanceof String){var b=document.querySelector(a);b?(H=b,H==document.body?z.el.classList.remove('wrapped'):z.el.classList.add('wrapped')):console.error('Container doesn\'t exist')}else a instanceof HTMLElement?(H=a,H==document.body?z.el.classList.remove('wrapped'):z.el.classList.add('wrapped')):console.error('Invalid type')}},inline:{get:function(){return R},set:function(a){a?(R=!0,z.el.classList.add('inline')):(R=!1,z.el.classList.remove('inline'))}}}),function(){z.el=document.createElement('div'),z.el.id='Datepickk',z.el.classList.add(g().type),z.el.innerHTML=f,z.el.calendar=z.el.childNodes[1],z.el.titleBox=z.el.childNodes[0],z.el.button=z.el.childNodes[3],z.el.header=z.el.calendar.childNodes[0],z.el.monthPicker=z.el.calendar.childNodes[1],z.el.yearPicker=z.el.calendar.childNodes[2],z.el.tables=z.el.calendar.childNodes[4],z.el.days=z.el.calendar.childNodes[3],z.el.overlay=z.el.childNodes[4],z.el.legend=z.el.childNodes[2],x(a),c(),b(),w(),R&&u()}(),l(),Object.freeze(z)}/*!
  * Datepickk
  * Docs & License: https://crsten.github.com/datepickk
  * (c) 2017 Carsten Jacobsen
  */function e(){var a,b=document.createElement('fakeelement'),c={animation:'animationend',OAnimation:'oanimationend',MozAnimation:'animationend',WebkitAnimation:'webkitAnimationEnd',"":'MSAnimationEnd'};for(a in c)if(b.style[a]!==void 0)return c[a]}Object.defineProperty(b,'__esModule',{value:!0}),c(1);var f='<div class="d-title"></div><div class="d-calendar"><div class="d-header"><i id="d-previous"></i><p><span class="d-month"></span><span class="d-year"></span></p><i id="d-next"></i></div><div class="d-month-picker"><div data-month="1">1</div><div data-month="2">2</div><div data-month="3">3</div><div data-month="4">4</div><div data-month="5">5</div><div data-month="6">6</div><div data-month="7">7</div><div data-month="8">8</div><div data-month="9">9</div><div data-month="10">10</div><div data-month="11">11</div><div data-month="12">12</div></div><div class="d-year-picker"><div data-year="-5"></div><div data-year="-4"></div><div data-year="-3"></div><div data-year="-2"></div><div data-year="-1"></div><div data-year="0"></div><div data-year="1"></div><div data-year="2"></div><div data-year="3"></div><div data-year="4"></div><div data-year="5"></div></div><div class="d-weekdays"></div><div class="d-tables"></div></div><div class="d-legend"></div><button class="d-confirm"></button><div class="d-overlay"></div>',g=function(){var a,b,c={type:null,version:null},d=navigator.userAgent,e=d.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];return(b=d.match(/(iphone|ipad)\s+OS\s+([\d+_]+\d+)/i)||[],/trident/i.test(e[1]))?(a=/\brv[ :]+(\d+)/g.exec(d)||[],c.type='MSIE',c.version=parseInt(a[1]),c):'Chrome'===e[1]&&(a=d.match(/\bOPR\/(\d+)/),null!=a)?'Opera '+a[1]:b[1]?c={type:'iOS',version:b[2]}:(e=e[2]?[e[1],e[2]]:[navigator.appName,navigator.appVersion,'-?'],null!=(a=d.match(/version\/(\d+)/i))&&e.splice(1,1,a[1]),c.type=e[0],c.version=parseInt(e[1]),c)};b.default=d},function(){}])['default']});
!function(){"use strict";function o(){var o=window,t=document;if(!("scrollBehavior"in t.documentElement.style&&!0!==o.__forceSmoothScrollPolyfill__)){var l,e=o.HTMLElement||o.Element,r=468,i={scroll:o.scroll||o.scrollTo,scrollBy:o.scrollBy,elementScroll:e.prototype.scroll||n,scrollIntoView:e.prototype.scrollIntoView},s=o.performance&&o.performance.now?o.performance.now.bind(o.performance):Date.now,c=(l=o.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(l)?1:0);o.scroll=o.scrollTo=function(){void 0!==arguments[0]&&(!0!==f(arguments[0])?h.call(o,t.body,void 0!==arguments[0].left?~~arguments[0].left:o.scrollX||o.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:o.scrollY||o.pageYOffset):i.scroll.call(o,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:o.scrollX||o.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:o.scrollY||o.pageYOffset))},o.scrollBy=function(){void 0!==arguments[0]&&(f(arguments[0])?i.scrollBy.call(o,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):h.call(o,t.body,~~arguments[0].left+(o.scrollX||o.pageXOffset),~~arguments[0].top+(o.scrollY||o.pageYOffset)))},e.prototype.scroll=e.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==f(arguments[0])){var o=arguments[0].left,t=arguments[0].top;h.call(this,this,void 0===o?this.scrollLeft:~~o,void 0===t?this.scrollTop:~~t)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");i.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},e.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==f(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):i.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},e.prototype.scrollIntoView=function(){if(!0!==f(arguments[0])){var l=function(o){var l,e,r,i;do{l=(o=o.parentNode)===t.body}while(!1===l&&!1===(r=p(e=o,"Y")&&a(e,"Y"),i=p(e,"X")&&a(e,"X"),r||i));return l=null,o}(this),e=l.getBoundingClientRect(),r=this.getBoundingClientRect();l!==t.body?(h.call(this,l,l.scrollLeft+r.left-e.left,l.scrollTop+r.top-e.top),"fixed"!==o.getComputedStyle(l).position&&o.scrollBy({left:e.left,top:e.top,behavior:"smooth"})):o.scrollBy({left:r.left,top:r.top,behavior:"smooth"})}else i.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function n(o,t){this.scrollLeft=o,this.scrollTop=t}function f(o){if(null===o||"object"!=typeof o||void 0===o.behavior||"auto"===o.behavior||"instant"===o.behavior)return!0;if("object"==typeof o&&"smooth"===o.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+o.behavior+" is not a valid value for enumeration ScrollBehavior.")}function p(o,t){return"Y"===t?o.clientHeight+c<o.scrollHeight:"X"===t?o.clientWidth+c<o.scrollWidth:void 0}function a(t,l){var e=o.getComputedStyle(t,null)["overflow"+l];return"auto"===e||"scroll"===e}function d(t){var l,e,i,c,n=(s()-t.startTime)/r;c=n=n>1?1:n,l=.5*(1-Math.cos(Math.PI*c)),e=t.startX+(t.x-t.startX)*l,i=t.startY+(t.y-t.startY)*l,t.method.call(t.scrollable,e,i),e===t.x&&i===t.y||o.requestAnimationFrame(d.bind(o,t))}function h(l,e,r){var c,f,p,a,h=s();l===t.body?(c=o,f=o.scrollX||o.pageXOffset,p=o.scrollY||o.pageYOffset,a=i.scroll):(c=l,f=l.scrollLeft,p=l.scrollTop,a=n),d({scrollable:c,method:a,startTime:h,startX:f,startY:p,x:e,y:r})}}"object"==typeof exports&&"undefined"!=typeof module?module.exports={polyfill:o}:o()}();
/*!
 * Socket.IO v4.7.5
 * (c) 2014-2024 Guillermo Rauch
 * Released under the MIT License.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).io=t()}(this,(function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(i=r.key,o=void 0,"symbol"==typeof(o=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(i,"string"))?o:String(o)),r)}var i,o}function r(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function c(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function u(e,t,n){return u=c()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&a(i,n.prototype),i},u.apply(null,arguments)}function h(e){var t="function"==typeof Map?new Map:void 0;return h=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return u(e,arguments,s(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),a(r,e)},h(e)}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function l(e){var t=c();return function(){var n,r=s(e);if(t){var i=s(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return function(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return f(e)}(this,n)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(arguments.length<3?e:n):i.value}},p.apply(this,arguments)}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function y(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,s=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){a=!0,o=e},f:function(){try{s||null==n.return||n.return()}finally{if(a)throw o}}}}var v=Object.create(null);v.open="0",v.close="1",v.ping="2",v.pong="3",v.message="4",v.upgrade="5",v.noop="6";var g=Object.create(null);Object.keys(v).forEach((function(e){g[v[e]]=e}));var m,b={type:"error",data:"parser error"},k="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Object.prototype.toString.call(Blob),w="function"==typeof ArrayBuffer,_=function(e){return"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer instanceof ArrayBuffer},E=function(e,t,n){var r=e.type,i=e.data;return k&&i instanceof Blob?t?n(i):A(i,n):w&&(i instanceof ArrayBuffer||_(i))?t?n(i):A(new Blob([i]),n):n(v[r]+(i||""))},A=function(e,t){var n=new FileReader;return n.onload=function(){var e=n.result.split(",")[1];t("b"+(e||""))},n.readAsDataURL(e)};function O(e){return e instanceof Uint8Array?e:e instanceof ArrayBuffer?new Uint8Array(e):new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}for(var T="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",R="undefined"==typeof Uint8Array?[]:new Uint8Array(256),C=0;C<64;C++)R[T.charCodeAt(C)]=C;var B,S="function"==typeof ArrayBuffer,N=function(e,t){if("string"!=typeof e)return{type:"message",data:x(e,t)};var n=e.charAt(0);return"b"===n?{type:"message",data:L(e.substring(1),t)}:g[n]?e.length>1?{type:g[n],data:e.substring(1)}:{type:g[n]}:b},L=function(e,t){if(S){var n=function(e){var t,n,r,i,o,s=.75*e.length,a=e.length,c=0;"="===e[e.length-1]&&(s--,"="===e[e.length-2]&&s--);var u=new ArrayBuffer(s),h=new Uint8Array(u);for(t=0;t<a;t+=4)n=R[e.charCodeAt(t)],r=R[e.charCodeAt(t+1)],i=R[e.charCodeAt(t+2)],o=R[e.charCodeAt(t+3)],h[c++]=n<<2|r>>4,h[c++]=(15&r)<<4|i>>2,h[c++]=(3&i)<<6|63&o;return u}(e);return x(n,t)}return{base64:!0,data:e}},x=function(e,t){return"blob"===t?e instanceof Blob?e:new Blob([e]):e instanceof ArrayBuffer?e:e.buffer},P=String.fromCharCode(30);function j(){return new TransformStream({transform:function(e,t){!function(e,t){k&&e.data instanceof Blob?e.data.arrayBuffer().then(O).then(t):w&&(e.data instanceof ArrayBuffer||_(e.data))?t(O(e.data)):E(e,!1,(function(e){m||(m=new TextEncoder),t(m.encode(e))}))}(e,(function(n){var r,i=n.length;if(i<126)r=new Uint8Array(1),new DataView(r.buffer).setUint8(0,i);else if(i<65536){r=new Uint8Array(3);var o=new DataView(r.buffer);o.setUint8(0,126),o.setUint16(1,i)}else{r=new Uint8Array(9);var s=new DataView(r.buffer);s.setUint8(0,127),s.setBigUint64(1,BigInt(i))}e.data&&"string"!=typeof e.data&&(r[0]|=128),t.enqueue(r),t.enqueue(n)}))}})}function q(e){return e.reduce((function(e,t){return e+t.length}),0)}function D(e,t){if(e[0].length===t)return e.shift();for(var n=new Uint8Array(t),r=0,i=0;i<t;i++)n[i]=e[0][r++],r===e[0].length&&(e.shift(),r=0);return e.length&&r<e[0].length&&(e[0]=e[0].slice(r)),n}function U(e){if(e)return function(e){for(var t in U.prototype)e[t]=U.prototype[t];return e}(e)}U.prototype.on=U.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},U.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},U.prototype.off=U.prototype.removeListener=U.prototype.removeAllListeners=U.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,r=this._callbacks["$"+e];if(!r)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var i=0;i<r.length;i++)if((n=r[i])===t||n.fn===t){r.splice(i,1);break}return 0===r.length&&delete this._callbacks["$"+e],this},U.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),n=this._callbacks["$"+e],r=1;r<arguments.length;r++)t[r-1]=arguments[r];if(n){r=0;for(var i=(n=n.slice(0)).length;r<i;++r)n[r].apply(this,t)}return this},U.prototype.emitReserved=U.prototype.emit,U.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},U.prototype.hasListeners=function(e){return!!this.listeners(e).length};var I="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")();function F(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return n.reduce((function(t,n){return e.hasOwnProperty(n)&&(t[n]=e[n]),t}),{})}var M=I.setTimeout,V=I.clearTimeout;function H(e,t){t.useNativeTimers?(e.setTimeoutFn=M.bind(I),e.clearTimeoutFn=V.bind(I)):(e.setTimeoutFn=I.setTimeout.bind(I),e.clearTimeoutFn=I.clearTimeout.bind(I))}var K,Y=function(e){o(i,e);var n=l(i);function i(e,r,o){var s;return t(this,i),(s=n.call(this,e)).description=r,s.context=o,s.type="TransportError",s}return r(i)}(h(Error)),W=function(e){o(i,e);var n=l(i);function i(e){var r;return t(this,i),(r=n.call(this)).writable=!1,H(f(r),e),r.opts=e,r.query=e.query,r.socket=e.socket,r}return r(i,[{key:"onError",value:function(e,t,n){return p(s(i.prototype),"emitReserved",this).call(this,"error",new Y(e,t,n)),this}},{key:"open",value:function(){return this.readyState="opening",this.doOpen(),this}},{key:"close",value:function(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}},{key:"send",value:function(e){"open"===this.readyState&&this.write(e)}},{key:"onOpen",value:function(){this.readyState="open",this.writable=!0,p(s(i.prototype),"emitReserved",this).call(this,"open")}},{key:"onData",value:function(e){var t=N(e,this.socket.binaryType);this.onPacket(t)}},{key:"onPacket",value:function(e){p(s(i.prototype),"emitReserved",this).call(this,"packet",e)}},{key:"onClose",value:function(e){this.readyState="closed",p(s(i.prototype),"emitReserved",this).call(this,"close",e)}},{key:"pause",value:function(e){}},{key:"createUri",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e+"://"+this._hostname()+this._port()+this.opts.path+this._query(t)}},{key:"_hostname",value:function(){var e=this.opts.hostname;return-1===e.indexOf(":")?e:"["+e+"]"}},{key:"_port",value:function(){return this.opts.port&&(this.opts.secure&&Number(443!==this.opts.port)||!this.opts.secure&&80!==Number(this.opts.port))?":"+this.opts.port:""}},{key:"_query",value:function(e){var t=function(e){var t="";for(var n in e)e.hasOwnProperty(n)&&(t.length&&(t+="&"),t+=encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t}(e);return t.length?"?"+t:""}}]),i}(U),z="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),J=64,$={},Q=0,X=0;function G(e){var t="";do{t=z[e%J]+t,e=Math.floor(e/J)}while(e>0);return t}function Z(){var e=G(+new Date);return e!==K?(Q=0,K=e):e+"."+G(Q++)}for(;X<J;X++)$[z[X]]=X;var ee=!1;try{ee="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(e){}var te=ee;function ne(e){var t=e.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!t||te))return new XMLHttpRequest}catch(e){}if(!t)try{return new(I[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(e){}}function re(){}var ie=null!=new ne({xdomain:!1}).responseType,oe=function(e){o(s,e);var n=l(s);function s(e){var r;if(t(this,s),(r=n.call(this,e)).polling=!1,"undefined"!=typeof location){var i="https:"===location.protocol,o=location.port;o||(o=i?"443":"80"),r.xd="undefined"!=typeof location&&e.hostname!==location.hostname||o!==e.port}var a=e&&e.forceBase64;return r.supportsBinary=ie&&!a,r.opts.withCredentials&&(r.cookieJar=void 0),r}return r(s,[{key:"name",get:function(){return"polling"}},{key:"doOpen",value:function(){this.poll()}},{key:"pause",value:function(e){var t=this;this.readyState="pausing";var n=function(){t.readyState="paused",e()};if(this.polling||!this.writable){var r=0;this.polling&&(r++,this.once("pollComplete",(function(){--r||n()}))),this.writable||(r++,this.once("drain",(function(){--r||n()})))}else n()}},{key:"poll",value:function(){this.polling=!0,this.doPoll(),this.emitReserved("poll")}},{key:"onData",value:function(e){var t=this;(function(e,t){for(var n=e.split(P),r=[],i=0;i<n.length;i++){var o=N(n[i],t);if(r.push(o),"error"===o.type)break}return r})(e,this.socket.binaryType).forEach((function(e){if("opening"===t.readyState&&"open"===e.type&&t.onOpen(),"close"===e.type)return t.onClose({description:"transport closed by the server"}),!1;t.onPacket(e)})),"closed"!==this.readyState&&(this.polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState&&this.poll())}},{key:"doClose",value:function(){var e=this,t=function(){e.write([{type:"close"}])};"open"===this.readyState?t():this.once("open",t)}},{key:"write",value:function(e){var t=this;this.writable=!1,function(e,t){var n=e.length,r=new Array(n),i=0;e.forEach((function(e,o){E(e,!1,(function(e){r[o]=e,++i===n&&t(r.join(P))}))}))}(e,(function(e){t.doWrite(e,(function(){t.writable=!0,t.emitReserved("drain")}))}))}},{key:"uri",value:function(){var e=this.opts.secure?"https":"http",t=this.query||{};return!1!==this.opts.timestampRequests&&(t[this.opts.timestampParam]=Z()),this.supportsBinary||t.sid||(t.b64=1),this.createUri(e,t)}},{key:"request",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return i(e,{xd:this.xd,cookieJar:this.cookieJar},this.opts),new se(this.uri(),e)}},{key:"doWrite",value:function(e,t){var n=this,r=this.request({method:"POST",data:e});r.on("success",t),r.on("error",(function(e,t){n.onError("xhr post error",e,t)}))}},{key:"doPoll",value:function(){var e=this,t=this.request();t.on("data",this.onData.bind(this)),t.on("error",(function(t,n){e.onError("xhr poll error",t,n)})),this.pollXhr=t}}]),s}(W),se=function(e){o(i,e);var n=l(i);function i(e,r){var o;return t(this,i),H(f(o=n.call(this)),r),o.opts=r,o.method=r.method||"GET",o.uri=e,o.data=void 0!==r.data?r.data:null,o.create(),o}return r(i,[{key:"create",value:function(){var e,t=this,n=F(this.opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");n.xdomain=!!this.opts.xd;var r=this.xhr=new ne(n);try{r.open(this.method,this.uri,!0);try{if(this.opts.extraHeaders)for(var o in r.setDisableHeaderCheck&&r.setDisableHeaderCheck(!0),this.opts.extraHeaders)this.opts.extraHeaders.hasOwnProperty(o)&&r.setRequestHeader(o,this.opts.extraHeaders[o])}catch(e){}if("POST"===this.method)try{r.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(e){}try{r.setRequestHeader("Accept","*/*")}catch(e){}null===(e=this.opts.cookieJar)||void 0===e||e.addCookies(r),"withCredentials"in r&&(r.withCredentials=this.opts.withCredentials),this.opts.requestTimeout&&(r.timeout=this.opts.requestTimeout),r.onreadystatechange=function(){var e;3===r.readyState&&(null===(e=t.opts.cookieJar)||void 0===e||e.parseCookies(r)),4===r.readyState&&(200===r.status||1223===r.status?t.onLoad():t.setTimeoutFn((function(){t.onError("number"==typeof r.status?r.status:0)}),0))},r.send(this.data)}catch(e){return void this.setTimeoutFn((function(){t.onError(e)}),0)}"undefined"!=typeof document&&(this.index=i.requestsCount++,i.requests[this.index]=this)}},{key:"onError",value:function(e){this.emitReserved("error",e,this.xhr),this.cleanup(!0)}},{key:"cleanup",value:function(e){if(void 0!==this.xhr&&null!==this.xhr){if(this.xhr.onreadystatechange=re,e)try{this.xhr.abort()}catch(e){}"undefined"!=typeof document&&delete i.requests[this.index],this.xhr=null}}},{key:"onLoad",value:function(){var e=this.xhr.responseText;null!==e&&(this.emitReserved("data",e),this.emitReserved("success"),this.cleanup())}},{key:"abort",value:function(){this.cleanup()}}]),i}(U);if(se.requestsCount=0,se.requests={},"undefined"!=typeof document)if("function"==typeof attachEvent)attachEvent("onunload",ae);else if("function"==typeof addEventListener){addEventListener("onpagehide"in I?"pagehide":"unload",ae,!1)}function ae(){for(var e in se.requests)se.requests.hasOwnProperty(e)&&se.requests[e].abort()}var ce="function"==typeof Promise&&"function"==typeof Promise.resolve?function(e){return Promise.resolve().then(e)}:function(e,t){return t(e,0)},ue=I.WebSocket||I.MozWebSocket,he="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase(),fe=function(e){o(i,e);var n=l(i);function i(e){var r;return t(this,i),(r=n.call(this,e)).supportsBinary=!e.forceBase64,r}return r(i,[{key:"name",get:function(){return"websocket"}},{key:"doOpen",value:function(){if(this.check()){var e=this.uri(),t=this.opts.protocols,n=he?{}:F(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(n.headers=this.opts.extraHeaders);try{this.ws=he?new ue(e,t,n):t?new ue(e,t):new ue(e)}catch(e){return this.emitReserved("error",e)}this.ws.binaryType=this.socket.binaryType,this.addEventListeners()}}},{key:"addEventListeners",value:function(){var e=this;this.ws.onopen=function(){e.opts.autoUnref&&e.ws._socket.unref(),e.onOpen()},this.ws.onclose=function(t){return e.onClose({description:"websocket connection closed",context:t})},this.ws.onmessage=function(t){return e.onData(t.data)},this.ws.onerror=function(t){return e.onError("websocket error",t)}}},{key:"write",value:function(e){var t=this;this.writable=!1;for(var n=function(){var n=e[r],i=r===e.length-1;E(n,t.supportsBinary,(function(e){try{t.ws.send(e)}catch(e){}i&&ce((function(){t.writable=!0,t.emitReserved("drain")}),t.setTimeoutFn)}))},r=0;r<e.length;r++)n()}},{key:"doClose",value:function(){void 0!==this.ws&&(this.ws.close(),this.ws=null)}},{key:"uri",value:function(){var e=this.opts.secure?"wss":"ws",t=this.query||{};return this.opts.timestampRequests&&(t[this.opts.timestampParam]=Z()),this.supportsBinary||(t.b64=1),this.createUri(e,t)}},{key:"check",value:function(){return!!ue}}]),i}(W),le=function(e){o(i,e);var n=l(i);function i(){return t(this,i),n.apply(this,arguments)}return r(i,[{key:"name",get:function(){return"webtransport"}},{key:"doOpen",value:function(){var e=this;"function"==typeof WebTransport&&(this.transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name]),this.transport.closed.then((function(){e.onClose()})).catch((function(t){e.onError("webtransport error",t)})),this.transport.ready.then((function(){e.transport.createBidirectionalStream().then((function(t){var n=function(e,t){B||(B=new TextDecoder);var n=[],r=0,i=-1,o=!1;return new TransformStream({transform:function(s,a){for(n.push(s);;){if(0===r){if(q(n)<1)break;var c=D(n,1);o=128==(128&c[0]),i=127&c[0],r=i<126?3:126===i?1:2}else if(1===r){if(q(n)<2)break;var u=D(n,2);i=new DataView(u.buffer,u.byteOffset,u.length).getUint16(0),r=3}else if(2===r){if(q(n)<8)break;var h=D(n,8),f=new DataView(h.buffer,h.byteOffset,h.length),l=f.getUint32(0);if(l>Math.pow(2,21)-1){a.enqueue(b);break}i=l*Math.pow(2,32)+f.getUint32(4),r=3}else{if(q(n)<i)break;var p=D(n,i);a.enqueue(N(o?p:B.decode(p),t)),r=0}if(0===i||i>e){a.enqueue(b);break}}}})}(Number.MAX_SAFE_INTEGER,e.socket.binaryType),r=t.readable.pipeThrough(n).getReader(),i=j();i.readable.pipeTo(t.writable),e.writer=i.writable.getWriter();!function t(){r.read().then((function(n){var r=n.done,i=n.value;r||(e.onPacket(i),t())})).catch((function(e){}))}();var o={type:"open"};e.query.sid&&(o.data='{"sid":"'.concat(e.query.sid,'"}')),e.writer.write(o).then((function(){return e.onOpen()}))}))})))}},{key:"write",value:function(e){var t=this;this.writable=!1;for(var n=function(){var n=e[r],i=r===e.length-1;t.writer.write(n).then((function(){i&&ce((function(){t.writable=!0,t.emitReserved("drain")}),t.setTimeoutFn)}))},r=0;r<e.length;r++)n()}},{key:"doClose",value:function(){var e;null===(e=this.transport)||void 0===e||e.close()}}]),i}(W),pe={websocket:fe,webtransport:le,polling:oe},de=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,ye=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];function ve(e){var t=e,n=e.indexOf("["),r=e.indexOf("]");-1!=n&&-1!=r&&(e=e.substring(0,n)+e.substring(n,r).replace(/:/g,";")+e.substring(r,e.length));for(var i,o,s=de.exec(e||""),a={},c=14;c--;)a[ye[c]]=s[c]||"";return-1!=n&&-1!=r&&(a.source=t,a.host=a.host.substring(1,a.host.length-1).replace(/;/g,":"),a.authority=a.authority.replace("[","").replace("]","").replace(/;/g,":"),a.ipv6uri=!0),a.pathNames=function(e,t){var n=/\/{2,9}/g,r=t.replace(n,"/").split("/");"/"!=t.slice(0,1)&&0!==t.length||r.splice(0,1);"/"==t.slice(-1)&&r.splice(r.length-1,1);return r}(0,a.path),a.queryKey=(i=a.query,o={},i.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,(function(e,t,n){t&&(o[t]=n)})),o),a}var ge=function(n){o(a,n);var s=l(a);function a(n){var r,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t(this,a),(r=s.call(this)).binaryType="arraybuffer",r.writeBuffer=[],n&&"object"===e(n)&&(o=n,n=null),n?(n=ve(n),o.hostname=n.host,o.secure="https"===n.protocol||"wss"===n.protocol,o.port=n.port,n.query&&(o.query=n.query)):o.host&&(o.hostname=ve(o.host).host),H(f(r),o),r.secure=null!=o.secure?o.secure:"undefined"!=typeof location&&"https:"===location.protocol,o.hostname&&!o.port&&(o.port=r.secure?"443":"80"),r.hostname=o.hostname||("undefined"!=typeof location?location.hostname:"localhost"),r.port=o.port||("undefined"!=typeof location&&location.port?location.port:r.secure?"443":"80"),r.transports=o.transports||["polling","websocket","webtransport"],r.writeBuffer=[],r.prevBufferLen=0,r.opts=i({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},o),r.opts.path=r.opts.path.replace(/\/$/,"")+(r.opts.addTrailingSlash?"/":""),"string"==typeof r.opts.query&&(r.opts.query=function(e){for(var t={},n=e.split("&"),r=0,i=n.length;r<i;r++){var o=n[r].split("=");t[decodeURIComponent(o[0])]=decodeURIComponent(o[1])}return t}(r.opts.query)),r.id=null,r.upgrades=null,r.pingInterval=null,r.pingTimeout=null,r.pingTimeoutTimer=null,"function"==typeof addEventListener&&(r.opts.closeOnBeforeunload&&(r.beforeunloadEventListener=function(){r.transport&&(r.transport.removeAllListeners(),r.transport.close())},addEventListener("beforeunload",r.beforeunloadEventListener,!1)),"localhost"!==r.hostname&&(r.offlineEventListener=function(){r.onClose("transport close",{description:"network connection lost"})},addEventListener("offline",r.offlineEventListener,!1))),r.open(),r}return r(a,[{key:"createTransport",value:function(e){var t=i({},this.opts.query);t.EIO=4,t.transport=e,this.id&&(t.sid=this.id);var n=i({},this.opts,{query:t,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[e]);return new pe[e](n)}},{key:"open",value:function(){var e,t=this;if(this.opts.rememberUpgrade&&a.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket"))e="websocket";else{if(0===this.transports.length)return void this.setTimeoutFn((function(){t.emitReserved("error","No transports available")}),0);e=this.transports[0]}this.readyState="opening";try{e=this.createTransport(e)}catch(e){return this.transports.shift(),void this.open()}e.open(),this.setTransport(e)}},{key:"setTransport",value:function(e){var t=this;this.transport&&this.transport.removeAllListeners(),this.transport=e,e.on("drain",this.onDrain.bind(this)).on("packet",this.onPacket.bind(this)).on("error",this.onError.bind(this)).on("close",(function(e){return t.onClose("transport close",e)}))}},{key:"probe",value:function(e){var t=this,n=this.createTransport(e),r=!1;a.priorWebsocketSuccess=!1;var i=function(){r||(n.send([{type:"ping",data:"probe"}]),n.once("packet",(function(e){if(!r)if("pong"===e.type&&"probe"===e.data){if(t.upgrading=!0,t.emitReserved("upgrading",n),!n)return;a.priorWebsocketSuccess="websocket"===n.name,t.transport.pause((function(){r||"closed"!==t.readyState&&(f(),t.setTransport(n),n.send([{type:"upgrade"}]),t.emitReserved("upgrade",n),n=null,t.upgrading=!1,t.flush())}))}else{var i=new Error("probe error");i.transport=n.name,t.emitReserved("upgradeError",i)}})))};function o(){r||(r=!0,f(),n.close(),n=null)}var s=function(e){var r=new Error("probe error: "+e);r.transport=n.name,o(),t.emitReserved("upgradeError",r)};function c(){s("transport closed")}function u(){s("socket closed")}function h(e){n&&e.name!==n.name&&o()}var f=function(){n.removeListener("open",i),n.removeListener("error",s),n.removeListener("close",c),t.off("close",u),t.off("upgrading",h)};n.once("open",i),n.once("error",s),n.once("close",c),this.once("close",u),this.once("upgrading",h),-1!==this.upgrades.indexOf("webtransport")&&"webtransport"!==e?this.setTimeoutFn((function(){r||n.open()}),200):n.open()}},{key:"onOpen",value:function(){if(this.readyState="open",a.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush(),"open"===this.readyState&&this.opts.upgrade)for(var e=0,t=this.upgrades.length;e<t;e++)this.probe(this.upgrades[e])}},{key:"onPacket",value:function(e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(this.emitReserved("packet",e),this.emitReserved("heartbeat"),this.resetPingTimeout(),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this.sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong");break;case"error":var t=new Error("server error");t.code=e.data,this.onError(t);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data)}}},{key:"onHandshake",value:function(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this.upgrades=this.filterUpgrades(e.upgrades),this.pingInterval=e.pingInterval,this.pingTimeout=e.pingTimeout,this.maxPayload=e.maxPayload,this.onOpen(),"closed"!==this.readyState&&this.resetPingTimeout()}},{key:"resetPingTimeout",value:function(){var e=this;this.clearTimeoutFn(this.pingTimeoutTimer),this.pingTimeoutTimer=this.setTimeoutFn((function(){e.onClose("ping timeout")}),this.pingInterval+this.pingTimeout),this.opts.autoUnref&&this.pingTimeoutTimer.unref()}},{key:"onDrain",value:function(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}},{key:"flush",value:function(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){var e=this.getWritablePackets();this.transport.send(e),this.prevBufferLen=e.length,this.emitReserved("flush")}}},{key:"getWritablePackets",value:function(){if(!(this.maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;for(var e,t=1,n=0;n<this.writeBuffer.length;n++){var r=this.writeBuffer[n].data;if(r&&(t+="string"==typeof(e=r)?function(e){for(var t=0,n=0,r=0,i=e.length;r<i;r++)(t=e.charCodeAt(r))<128?n+=1:t<2048?n+=2:t<55296||t>=57344?n+=3:(r++,n+=4);return n}(e):Math.ceil(1.33*(e.byteLength||e.size))),n>0&&t>this.maxPayload)return this.writeBuffer.slice(0,n);t+=2}return this.writeBuffer}},{key:"write",value:function(e,t,n){return this.sendPacket("message",e,t,n),this}},{key:"send",value:function(e,t,n){return this.sendPacket("message",e,t,n),this}},{key:"sendPacket",value:function(e,t,n,r){if("function"==typeof t&&(r=t,t=void 0),"function"==typeof n&&(r=n,n=null),"closing"!==this.readyState&&"closed"!==this.readyState){(n=n||{}).compress=!1!==n.compress;var i={type:e,data:t,options:n};this.emitReserved("packetCreate",i),this.writeBuffer.push(i),r&&this.once("flush",r),this.flush()}}},{key:"close",value:function(){var e=this,t=function(){e.onClose("forced close"),e.transport.close()},n=function n(){e.off("upgrade",n),e.off("upgradeError",n),t()},r=function(){e.once("upgrade",n),e.once("upgradeError",n)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",(function(){e.upgrading?r():t()})):this.upgrading?r():t()),this}},{key:"onError",value:function(e){a.priorWebsocketSuccess=!1,this.emitReserved("error",e),this.onClose("transport error",e)}},{key:"onClose",value:function(e,t){"opening"!==this.readyState&&"open"!==this.readyState&&"closing"!==this.readyState||(this.clearTimeoutFn(this.pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),"function"==typeof removeEventListener&&(removeEventListener("beforeunload",this.beforeunloadEventListener,!1),removeEventListener("offline",this.offlineEventListener,!1)),this.readyState="closed",this.id=null,this.emitReserved("close",e,t),this.writeBuffer=[],this.prevBufferLen=0)}},{key:"filterUpgrades",value:function(e){for(var t=[],n=0,r=e.length;n<r;n++)~this.transports.indexOf(e[n])&&t.push(e[n]);return t}}]),a}(U);ge.protocol=4,ge.protocol;var me="function"==typeof ArrayBuffer,be=function(e){return"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e.buffer instanceof ArrayBuffer},ke=Object.prototype.toString,we="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===ke.call(Blob),_e="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===ke.call(File);function Ee(e){return me&&(e instanceof ArrayBuffer||be(e))||we&&e instanceof Blob||_e&&e instanceof File}function Ae(t,n){if(!t||"object"!==e(t))return!1;if(Array.isArray(t)){for(var r=0,i=t.length;r<i;r++)if(Ae(t[r]))return!0;return!1}if(Ee(t))return!0;if(t.toJSON&&"function"==typeof t.toJSON&&1===arguments.length)return Ae(t.toJSON(),!0);for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)&&Ae(t[o]))return!0;return!1}function Oe(e){var t=[],n=e.data,r=e;return r.data=Te(n,t),r.attachments=t.length,{packet:r,buffers:t}}function Te(t,n){if(!t)return t;if(Ee(t)){var r={_placeholder:!0,num:n.length};return n.push(t),r}if(Array.isArray(t)){for(var i=new Array(t.length),o=0;o<t.length;o++)i[o]=Te(t[o],n);return i}if("object"===e(t)&&!(t instanceof Date)){var s={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(s[a]=Te(t[a],n));return s}return t}function Re(e,t){return e.data=Ce(e.data,t),delete e.attachments,e}function Ce(t,n){if(!t)return t;if(t&&!0===t._placeholder){if("number"==typeof t.num&&t.num>=0&&t.num<n.length)return n[t.num];throw new Error("illegal attachments")}if(Array.isArray(t))for(var r=0;r<t.length;r++)t[r]=Ce(t[r],n);else if("object"===e(t))for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(t[i]=Ce(t[i],n));return t}var Be,Se=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"];!function(e){e[e.CONNECT=0]="CONNECT",e[e.DISCONNECT=1]="DISCONNECT",e[e.EVENT=2]="EVENT",e[e.ACK=3]="ACK",e[e.CONNECT_ERROR=4]="CONNECT_ERROR",e[e.BINARY_EVENT=5]="BINARY_EVENT",e[e.BINARY_ACK=6]="BINARY_ACK"}(Be||(Be={}));var Ne=function(){function e(n){t(this,e),this.replacer=n}return r(e,[{key:"encode",value:function(e){return e.type!==Be.EVENT&&e.type!==Be.ACK||!Ae(e)?[this.encodeAsString(e)]:this.encodeAsBinary({type:e.type===Be.EVENT?Be.BINARY_EVENT:Be.BINARY_ACK,nsp:e.nsp,data:e.data,id:e.id})}},{key:"encodeAsString",value:function(e){var t=""+e.type;return e.type!==Be.BINARY_EVENT&&e.type!==Be.BINARY_ACK||(t+=e.attachments+"-"),e.nsp&&"/"!==e.nsp&&(t+=e.nsp+","),null!=e.id&&(t+=e.id),null!=e.data&&(t+=JSON.stringify(e.data,this.replacer)),t}},{key:"encodeAsBinary",value:function(e){var t=Oe(e),n=this.encodeAsString(t.packet),r=t.buffers;return r.unshift(n),r}}]),e}();function Le(e){return"[object Object]"===Object.prototype.toString.call(e)}var xe=function(e){o(i,e);var n=l(i);function i(e){var r;return t(this,i),(r=n.call(this)).reviver=e,r}return r(i,[{key:"add",value:function(e){var t;if("string"==typeof e){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");var n=(t=this.decodeString(e)).type===Be.BINARY_EVENT;n||t.type===Be.BINARY_ACK?(t.type=n?Be.EVENT:Be.ACK,this.reconstructor=new Pe(t),0===t.attachments&&p(s(i.prototype),"emitReserved",this).call(this,"decoded",t)):p(s(i.prototype),"emitReserved",this).call(this,"decoded",t)}else{if(!Ee(e)&&!e.base64)throw new Error("Unknown type: "+e);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");(t=this.reconstructor.takeBinaryData(e))&&(this.reconstructor=null,p(s(i.prototype),"emitReserved",this).call(this,"decoded",t))}}},{key:"decodeString",value:function(e){var t=0,n={type:Number(e.charAt(0))};if(void 0===Be[n.type])throw new Error("unknown packet type "+n.type);if(n.type===Be.BINARY_EVENT||n.type===Be.BINARY_ACK){for(var r=t+1;"-"!==e.charAt(++t)&&t!=e.length;);var o=e.substring(r,t);if(o!=Number(o)||"-"!==e.charAt(t))throw new Error("Illegal attachments");n.attachments=Number(o)}if("/"===e.charAt(t+1)){for(var s=t+1;++t;){if(","===e.charAt(t))break;if(t===e.length)break}n.nsp=e.substring(s,t)}else n.nsp="/";var a=e.charAt(t+1);if(""!==a&&Number(a)==a){for(var c=t+1;++t;){var u=e.charAt(t);if(null==u||Number(u)!=u){--t;break}if(t===e.length)break}n.id=Number(e.substring(c,t+1))}if(e.charAt(++t)){var h=this.tryParse(e.substr(t));if(!i.isPayloadValid(n.type,h))throw new Error("invalid payload");n.data=h}return n}},{key:"tryParse",value:function(e){try{return JSON.parse(e,this.reviver)}catch(e){return!1}}},{key:"destroy",value:function(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}],[{key:"isPayloadValid",value:function(e,t){switch(e){case Be.CONNECT:return Le(t);case Be.DISCONNECT:return void 0===t;case Be.CONNECT_ERROR:return"string"==typeof t||Le(t);case Be.EVENT:case Be.BINARY_EVENT:return Array.isArray(t)&&("number"==typeof t[0]||"string"==typeof t[0]&&-1===Se.indexOf(t[0]));case Be.ACK:case Be.BINARY_ACK:return Array.isArray(t)}}}]),i}(U),Pe=function(){function e(n){t(this,e),this.packet=n,this.buffers=[],this.reconPack=n}return r(e,[{key:"takeBinaryData",value:function(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){var t=Re(this.reconPack,this.buffers);return this.finishedReconstruction(),t}return null}},{key:"finishedReconstruction",value:function(){this.reconPack=null,this.buffers=[]}}]),e}(),je=Object.freeze({__proto__:null,protocol:5,get PacketType(){return Be},Encoder:Ne,Decoder:xe});function qe(e,t,n){return e.on(t,n),function(){e.off(t,n)}}var De=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1}),Ue=function(e){o(a,e);var n=l(a);function a(e,r,o){var s;return t(this,a),(s=n.call(this)).connected=!1,s.recovered=!1,s.receiveBuffer=[],s.sendBuffer=[],s._queue=[],s._queueSeq=0,s.ids=0,s.acks={},s.flags={},s.io=e,s.nsp=r,o&&o.auth&&(s.auth=o.auth),s._opts=i({},o),s.io._autoConnect&&s.open(),s}return r(a,[{key:"disconnected",get:function(){return!this.connected}},{key:"subEvents",value:function(){if(!this.subs){var e=this.io;this.subs=[qe(e,"open",this.onopen.bind(this)),qe(e,"packet",this.onpacket.bind(this)),qe(e,"error",this.onerror.bind(this)),qe(e,"close",this.onclose.bind(this))]}}},{key:"active",get:function(){return!!this.subs}},{key:"connect",value:function(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}},{key:"open",value:function(){return this.connect()}},{key:"send",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.unshift("message"),this.emit.apply(this,t),this}},{key:"emit",value:function(e){if(De.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];if(n.unshift(e),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(n),this;var i={type:Be.EVENT,data:n,options:{}};if(i.options.compress=!1!==this.flags.compress,"function"==typeof n[n.length-1]){var o=this.ids++,s=n.pop();this._registerAckCallback(o,s),i.id=o}var a=this.io.engine&&this.io.engine.transport&&this.io.engine.transport.writable;return this.flags.volatile&&(!a||!this.connected)||(this.connected?(this.notifyOutgoingListeners(i),this.packet(i)):this.sendBuffer.push(i)),this.flags={},this}},{key:"_registerAckCallback",value:function(e,t){var n,r=this,i=null!==(n=this.flags.timeout)&&void 0!==n?n:this._opts.ackTimeout;if(void 0!==i){var o=this.io.setTimeoutFn((function(){delete r.acks[e];for(var n=0;n<r.sendBuffer.length;n++)r.sendBuffer[n].id===e&&r.sendBuffer.splice(n,1);t.call(r,new Error("operation has timed out"))}),i),s=function(){r.io.clearTimeoutFn(o);for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];t.apply(r,n)};s.withError=!0,this.acks[e]=s}else this.acks[e]=t}},{key:"emitWithAck",value:function(e){for(var t=this,n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];return new Promise((function(n,i){var o=function(e,t){return e?i(e):n(t)};o.withError=!0,r.push(o),t.emit.apply(t,[e].concat(r))}))}},{key:"_addToQueue",value:function(e){var t,n=this;"function"==typeof e[e.length-1]&&(t=e.pop());var r={id:this._queueSeq++,tryCount:0,pending:!1,args:e,flags:i({fromQueue:!0},this.flags)};e.push((function(e){if(r===n._queue[0]){if(null!==e)r.tryCount>n._opts.retries&&(n._queue.shift(),t&&t(e));else if(n._queue.shift(),t){for(var i=arguments.length,o=new Array(i>1?i-1:0),s=1;s<i;s++)o[s-1]=arguments[s];t.apply(void 0,[null].concat(o))}return r.pending=!1,n._drainQueue()}})),this._queue.push(r),this._drainQueue()}},{key:"_drainQueue",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.connected&&0!==this._queue.length){var t=this._queue[0];t.pending&&!e||(t.pending=!0,t.tryCount++,this.flags=t.flags,this.emit.apply(this,t.args))}}},{key:"packet",value:function(e){e.nsp=this.nsp,this.io._packet(e)}},{key:"onopen",value:function(){var e=this;"function"==typeof this.auth?this.auth((function(t){e._sendConnectPacket(t)})):this._sendConnectPacket(this.auth)}},{key:"_sendConnectPacket",value:function(e){this.packet({type:Be.CONNECT,data:this._pid?i({pid:this._pid,offset:this._lastOffset},e):e})}},{key:"onerror",value:function(e){this.connected||this.emitReserved("connect_error",e)}},{key:"onclose",value:function(e,t){this.connected=!1,delete this.id,this.emitReserved("disconnect",e,t),this._clearAcks()}},{key:"_clearAcks",value:function(){var e=this;Object.keys(this.acks).forEach((function(t){if(!e.sendBuffer.some((function(e){return String(e.id)===t}))){var n=e.acks[t];delete e.acks[t],n.withError&&n.call(e,new Error("socket has been disconnected"))}}))}},{key:"onpacket",value:function(e){if(e.nsp===this.nsp)switch(e.type){case Be.CONNECT:e.data&&e.data.sid?this.onconnect(e.data.sid,e.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case Be.EVENT:case Be.BINARY_EVENT:this.onevent(e);break;case Be.ACK:case Be.BINARY_ACK:this.onack(e);break;case Be.DISCONNECT:this.ondisconnect();break;case Be.CONNECT_ERROR:this.destroy();var t=new Error(e.data.message);t.data=e.data.data,this.emitReserved("connect_error",t)}}},{key:"onevent",value:function(e){var t=e.data||[];null!=e.id&&t.push(this.ack(e.id)),this.connected?this.emitEvent(t):this.receiveBuffer.push(Object.freeze(t))}},{key:"emitEvent",value:function(e){if(this._anyListeners&&this._anyListeners.length){var t,n=y(this._anyListeners.slice());try{for(n.s();!(t=n.n()).done;){t.value.apply(this,e)}}catch(e){n.e(e)}finally{n.f()}}p(s(a.prototype),"emit",this).apply(this,e),this._pid&&e.length&&"string"==typeof e[e.length-1]&&(this._lastOffset=e[e.length-1])}},{key:"ack",value:function(e){var t=this,n=!1;return function(){if(!n){n=!0;for(var r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];t.packet({type:Be.ACK,id:e,data:i})}}}},{key:"onack",value:function(e){var t=this.acks[e.id];"function"==typeof t&&(delete this.acks[e.id],t.withError&&e.data.unshift(null),t.apply(this,e.data))}},{key:"onconnect",value:function(e,t){this.id=e,this.recovered=t&&this._pid===t,this._pid=t,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}},{key:"emitBuffered",value:function(){var e=this;this.receiveBuffer.forEach((function(t){return e.emitEvent(t)})),this.receiveBuffer=[],this.sendBuffer.forEach((function(t){e.notifyOutgoingListeners(t),e.packet(t)})),this.sendBuffer=[]}},{key:"ondisconnect",value:function(){this.destroy(),this.onclose("io server disconnect")}},{key:"destroy",value:function(){this.subs&&(this.subs.forEach((function(e){return e()})),this.subs=void 0),this.io._destroy(this)}},{key:"disconnect",value:function(){return this.connected&&this.packet({type:Be.DISCONNECT}),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}},{key:"close",value:function(){return this.disconnect()}},{key:"compress",value:function(e){return this.flags.compress=e,this}},{key:"volatile",get:function(){return this.flags.volatile=!0,this}},{key:"timeout",value:function(e){return this.flags.timeout=e,this}},{key:"onAny",value:function(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}},{key:"prependAny",value:function(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}},{key:"offAny",value:function(e){if(!this._anyListeners)return this;if(e){for(var t=this._anyListeners,n=0;n<t.length;n++)if(e===t[n])return t.splice(n,1),this}else this._anyListeners=[];return this}},{key:"listenersAny",value:function(){return this._anyListeners||[]}},{key:"onAnyOutgoing",value:function(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}},{key:"prependAnyOutgoing",value:function(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}},{key:"offAnyOutgoing",value:function(e){if(!this._anyOutgoingListeners)return this;if(e){for(var t=this._anyOutgoingListeners,n=0;n<t.length;n++)if(e===t[n])return t.splice(n,1),this}else this._anyOutgoingListeners=[];return this}},{key:"listenersAnyOutgoing",value:function(){return this._anyOutgoingListeners||[]}},{key:"notifyOutgoingListeners",value:function(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){var t,n=y(this._anyOutgoingListeners.slice());try{for(n.s();!(t=n.n()).done;){t.value.apply(this,e.data)}}catch(e){n.e(e)}finally{n.f()}}}}]),a}(U);function Ie(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}Ie.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),n=Math.floor(t*this.jitter*e);e=0==(1&Math.floor(10*t))?e-n:e+n}return 0|Math.min(e,this.max)},Ie.prototype.reset=function(){this.attempts=0},Ie.prototype.setMin=function(e){this.ms=e},Ie.prototype.setMax=function(e){this.max=e},Ie.prototype.setJitter=function(e){this.jitter=e};var Fe=function(n){o(s,n);var i=l(s);function s(n,r){var o,a;t(this,s),(o=i.call(this)).nsps={},o.subs=[],n&&"object"===e(n)&&(r=n,n=void 0),(r=r||{}).path=r.path||"/socket.io",o.opts=r,H(f(o),r),o.reconnection(!1!==r.reconnection),o.reconnectionAttempts(r.reconnectionAttempts||1/0),o.reconnectionDelay(r.reconnectionDelay||1e3),o.reconnectionDelayMax(r.reconnectionDelayMax||5e3),o.randomizationFactor(null!==(a=r.randomizationFactor)&&void 0!==a?a:.5),o.backoff=new Ie({min:o.reconnectionDelay(),max:o.reconnectionDelayMax(),jitter:o.randomizationFactor()}),o.timeout(null==r.timeout?2e4:r.timeout),o._readyState="closed",o.uri=n;var c=r.parser||je;return o.encoder=new c.Encoder,o.decoder=new c.Decoder,o._autoConnect=!1!==r.autoConnect,o._autoConnect&&o.open(),o}return r(s,[{key:"reconnection",value:function(e){return arguments.length?(this._reconnection=!!e,this):this._reconnection}},{key:"reconnectionAttempts",value:function(e){return void 0===e?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}},{key:"reconnectionDelay",value:function(e){var t;return void 0===e?this._reconnectionDelay:(this._reconnectionDelay=e,null===(t=this.backoff)||void 0===t||t.setMin(e),this)}},{key:"randomizationFactor",value:function(e){var t;return void 0===e?this._randomizationFactor:(this._randomizationFactor=e,null===(t=this.backoff)||void 0===t||t.setJitter(e),this)}},{key:"reconnectionDelayMax",value:function(e){var t;return void 0===e?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,null===(t=this.backoff)||void 0===t||t.setMax(e),this)}},{key:"timeout",value:function(e){return arguments.length?(this._timeout=e,this):this._timeout}},{key:"maybeReconnectOnOpen",value:function(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}},{key:"open",value:function(e){var t=this;if(~this._readyState.indexOf("open"))return this;this.engine=new ge(this.uri,this.opts);var n=this.engine,r=this;this._readyState="opening",this.skipReconnect=!1;var i=qe(n,"open",(function(){r.onopen(),e&&e()})),o=function(n){t.cleanup(),t._readyState="closed",t.emitReserved("error",n),e?e(n):t.maybeReconnectOnOpen()},s=qe(n,"error",o);if(!1!==this._timeout){var a=this._timeout,c=this.setTimeoutFn((function(){i(),o(new Error("timeout")),n.close()}),a);this.opts.autoUnref&&c.unref(),this.subs.push((function(){t.clearTimeoutFn(c)}))}return this.subs.push(i),this.subs.push(s),this}},{key:"connect",value:function(e){return this.open(e)}},{key:"onopen",value:function(){this.cleanup(),this._readyState="open",this.emitReserved("open");var e=this.engine;this.subs.push(qe(e,"ping",this.onping.bind(this)),qe(e,"data",this.ondata.bind(this)),qe(e,"error",this.onerror.bind(this)),qe(e,"close",this.onclose.bind(this)),qe(this.decoder,"decoded",this.ondecoded.bind(this)))}},{key:"onping",value:function(){this.emitReserved("ping")}},{key:"ondata",value:function(e){try{this.decoder.add(e)}catch(e){this.onclose("parse error",e)}}},{key:"ondecoded",value:function(e){var t=this;ce((function(){t.emitReserved("packet",e)}),this.setTimeoutFn)}},{key:"onerror",value:function(e){this.emitReserved("error",e)}},{key:"socket",value:function(e,t){var n=this.nsps[e];return n?this._autoConnect&&!n.active&&n.connect():(n=new Ue(this,e,t),this.nsps[e]=n),n}},{key:"_destroy",value:function(e){for(var t=0,n=Object.keys(this.nsps);t<n.length;t++){var r=n[t];if(this.nsps[r].active)return}this._close()}},{key:"_packet",value:function(e){for(var t=this.encoder.encode(e),n=0;n<t.length;n++)this.engine.write(t[n],e.options)}},{key:"cleanup",value:function(){this.subs.forEach((function(e){return e()})),this.subs.length=0,this.decoder.destroy()}},{key:"_close",value:function(){this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close"),this.engine&&this.engine.close()}},{key:"disconnect",value:function(){return this._close()}},{key:"onclose",value:function(e,t){this.cleanup(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,t),this._reconnection&&!this.skipReconnect&&this.reconnect()}},{key:"reconnect",value:function(){var e=this;if(this._reconnecting||this.skipReconnect)return this;var t=this;if(this.backoff.attempts>=this._reconnectionAttempts)this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{var n=this.backoff.duration();this._reconnecting=!0;var r=this.setTimeoutFn((function(){t.skipReconnect||(e.emitReserved("reconnect_attempt",t.backoff.attempts),t.skipReconnect||t.open((function(n){n?(t._reconnecting=!1,t.reconnect(),e.emitReserved("reconnect_error",n)):t.onreconnect()})))}),n);this.opts.autoUnref&&r.unref(),this.subs.push((function(){e.clearTimeoutFn(r)}))}}},{key:"onreconnect",value:function(){var e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}}]),s}(U),Me={};function Ve(t,n){"object"===e(t)&&(n=t,t=void 0);var r,i=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=e;n=n||"undefined"!=typeof location&&location,null==e&&(e=n.protocol+"//"+n.host),"string"==typeof e&&("/"===e.charAt(0)&&(e="/"===e.charAt(1)?n.protocol+e:n.host+e),/^(https?|wss?):\/\//.test(e)||(e=void 0!==n?n.protocol+"//"+e:"https://"+e),r=ve(e)),r.port||(/^(http|ws)$/.test(r.protocol)?r.port="80":/^(http|ws)s$/.test(r.protocol)&&(r.port="443")),r.path=r.path||"/";var i=-1!==r.host.indexOf(":")?"["+r.host+"]":r.host;return r.id=r.protocol+"://"+i+":"+r.port+t,r.href=r.protocol+"://"+i+(n&&n.port===r.port?"":":"+r.port),r}(t,(n=n||{}).path||"/socket.io"),o=i.source,s=i.id,a=i.path,c=Me[s]&&a in Me[s].nsps;return n.forceNew||n["force new connection"]||!1===n.multiplex||c?r=new Fe(o,n):(Me[s]||(Me[s]=new Fe(o,n)),r=Me[s]),i.query&&!n.query&&(n.query=i.queryKey),r.socket(i.path,n)}return i(Ve,{Manager:Fe,Socket:Ue,io:Ve,connect:Ve}),Ve}));
//# sourceMappingURL=socket.io.min.js.map
/* pytesNET/tail.DateTime v.0.4.13 | Basic Version | @author SamBrishes, pytesNET <sam@pytes.net> | @license MIT */
!function(t,e){"function"==typeof define&&define.amd?define(function(){return e(t,t.document)}):"object"==typeof module&&module.exports?module.exports=e(t,t.document):(void 0===t.tail&&(t.tail={}),t.tail.DateTime=t.tail.datetime=e(t,t.document),"undefined"!=typeof jQuery&&(jQuery.fn.DateTime=jQuery.fn.datetime=function(t){var e,i=[];return this.each(function(){!1!==(e=tail.DateTime(this,t))&&i.push(e)}),1===i.length?i[0]:0!==i.length&&i}),"undefined"!=typeof MooTools&&(Element.implement({DateTime:function(t){return new tail.DateTime(this,t)}}),Element.implement({datetime:function(t){return new tail.DateTime(this,t)}})))}(window,function(h,d){"use strict";function u(t,e){return!!(t&&"classList"in t)&&t.classList.contains(e)}function a(t,e){return t&&"classList"in t?t.classList.add(e):void 0}function n(t,e){return t&&"classList"in t?t.classList.remove(e):void 0}function s(t,e,i){if(CustomEvent&&CustomEvent.name)var a=new CustomEvent(e,i);else(a=d.createEvent("CustomEvent")).initCustomEvent(e,!!i.bubbles,!!i.cancelable,i.detail);return t.dispatchEvent(a)}function o(t,e){if("function"==typeof Object.assign)return Object.assign({},t,e||{});var i=Object.constructor();for(var a in t)i[a]=a in e?e[a]:t[a];return i}function p(t,e){var i=d.createElement(t);return i.className=e&&e.join?e.join(" "):e||"",i}function v(t){return t.charAt(0).toUpperCase()+t.slice(1)}function c(t,e,i){var a=t instanceof Date?t:!!t&&new Date(t);return a instanceof Date&&!isNaN(a.getDate())&&(i&&a.setHours(0,0,0,0),!0===e?a.getTime():a)}d.forms.inputmode=!0;var l=function(t,e){if((t="string"==typeof t?d.querySelectorAll(t):t)instanceof NodeList||t instanceof HTMLCollection||t instanceof Array){for(var i=[],a=t.length,n=0;n<a;n++)i.push(new l(t[n],e));return 1===i.length?i[0]:0!==i.length&&i}if(!(t instanceof Element))return!1;if(!(this instanceof l))return new l(t,e);if(l.inst[t.getAttribute("data-tail-datetime")])return l.inst[t.getAttribute("data-tail-datetime")];if(t.getAttribute("data-datetime")){var s=JSON.parse(t.getAttribute("data-datetime").replace(/\'/g,'"'));s instanceof Object&&(e=o(e,s))}return this.e=t,this.id=++l.count,this.con=o(l.defaults,e),(l.inst["tail-"+this.id]=this).e.setAttribute("data-tail-datetime","tail-"+this.id),this.init()};return l.version="0.4.13",l.status="beta",l.count=0,l.inst={},l.defaults={animate:!0,classNames:!1,closeButton:!0,dateFormat:"YYYY-mm-dd",dateStart:!1,dateRanges:[],dateBlacklist:!0,dateEnd:!1,locale:"en",position:"bottom",rtl:"auto",startOpen:!1,stayOpen:!1,time12h:!1,timeFormat:"HH:ii:ss",timeHours:!0,timeMinutes:!0,timeSeconds:0,timeIncrement:!0,timeStepHours:1,timeStepMinutes:5,timeStepSeconds:5,today:!0,tooltips:[],viewDefault:"days",viewDecades:!0,viewYears:!0,viewMonths:!0,viewDays:!0,weekStart:0},l.strings={en:{months:["January","February","March","April","May","June","July","August","September","October","November","December"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shorts:["SUN","MON","TUE","WED","THU","FRI","SAT"],time:["Hours","Minutes","Seconds"],header:["Select a Month","Select a Year","Select a Decade","Select a Time"]},modify:function(t,e,i){if(!(t in this))return!1;if(e instanceof Object)for(var a in e)this.modify(t,a,e[a]);else this[t][e]="string"==typeof i?i:this[t][e];return!0},register:function(t,e){return"string"==typeof t&&e instanceof Object&&(this[t]=e,!0)}},l.prototype={init:function(){this.prepare();var t=this.__.shorts.slice(this.con.weekStart).concat(this.__.shorts.slice(0,this.con.weekStart));this.weekdays="<thead>\n<tr>\n";for(var e=0;e<7;e++)this.weekdays+='<th class="calendar-week">'+t[e]+"</th>";this.weekdays+="\n</tr>\n</thead>",this.select=c(this.e.getAttribute("data-value")||this.e.value),(!this.select||this.select<this.con.dateStart||this.select>this.con.dateEnd)&&(this.select=null),null==this.view&&(this.view={type:this.con.viewDefault,date:this.select||new Date});var i=["Hours","Minutes","Seconds"];for(e=0;e<3;e++)if("number"==typeof this.con["time"+i[e]])this.view.date["set"+i[e]](this.con["time"+i[e]]);else for(;this.view.date["get"+i[e]]()%this.con["timeStep"+i[e]]!=0;)this.view.date["set"+i[e]](this.view.date["get"+i[e]]()+1);return this.ampm=12<this.view.date.getHours(),this.events={},this.dt=this.renderCalendar(),this.con.startOpen&&this.open(),this.select&&this.selectDate(this.select),this.bind()},prepare:function(){if(this.__=o(l.strings.en,l.strings[this.con.locale]||{}),this.con.dateStart=c(this.con.dateStart,!0,!0)||-9999999999999,this.con.dateEnd=c(this.con.dateEnd,!0,!0)||9999999999999,this.con.viewDefault=this.con.dateFormat?this.con.viewDefault:"time","string"==typeof this.con.weekStart&&(this.con.weekStart=l.strings.en.shorts.indexOf(this.con.weekStart)),this.con.weekStart<0&&6<this.con.weekStart&&(this.con.weekStart=0),0<this.con.dateRanges.length){for(var t=[],e=(n=this.con.dateRanges).length,i=0;i<e;i++)n[i]instanceof Object&&(n[i].start||n[i].days)&&(!1===(n[i].start=c(n[i].start||!1,!0,!0))?n[i].start=n[i].end=1/0:(!1===(n[i].end=c(n[i].end||!1,!0,!0))&&(n[i].end=n[i].start),n[i].start=n[i].start>n[i].end?[n[i].end,n[i].end=n[i].start][0]:n[i].start),n[i].days=!("days"in n[i])||n[i].days,n[i].days="boolean"!=typeof n[i].days?function(t){for(var e=[],i=t.length,a=0;a<i;a++)"string"==typeof t[a]&&(t[a]=l.strings.en.shorts.indexOf(t[a])),0<=t[a]&&t[a]<=6&&e.push(t[a]);return e}(n[i].days instanceof Array?n[i].days:[n[i].days]):[0,1,2,3,4,5,6],t.push({start:n[i].start,end:n[i].end,days:n[i].days}));this.con.dateRanges=t}if(0<this.con.tooltips.length){t=[];var a,n,s=this.con.tooltips;for(e=s.length,i=0;i<e;i++)s[i]instanceof Object&&s[i].date&&(s[i].date instanceof Array?(a=c(s[i].date[0]||!1,!0,!0),n=c(s[i].date[1]||!1,!0,!0)||a):a=n=c(s[i].date||!1,!0,!0),a&&t.push({date:a!==n?[a,n]:a,text:s[i].text||"Tooltip",color:s[i].color||"inherit",element:s[i].element||(r=d.createElement("DIV"),r.className="calendar-tooltip",r.innerHTML='<div class="tooltip-inner">'+s[i].text||"Tooltip</div>",r)}));this.con.tooltips=t}var r;return this},bind:function(){var e=this;return void 0===this._bind&&(this.e.addEventListener("focusin",function(t){e.open.call(e)}),this.e.addEventListener("keyup",function(t){e.callback.call(e,t)}),d.addEventListener("keyup",function(t){e.dt.contains(t.target)&&e.callback.call(e,t)}),d.addEventListener("click",function(t){e.dt.contains(t.target)?e.callback.call(e,t):!e.e.contains(t.target)&&u(e.dt,"calendar-open")&&(t.target==e.dt||t.target==e.e||e.con.stayOpen||e.close.call(e))}),d.addEventListener("mouseover",function(t){e.dt.contains(t.target)&&e.callback.call(e,t)}),this._bind=!0),this},callback:function(t){var e,i=t.target,a="getAttribute",n="data-action",s=i[a](n)?i:i.parentElement[a](n)?i.parentElement:i,r="data-tooltip";if("mouseover"==t.type&&(!1!==(e=i[a](r)?i:!!s[a](r)&&s)?this.dt.querySelector("#tooltip-"+e[a](r)+"-"+e[a](r+"-time"))||this.showTooltip(e[a](r),e,e[a](r+"-time")):this.dt.querySelector(".calendar-tooltip:not(.remove)")&&this.hideTooltip(this.dt.querySelector(".calendar-tooltip").id.slice(8))),"click"==t.type){if(!s||1!=t.buttons&&1!=(t.which||t.button))return;if(s.hasAttribute("data-disabled"))return;switch(s[a](n)){case"prev":case"next":return this.browseView(s[a](n));case"cancel":this.con.stayOpen||this.close();break;case"submit":return this.con.stayOpen||this.close(),this.selectDate(this.fetchDate(parseInt(s[a]("data-date"))));case"view":return this.switchDate(s[a]("data-year")||null,s[a]("data-month")||null,s[a]("data-day")||null),this.switchView(s[a]("data-view"))}}if("keyup"==t.type){if("INPUT"!=t.target.tagName&&t.target!==this.e&&/calendar-(static|close)/i.test(this.dt.className))return!1;13==(t.keyCode||t.which)&&(this.selectDate(this.fetchDate(this.select)),t.stopPropagation(),this.con.stayOpen||this.close()),27==(t.keyCode||t.which)&&(this.con.stayOpen||this.close())}},trigger:function(t){var e={bubbles:!1,cancelable:!0,detail:{args:arguments,self:this}};"change"==t&&(s(this.e,"input",e),s(this.e,"change",e)),s(this.dt,"tail::"+t,e);for(var i=(this.events[t]||[]).length,a=0;a<i;a++)this.events[t][a].cb.apply(this,function(t,e,i){for(var a=e.length,n=0;n<a;++n)t[n-1]=e[n];return t[n]=i,t}(new Array(arguments.length),arguments,this.events[t][a].args));return!0},calcPosition:function(){var t=this.dt.style,e=h.getComputedStyle(this.dt),i=parseInt(e.marginLeft)+parseInt(e.marginRight),a=parseInt(e.marginTop)+parseInt(e.marginBottom),n=this.e.getBoundingClientRect().top+h.scrollY,s=this.e.getBoundingClientRect().left-h.scrollX,r=this.e.offsetWidth||0,o=this.e.offsetHeight||0;switch(t.visibility="hidden",this.con.position){case"top":var c=n-(this.dt.offsetHeight+a),l=s+r/2-(this.dt.offsetWidth/2+i/2);break;case"left":c=n+o/2-(this.dt.offsetHeight/2+a),l=s-(this.dt.offsetWidth+i);break;case"right":c=n+o/2-(this.dt.offsetHeight/2+a),l=s+r;break;default:c=n+o,l=s+r/2-(this.dt.offsetWidth/2+i/2)}return t.top=(0<=c?c:this.e.offsetTop)+"px",t.left=(0<=l?l:0)+"px",t.visibility="visible",this},convertDate:function(t,e){var i,a={H:String("00"+t.getHours()).toString().slice(-2),G:(i=t.getHours(),i%12?i%12:12),A:12<=t.getHours()?"PM":"AM",a:12<=t.getHours()?"pm":"am",i:String("00"+t.getMinutes()).toString().slice(-2),s:String("00"+t.getSeconds()).toString().slice(-2),Y:t.getFullYear(),y:parseInt(t.getFullYear().toString().slice(2)),m:String("00"+(t.getMonth()+1)).toString().slice(-2),M:this.__.months[t.getMonth()].slice(0,3),F:this.__.months[t.getMonth()],d:String("00"+t.getDate()).toString().slice(-2),D:this.__.days[t.getDay()],l:this.__.shorts[t.getDay()].toLowerCase()};return e.replace(/([HGismd]{1,2}|[Y]{2,4}|y{2})/g,function(t){return 4==t.length||2==t.length?a[t.slice(-1)].toString().slice(-Math.abs(t.length)):1==t.length&&"0"==t[0]?a[t.slice(-1)].toString().slice(-1):a[t.slice(-1)].toString()}).replace(/(A|a|M|F|D|l)/g,function(t){return a[t]})},renderCalendar:function(){var t=["tail-datetime-calendar","calendar-close"],e=!0===this.con.classNames?this.e.className.split(" "):this.con.classNames;if(["top","left","right","bottom"].indexOf(this.con.position)<0){var i=d.querySelector(this.con.position);t.push("calendar-static")}(!0===this.con.rtl||0<=["ar","he","mdr","sam","syr"].indexOf(this.con.rtl))&&t.push("rtl"),this.con.stayOpen&&t.push("calendar-stay"),(e="function"==typeof e.split?e.split(" "):e)instanceof Array&&(t=t.concat(e));var a=p("DIV",t),n=!1;if(a.id="tail-datetime-"+this.id,this.con.dateFormat?n='<span class="action action-prev" data-action="prev"></span><span class="label" data-action="view" data-view="up"></span><span class="action action-next" data-action="next"></span>':this.con.timeFormat&&(n='<span class="action action-submit" data-action="submit"></span><span class="label"></span><span class="action action-cancel" data-action="cancel"></span>'),a.innerHTML=n?'<div class="calendar-actions">'+n+"</div>":"",this.con.dateFormat&&this.renderDatePicker(a,this.con.viewDefault),this.con.timeFormat&&this.renderTimePicker(a),this.con.closeButton&&!i){var s=p("BUTTON","calendar-close"),r=this;s.addEventListener("click",function(t){t.preventDefault(),r.close()}),a.appendChild(s)}return(i||d.body).appendChild(a),a},renderDatePicker:function(t,e){if((!e||["decades","years","months","days"].indexOf(e)<0)&&(e=this.con.viewDays?"days":this.con.viewMonths?"months":this.con.viewYears?"years":!!this.con.viewDecades&&"decades"),!e||!this.con["view"+v(e)]||!this.con.dateFormat)return!1;var i=d.createElement("DIV");return i.className="calendar-datepicker calendar-view-"+e,i.innerHTML=this["view"+v(e)](),t.querySelector(".calendar-datepicker")?t.replaceChild(i,t.querySelector(".calendar-datepicker")):t.appendChild(i),this.view.type=e,this.handleLabel(t)},renderTimePicker:function(t){if(!this.con.timeFormat)return!1;var e,i,a=[],n=0;if(this.con.time12h){var s=12<this.view.date.getHours()?'checked="checked" ':"";a.push('<label class="timepicker-switch" data-am="AM" data-pm="PM"><input type="checkbox" value="1" data-input="PM" '+s+"/><span></span></label>")}for(var r in{Hours:0,Minutes:0,Seconds:0})!1!==this.con["time"+r]?((e=d.createElement("INPUT")).type="text",e.disabled=null===this.con["time"+r],e.setAttribute("min","Hours"===r&&this.con.time12h?"01":"00"),e.setAttribute("max","Hours"!==r?"60":this.con.time12h?"13":"24"),e.setAttribute("step",this.con["timeStep"+r]),e.setAttribute("value",(i=this.view.date["get"+r]())<10?"0"+i:i),e.setAttribute("pattern","d*"),e.setAttribute("inputmode","numeric"),e.setAttribute("data-input",r.toLowerCase()),a.push('<div class="timepicker-field timepicker-'+r.toLowerCase()+'">'+e.outerHTML+'<button class="picker-step step-up"></button><button class="picker-step step-down"></button><label>'+this.__.time[n++]+"</label></div>")):a.push((n++,null));var o=p("DIV","calendar-timepicker"),c=this;o.innerHTML=a.join("\n");var l=o.querySelectorAll("input");for(n=0;n<l.length;n++)"checkbox"!==l[n].type?(l[n].addEventListener("input",function(t){c.handleTime.call(c,this)}),l[n].addEventListener("keydown",function(t){var e=event.keyCode||event.which||0;if(38===e||40===e)return t.preventDefault(),c.handleStep.call(c,this,38===e?"up":"down"),!1})):l[n].addEventListener("change",function(t){c.handleTime.call(c,this)});for(l=o.querySelectorAll("button"),n=0;n<l.length;n++)l[n].addEventListener("mousedown",function(t){t.preventDefault();var e=this.parentElement.querySelector("input");return c.handleStep.call(c,e,u(this,"step-up")?"up":"down"),!1});var h=t.querySelector(".calendar-timepicker");return t[h?"replaceChild":"appendChild"](o,h),this.handleLabel(t)},handleTime:function(t){this.con.time12h&&"checkbox"===t.type&&(this.ampm=t.checked);var e=t.parentElement.parentElement;e=[e.querySelector("input[data-input=hours]")||{value:0},e.querySelector("input[data-input=minutes]")||{value:0},e.querySelector("input[data-input=seconds]")||{value:0}],this.selectTime(parseInt(e[0].value)+(this.ampm?12:0),parseInt(e[1].value),parseInt(e[2].value)),e[2].value=this.view.date.getSeconds(),e[1].value=this.view.date.getMinutes(),this.con.time12h?e[0].value=12<this.view.date.getHours()?this.view.date.getHours()-12:this.view.date.getHours():e[0].value=this.view.date.getHours()},handleStep:function(t,e,i){var a=!1,n=t.getAttribute("data-input"),s=this.con["timeStep"+v(n)],r=parseInt(t.value),o="hours"!==n?60:this.con.time12h?13:24;if("up"===e&&o<=r+s?(a=this.con.timeIncrement&&60==o,t.value=13==o?1:0,this.ampm=12<=this.view.date.getHours()+1):"down"===e&&r-s<(13==o?1:0)?(a=this.con.timeIncrement&&60==o,t.value=o-s,this.ampm=this.view.date.getHours()-1<=0):t.value="up"===e?r+s:r-s,t.value<10&&(t.value="0"+t.value),a){var c=t.parentElement.previousElementSibling.querySelector("input");c&&!1===c.disabled&&this.handleStep(c,e,!0)}if(void 0!==i&&!0===i)return!1;var l=t.parentElement.parentElement;if(this.selectTime(parseInt((l.querySelector("input[data-input=hours]")||{value:0}).value)+(this.ampm?12:0),parseInt((l.querySelector("input[data-input=minutes]")||{value:0}).value),parseInt((l.querySelector("input[data-input=seconds]")||{value:0}).value)),this.con.time12h){var h=t.parentElement.parentElement.querySelector("input[type=checkbox]");h&&h.checked!==12<this.view.date.getHours()&&(h.checked=12<this.view.date.getHours())}return!0},handleLabel:function(t){var e,i,a=t.querySelector(".label");switch(this.view.type){case"days":e=this.__.months[this.view.date.getMonth()]+", "+this.view.date.getFullYear();break;case"months":e=this.view.date.getFullYear();break;case"years":e=(i=parseInt(this.view.date.getFullYear().toString().slice(0,3)+"0"))+" - "+(i+10);break;case"decades":e=(i=parseInt(this.view.date.getFullYear().toString().slice(0,2)+"00"))+" - "+(i+100);break;case"time":e=this.__.header[3]}return a.innerText=e,t},viewDecades:function(){var t=this.view.date.getFullYear(),e=new Date(this.view.date.getTime()),i=this.con.today?(new Date).getYear():0;e.setFullYear(t-parseInt(t.toString()[3])-30);for(var a,n,s=[],r=[],o=1;o<=16;o++)a="calendar-decade"+(i>=e.getYear()&&i<=e.getYear()+10?" date-today":""),n='data-action="view" data-view="down" data-year="'+e.getFullYear()+'"',s.push('<td class="'+a+'" '+n+'><span class="inner">'+e.getFullYear()+" - "+(e.getFullYear()+10)+"</span></td>"),4<=o&&o%4==0&&(r.push("<tr>\n"+s.join("\n")+"\n</tr>"),s=[]),e.setFullYear(e.getFullYear()+10);return'<table class="calendar-decades"><thead><tr><th colspan="4">'+this.__.header[2]+"</th></tr></thead><tbody>"+r.join("\n")+"</tbody></table>"},viewYears:function(){var t=this.view.date.getFullYear(),e=new Date(this.view.date.getTime()),i=this.con.today?(new Date).getYear():0;e.setFullYear(t-parseInt(t.toString()[3])-2);for(var a,n,s=[],r=[],o=1;o<=16;o++)a="calendar-year"+(e.getYear()==i?" date-today":""),n='data-action="view" data-view="down" data-year="'+e.getFullYear()+'"',s.push('<td class="'+a+'" '+n+'><span class="inner">'+e.getFullYear()+"</span></td>"),4<=o&&o%4==0&&(r.push("<tr>\n"+s.join("\n")+"\n</tr>"),s=[]),e.setFullYear(e.getFullYear()+1);return'<table class="calendar-years"><thead><tr><th colspan="4">'+this.__.header[1]+"</th></tr></thead><tbody>"+r.join("\n")+"</tbody></table>"},viewMonths:function(){var t=this.__.months,e=this.con.today?(new Date).getMonth():-1;e=this.view.date.getYear()==(new Date).getYear()?e:-1;for(var i,a,n=[],s=[],r=0;r<12;r++)i="calendar-month"+(e==r?" date-today":""),a='data-action="view" data-view="down" data-month="'+r+'"',n.push('<td class="'+i+'" '+a+'><span class="inner">'+t[r]+"</span></td>"),3==n.length&&(s.push("<tr>\n"+n.join("\n")+"\n</tr>"),n=[]);return'<table class="calendar-months"><thead><tr><th colspan="3">'+this.__.header[0]+"</th></tr></thead><tbody>"+s.join("\n")+"</tbody></table>"},viewDays:function(){var i,t,e,a,n,s=new Date(this.view.date.getTime()),r=(new Date).toDateString(),o=s.getMonth(),c=[],l=[],h=[0,[]],d=[].concat(this.con.dateRanges),u=([].concat(this.con.tooltips),[0,0]);for(s.setHours(0,0,0,0),s.setDate(1),s.setDate(1-(s.getDay()-this.con.weekStart));l.length<6;)i=s.getTime(),e='data-action="submit" data-date="'+s.getTime()+'"',t="calendar-day date-"+(s.getMonth()>o?"next":s.getMonth()<o?"previous":"current"),this.con.today&&r==s.toDateString()&&(t+=" date-today"),this.con.dateBlacklist&&(i<this.con.dateStart||i>this.con.dateEnd)?h=[i<this.con.dateStart?this.con.dateStart:1/0,[0,1,2,3,4,5,6],!0]:0==h[0]?d=d.filter(function(t){return t.start==1/0||i>=t.start&&i<=t.end?!(h=[t.end,t.days]):t.start>i},this):3==h.length&&(h=[0,[0,1,2,3,4,5,6]]),0<this.con.tooltips.length&&this.con.tooltips.filter(function(t,e){t.date instanceof Array?t.date[0]<=i&&t.date[1]>=i&&(u=[t.date[1],e,t.color]):t.date==i&&(u=[t.date,e,t.color])},this),u[0]<i&&(u=[0,0]),(n=h[0]>=i&&0<=h[1].indexOf(s.getDay()))&&this.con.dateBlacklist||!n&&!this.con.dateBlacklist?(t+=" date-disabled",e+=' data-disabled="true"'):0!==h[0]&&h[0]<=i&&(h=[0,[]]),this.select&&this.select.toDateString()==s.toDateString()&&(t+=" date-select"),a='<span class="inner">'+s.getDate()+"</span>",0<u[0]&&(t+=" date-tooltip",e+=' data-tooltip="'+u[1]+'" data-tooltip-time="'+i+'"',"inherit"!==u[2]?a+='<span class="tooltip-tick" style="background:'+u[2]+';"></span>':a+='<span class="tooltip-tick"></span>'),c.push('<td class="'+t+'" '+e+">"+a+"</td>"),7==c.length&&(l.push("<tr>\n"+c.join("\n")+"\n</tr>"),c=[]),s.setDate(s.getDate()+1);return l="<tbody>"+l.join("\n")+"</tbody>",'<table class="calendar-days">'+this.weekdays+l+"</table>"},showTooltip:function(t,e,i){var a,n=this.con.tooltips[t].element,s=n.style,r=this.dt.querySelector(".calendar-datepicker");s.cssText="opacity:0;visibility:hidden;",n.id="tooltip-"+t+"-"+i,r.appendChild(n),a=n.offsetWidth,n.offsetHeight,s.top=e.offsetTop+e.offsetHeight+"px",s.left=e.offsetLeft+e.offsetWidth/2-a/2+"px",s.visibility="visible",this.con.animate?(n.setAttribute("data-top",parseInt(s.top)),s.top=parseInt(s.top)+5+"px",function t(){parseFloat(s.top)>n.getAttribute("data-top")&&(s.top=parseFloat(s.top)-.5+"px"),(s.opacity=parseFloat(s.opacity)+.125)<1&&setTimeout(t,20)}()):s.opacity=1},hideTooltip:function(t){var e=this.dt.querySelector("#tooltip-"+t),i=e.style;this.con.animate?(e.className+=" remove",function t(){if(parseFloat(i.top)<parseInt(e.getAttribute("data-top"))+5&&(i.top=parseFloat(i.top)+.5+"px"),(i.opacity-=.125)<0)return(e.className="calendar-tooltip")?e.parentElement.removeChild(e):"";setTimeout(t,20)}()):e.parentElement.removeChild(e)},switchView:function(t){var e=[null,"days","months","years","decades",null];return-1==e.indexOf(t)&&("up"==t?t=e[(e.indexOf(this.view.type)||5)+1]||null:"down"==t&&(t=e[(e.indexOf(this.view.type)||1)-1]||null),t&&this.con["view"+v(t)]||(t=!1)),!!t&&(this.renderDatePicker(this.dt,t),this.trigger("view",t))},switchDate:function(t,e,i,a){if(this.view.date.setFullYear(null==t?this.view.date.getFullYear():t),this.view.date.setMonth(null==e?this.view.date.getMonth():e),"auto"==i){var n=this.view.date,s=new Date;i=n.getMonth()==s.getMonth()&&n.getYear()==s.getYear()?s.getDate():1}return this.view.date.setDate(i||this.view.date.getDate()),!0===a||this.switchView(this.view.type)},switchMonth:function(t,e){return"string"==typeof t&&(t=0<=["previous","prev"].indexOf(t)?-1:1,t=this.view.date.getMonth()+type),this.switchDate(e||this.getFullYear(),t)},switchYear:function(t){return"string"==typeof t&&(t=0<=["previous","prev"].indexOf(t)?-1:1,t=this.view.date.getFullYear()+type),this.switchDate(t)},browseView:function(t){switch(t=0<=["previous","prev"].indexOf(t)?-1:1,this.view.type){case"days":return this.switchDate(null,this.view.date.getMonth()+t,"auto");case"months":return this.switchDate(this.view.date.getFullYear()+t,null,"auto");case"years":return this.switchDate(this.view.date.getFullYear()+10*t,null,"auto");case"decades":return this.switchDate(this.view.date.getFullYear()+100*t,null,"auto")}return!1},fetchDate:function(t){t=c(t||!1)||this.view.date;var e=this.dt.querySelectorAll("input[type=number]");return e&&3==e.length&&t.setHours(e[0].value||0,e[1].value||0,e[2].value||0,0),t},selectDate:function(t,e,i,a,n,s){var r=new Date,o=[];return this.con.dateFormat&&o.push(this.con.dateFormat),this.con.timeFormat&&o.push(this.con.timeFormat),this.select=t instanceof Date?t:new Date(t||(null==t?this.view.date.getFullYear():r.getFullYear()),e||(null==e?this.view.date.getMonth():r.getMonth()),i||(null==i?this.view.date.getDate():r.getDate()),a||(null==a?this.view.date.getHours():0),n||(null==n?this.view.date.getMinutes():0),s||(null==s?this.view.date.getSeconds():0)),this.view.date=new Date(this.select.getTime()),this.e.value=this.convertDate(this.select,o.join(" ")),this.e.setAttribute("data-value",this.select.getTime()),this.switchView("days"),this.trigger("change")},selectTime:function(t,e,i){return this.selectDate(void 0,void 0,void 0,t,e,i)},open:function(){if(!u(this.dt,"calendar-close"))return this;var e=this,i=this.dt.style;return i.display="block",i.opacity=this.con.animate?0:1,n(this.dt,"calendar-close"),a(this.dt,"calendar-idle"),u(this.dt,"calendar-static")||e.calcPosition(),function t(){if(1<=(i.opacity=parseFloat(i.opacity)+.125))return n(e.dt,"calendar-idle"),a(e.dt,"calendar-open"),e.trigger("open");setTimeout(t,20)}(),this},close:function(){if(!u(this.dt,"calendar-open"))return this;var e=this,i=this.dt.style;return i.display="block",i.opacity=this.con.animate?1:0,n(this.dt,"calendar-open"),a(this.dt,"calendar-idle"),function t(){if((i.opacity-=.125)<=0)return n(e.dt,"calendar-idle"),a(e.dt,"calendar-close"),i.display="none",e.trigger("close");setTimeout(t,20)}(),this},toggle:function(){return u(this.dt,"calendar-open")?this.close():u(this.dt,"calendar-close")?this.open():this},on:function(t,e,i){return!(["open","close","change","view"].indexOf(t)<0||"function"!=typeof e)&&(t in this.events||(this.events[t]=[]),this.events[t].push({cb:e,args:i instanceof Array?i:[]}),this)},remove:function(){return this.e.removeAttribute("data-tail-datetime"),this.e.removeAttribute("data-value"),this.dt.parentElement.removeChild(this.dt),this},reload:function(){return this.remove(),this.init()},config:function(t,e,i){if(t instanceof Object){for(var a in t)this.config(a,t[a],!1);return this.reload(),this.con}return void 0===t?this.con:t in this.con&&(void 0===e?this.con[t]:(this.con[t]=e,!1!==this.rebuild&&this.reload(),this))}},l});

/**
@license @nocompile
Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
(function(){/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';var r,t="undefined"!=typeof window&&window===this?this:"undefined"!=typeof global&&null!=global?global:this,ba="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};function ca(){ca=function(){};t.Symbol||(t.Symbol=da)}var da=function(){var a=0;return function(b){return"jscomp_symbol_"+(b||"")+a++}}();
function ea(){ca();var a=t.Symbol.iterator;a||(a=t.Symbol.iterator=t.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&ba(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return fa(this)}});ea=function(){}}function fa(a){var b=0;return ha(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})}function ha(a){ea();a={next:a};a[t.Symbol.iterator]=function(){return this};return a}function ia(a){ea();var b=a[Symbol.iterator];return b?b.call(a):fa(a)}
function ja(a){for(var b,c=[];!(b=a.next()).done;)c.push(b.value);return c}var ka;if("function"==typeof Object.setPrototypeOf)ka=Object.setPrototypeOf;else{var la;a:{var ma={Ga:!0},na={};try{na.__proto__=ma;la=na.Ga;break a}catch(a){}la=!1}ka=la?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}var oa=ka;function pa(){this.f=!1;this.b=null;this.ca=void 0;this.a=1;this.F=0;this.c=null}
function qa(a){if(a.f)throw new TypeError("Generator is already running");a.f=!0}pa.prototype.u=function(a){this.ca=a};function ra(a,b){a.c={Ja:b,Na:!0};a.a=a.F}pa.prototype.return=function(a){this.c={return:a};this.a=this.F};function sa(a,b){a.a=3;return{value:b}}function ta(a){this.a=new pa;this.b=a}function ua(a,b){qa(a.a);var c=a.a.b;if(c)return va(a,"return"in c?c["return"]:function(a){return{value:a,done:!0}},b,a.a.return);a.a.return(b);return wa(a)}
function va(a,b,c,d){try{var e=b.call(a.a.b,c);if(!(e instanceof Object))throw new TypeError("Iterator result "+e+" is not an object");if(!e.done)return a.a.f=!1,e;var f=e.value}catch(g){return a.a.b=null,ra(a.a,g),wa(a)}a.a.b=null;d.call(a.a,f);return wa(a)}function wa(a){for(;a.a.a;)try{var b=a.b(a.a);if(b)return a.a.f=!1,{value:b.value,done:!1}}catch(c){a.a.ca=void 0,ra(a.a,c)}a.a.f=!1;if(a.a.c){b=a.a.c;a.a.c=null;if(b.Na)throw b.Ja;return{value:b.return,done:!0}}return{value:void 0,done:!0}}
function xa(a){this.next=function(b){qa(a.a);a.a.b?b=va(a,a.a.b.next,b,a.a.u):(a.a.u(b),b=wa(a));return b};this.throw=function(b){qa(a.a);a.a.b?b=va(a,a.a.b["throw"],b,a.a.u):(ra(a.a,b),b=wa(a));return b};this.return=function(b){return ua(a,b)};ea();this[Symbol.iterator]=function(){return this}}function Aa(a,b){b=new xa(new ta(b));oa&&oa(b,a.prototype);return b}
(function(){if(!function(){var a=document.createEvent("Event");a.initEvent("foo",!0,!0);a.preventDefault();return a.defaultPrevented}()){var a=Event.prototype.preventDefault;Event.prototype.preventDefault=function(){this.cancelable&&(a.call(this),Object.defineProperty(this,"defaultPrevented",{get:function(){return!0},configurable:!0}))}}var b=/Trident/.test(navigator.userAgent);if(!window.CustomEvent||b&&"function"!==typeof window.CustomEvent)window.CustomEvent=function(a,b){b=b||{};var c=document.createEvent("CustomEvent");
c.initCustomEvent(a,!!b.bubbles,!!b.cancelable,b.detail);return c},window.CustomEvent.prototype=window.Event.prototype;if(!window.Event||b&&"function"!==typeof window.Event){var c=window.Event;window.Event=function(a,b){b=b||{};var c=document.createEvent("Event");c.initEvent(a,!!b.bubbles,!!b.cancelable);return c};if(c)for(var d in c)window.Event[d]=c[d];window.Event.prototype=c.prototype}if(!window.MouseEvent||b&&"function"!==typeof window.MouseEvent){b=window.MouseEvent;window.MouseEvent=function(a,
b){b=b||{};var c=document.createEvent("MouseEvent");c.initMouseEvent(a,!!b.bubbles,!!b.cancelable,b.view||window,b.detail,b.screenX,b.screenY,b.clientX,b.clientY,b.ctrlKey,b.altKey,b.shiftKey,b.metaKey,b.button,b.relatedTarget);return c};if(b)for(d in b)window.MouseEvent[d]=b[d];window.MouseEvent.prototype=b.prototype}Array.from||(Array.from=function(a){return[].slice.call(a)});Object.assign||(Object.assign=function(a,b){for(var c=[].slice.call(arguments,1),d=0,e;d<c.length;d++)if(e=c[d])for(var f=
a,n=e,p=Object.getOwnPropertyNames(n),G=0;G<p.length;G++)e=p[G],f[e]=n[e];return a})})(window.WebComponents);(function(){function a(){}function b(a,b){if(!a.childNodes.length)return[];switch(a.nodeType){case Node.DOCUMENT_NODE:return Q.call(a,b);case Node.DOCUMENT_FRAGMENT_NODE:return Ab.call(a,b);default:return x.call(a,b)}}var c="undefined"===typeof HTMLTemplateElement,d=!(document.createDocumentFragment().cloneNode()instanceof DocumentFragment),e=!1;/Trident/.test(navigator.userAgent)&&function(){function a(a,b){if(a instanceof DocumentFragment)for(var d;d=a.firstChild;)c.call(this,d,b);else c.call(this,
a,b);return a}e=!0;var b=Node.prototype.cloneNode;Node.prototype.cloneNode=function(a){a=b.call(this,a);this instanceof DocumentFragment&&(a.__proto__=DocumentFragment.prototype);return a};DocumentFragment.prototype.querySelectorAll=HTMLElement.prototype.querySelectorAll;DocumentFragment.prototype.querySelector=HTMLElement.prototype.querySelector;Object.defineProperties(DocumentFragment.prototype,{nodeType:{get:function(){return Node.DOCUMENT_FRAGMENT_NODE},configurable:!0},localName:{get:function(){},
configurable:!0},nodeName:{get:function(){return"#document-fragment"},configurable:!0}});var c=Node.prototype.insertBefore;Node.prototype.insertBefore=a;var d=Node.prototype.appendChild;Node.prototype.appendChild=function(b){b instanceof DocumentFragment?a.call(this,b,null):d.call(this,b);return b};var f=Node.prototype.removeChild,g=Node.prototype.replaceChild;Node.prototype.replaceChild=function(b,c){b instanceof DocumentFragment?(a.call(this,b,c),f.call(this,c)):g.call(this,b,c);return c};Document.prototype.createDocumentFragment=
function(){var a=this.createElement("df");a.__proto__=DocumentFragment.prototype;return a};var h=Document.prototype.importNode;Document.prototype.importNode=function(a,b){b=h.call(this,a,b||!1);a instanceof DocumentFragment&&(b.__proto__=DocumentFragment.prototype);return b}}();var f=Node.prototype.cloneNode,g=Document.prototype.createElement,h=Document.prototype.importNode,k=Node.prototype.removeChild,m=Node.prototype.appendChild,n=Node.prototype.replaceChild,p=DOMParser.prototype.parseFromString,
G=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML")||{get:function(){return this.innerHTML},set:function(a){this.innerHTML=a}},u=Object.getOwnPropertyDescriptor(window.Node.prototype,"childNodes")||{get:function(){return this.childNodes}},x=Element.prototype.querySelectorAll,Q=Document.prototype.querySelectorAll,Ab=DocumentFragment.prototype.querySelectorAll,Bb=function(){if(!c){var a=document.createElement("template"),b=document.createElement("template");b.content.appendChild(document.createElement("div"));
a.content.appendChild(b);a=a.cloneNode(!0);return 0===a.content.childNodes.length||0===a.content.firstChild.content.childNodes.length||d}}();if(c){var T=document.implementation.createHTMLDocument("template"),Ka=!0,q=document.createElement("style");q.textContent="template{display:none;}";var ya=document.head;ya.insertBefore(q,ya.firstElementChild);a.prototype=Object.create(HTMLElement.prototype);var Z=!document.createElement("div").hasOwnProperty("innerHTML");a.P=function(b){if(!b.content&&b.namespaceURI===
document.documentElement.namespaceURI){b.content=T.createDocumentFragment();for(var c;c=b.firstChild;)m.call(b.content,c);if(Z)b.__proto__=a.prototype;else if(b.cloneNode=function(b){return a.b(this,b)},Ka)try{l(b),y(b)}catch(jh){Ka=!1}a.a(b.content)}};var X={option:["select"],thead:["table"],col:["colgroup","table"],tr:["tbody","table"],th:["tr","tbody","table"],td:["tr","tbody","table"]},l=function(b){Object.defineProperty(b,"innerHTML",{get:function(){return aa(this)},set:function(b){var c=X[(/<([a-z][^/\0>\x20\t\r\n\f]+)/i.exec(b)||
["",""])[1].toLowerCase()];if(c)for(var d=0;d<c.length;d++)b="<"+c[d]+">"+b+"</"+c[d]+">";T.body.innerHTML=b;for(a.a(T);this.content.firstChild;)k.call(this.content,this.content.firstChild);b=T.body;if(c)for(d=0;d<c.length;d++)b=b.lastChild;for(;b.firstChild;)m.call(this.content,b.firstChild)},configurable:!0})},y=function(a){Object.defineProperty(a,"outerHTML",{get:function(){return"<template>"+this.innerHTML+"</template>"},set:function(a){if(this.parentNode){T.body.innerHTML=a;for(a=this.ownerDocument.createDocumentFragment();T.body.firstChild;)m.call(a,
T.body.firstChild);n.call(this.parentNode,a,this)}else throw Error("Failed to set the 'outerHTML' property on 'Element': This element has no parent node.");},configurable:!0})};l(a.prototype);y(a.prototype);a.a=function(c){c=b(c,"template");for(var d=0,e=c.length,f;d<e&&(f=c[d]);d++)a.P(f)};document.addEventListener("DOMContentLoaded",function(){a.a(document)});Document.prototype.createElement=function(){var b=g.apply(this,arguments);"template"===b.localName&&a.P(b);return b};DOMParser.prototype.parseFromString=
function(){var b=p.apply(this,arguments);a.a(b);return b};Object.defineProperty(HTMLElement.prototype,"innerHTML",{get:function(){return aa(this)},set:function(b){G.set.call(this,b);a.a(this)},configurable:!0,enumerable:!0});var Y=/[&\u00A0"]/g,Cb=/[&\u00A0<>]/g,La=function(a){switch(a){case "&":return"&amp;";case "<":return"&lt;";case ">":return"&gt;";case '"':return"&quot;";case "\u00a0":return"&nbsp;"}};q=function(a){for(var b={},c=0;c<a.length;c++)b[a[c]]=!0;return b};var za=q("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),
Ma=q("style script xmp iframe noembed noframes plaintext noscript".split(" ")),aa=function(a,b){"template"===a.localName&&(a=a.content);for(var c="",d=b?b(a):u.get.call(a),e=0,f=d.length,g;e<f&&(g=d[e]);e++){a:{var h=g;var k=a;var m=b;switch(h.nodeType){case Node.ELEMENT_NODE:for(var l=h.localName,n="<"+l,p=h.attributes,x=0;k=p[x];x++)n+=" "+k.name+'="'+k.value.replace(Y,La)+'"';n+=">";h=za[l]?n:n+aa(h,m)+"</"+l+">";break a;case Node.TEXT_NODE:h=h.data;h=k&&Ma[k.localName]?h:h.replace(Cb,La);break a;
case Node.COMMENT_NODE:h="\x3c!--"+h.data+"--\x3e";break a;default:throw window.console.error(h),Error("not implemented");}}c+=h}return c}}if(c||Bb){a.b=function(a,b){var c=f.call(a,!1);this.P&&this.P(c);b&&(m.call(c.content,f.call(a.content,!0)),Na(c.content,a.content));return c};var Na=function(c,d){if(d.querySelectorAll&&(d=b(d,"template"),0!==d.length)){c=b(c,"template");for(var e=0,f=c.length,g,h;e<f;e++)h=d[e],g=c[e],a&&a.P&&a.P(h),n.call(g.parentNode,mf.call(h,!0),g)}},mf=Node.prototype.cloneNode=
function(b){if(!e&&d&&this instanceof DocumentFragment)if(b)var c=nf.call(this.ownerDocument,this,!0);else return this.ownerDocument.createDocumentFragment();else this.nodeType===Node.ELEMENT_NODE&&"template"===this.localName&&this.namespaceURI==document.documentElement.namespaceURI?c=a.b(this,b):c=f.call(this,b);b&&Na(c,this);return c},nf=Document.prototype.importNode=function(c,d){d=d||!1;if("template"===c.localName)return a.b(c,d);var e=h.call(this,c,d);if(d){Na(e,c);c=b(e,'script:not([type]),script[type="application/javascript"],script[type="text/javascript"]');
for(var f,k=0;k<c.length;k++){f=c[k];d=g.call(document,"script");d.textContent=f.textContent;for(var m=f.attributes,l=0,p;l<m.length;l++)p=m[l],d.setAttribute(p.name,p.value);n.call(f.parentNode,d,f)}}return e}}c&&(window.HTMLTemplateElement=a)})();var Ba=setTimeout;function Ca(){}function Da(a,b){return function(){a.apply(b,arguments)}}function v(a){if(!(this instanceof v))throw new TypeError("Promises must be constructed via new");if("function"!==typeof a)throw new TypeError("not a function");this.I=0;this.sa=!1;this.w=void 0;this.S=[];Ea(a,this)}
function Fa(a,b){for(;3===a.I;)a=a.w;0===a.I?a.S.push(b):(a.sa=!0,Ga(function(){var c=1===a.I?b.Pa:b.Qa;if(null===c)(1===a.I?Ha:Ia)(b.oa,a.w);else{try{var d=c(a.w)}catch(e){Ia(b.oa,e);return}Ha(b.oa,d)}}))}function Ha(a,b){try{if(b===a)throw new TypeError("A promise cannot be resolved with itself.");if(b&&("object"===typeof b||"function"===typeof b)){var c=b.then;if(b instanceof v){a.I=3;a.w=b;Ja(a);return}if("function"===typeof c){Ea(Da(c,b),a);return}}a.I=1;a.w=b;Ja(a)}catch(d){Ia(a,d)}}
function Ia(a,b){a.I=2;a.w=b;Ja(a)}function Ja(a){2===a.I&&0===a.S.length&&Ga(function(){a.sa||"undefined"!==typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",a.w)});for(var b=0,c=a.S.length;b<c;b++)Fa(a,a.S[b]);a.S=null}function Oa(a,b,c){this.Pa="function"===typeof a?a:null;this.Qa="function"===typeof b?b:null;this.oa=c}function Ea(a,b){var c=!1;try{a(function(a){c||(c=!0,Ha(b,a))},function(a){c||(c=!0,Ia(b,a))})}catch(d){c||(c=!0,Ia(b,d))}}
v.prototype["catch"]=function(a){return this.then(null,a)};v.prototype.then=function(a,b){var c=new this.constructor(Ca);Fa(this,new Oa(a,b,c));return c};v.prototype["finally"]=function(a){var b=this.constructor;return this.then(function(c){return b.resolve(a()).then(function(){return c})},function(c){return b.resolve(a()).then(function(){return b.reject(c)})})};
function Pa(a){return new v(function(b,c){function d(a,g){try{if(g&&("object"===typeof g||"function"===typeof g)){var h=g.then;if("function"===typeof h){h.call(g,function(b){d(a,b)},c);return}}e[a]=g;0===--f&&b(e)}catch(n){c(n)}}if(!a||"undefined"===typeof a.length)throw new TypeError("Promise.all accepts an array");var e=Array.prototype.slice.call(a);if(0===e.length)return b([]);for(var f=e.length,g=0;g<e.length;g++)d(g,e[g])})}
function Qa(a){return a&&"object"===typeof a&&a.constructor===v?a:new v(function(b){b(a)})}function Ra(a){return new v(function(b,c){c(a)})}function Sa(a){return new v(function(b,c){for(var d=0,e=a.length;d<e;d++)a[d].then(b,c)})}var Ga="function"===typeof setImmediate&&function(a){setImmediate(a)}||function(a){Ba(a,0)};/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
if(!window.Promise){window.Promise=v;v.prototype.then=v.prototype.then;v.all=Pa;v.race=Sa;v.resolve=Qa;v.reject=Ra;var Ta=document.createTextNode(""),Ua=[];(new MutationObserver(function(){for(var a=Ua.length,b=0;b<a;b++)Ua[b]();Ua.splice(0,a)})).observe(Ta,{characterData:!0});Ga=function(a){Ua.push(a);Ta.textContent=0<Ta.textContent.length?"":"a"}};/*
 Copyright (C) 2015 by WebReflection

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
(function(a,b){if(!(b in a)){var c=typeof global===typeof c?window:global,d=0,e=""+Math.random(),f="__\u0001symbol@@"+e,g=a.getOwnPropertyNames,h=a.getOwnPropertyDescriptor,k=a.create,m=a.keys,n=a.freeze||a,p=a.defineProperty,G=a.defineProperties,u=h(a,"getOwnPropertyNames"),x=a.prototype,Q=x.hasOwnProperty,Ab=x.propertyIsEnumerable,Bb=x.toString,T=function(a,b,c){Q.call(a,f)||p(a,f,{enumerable:!1,configurable:!1,writable:!1,value:{}});a[f]["@@"+b]=c},Ka=function(a,b){var c=k(a);g(b).forEach(function(a){X.call(b,
a)&&za(c,a,b[a])});return c},q=function(){},ya=function(a){return a!=f&&!Q.call(Y,a)},Z=function(a){return a!=f&&Q.call(Y,a)},X=function(a){var b=""+a;return Z(b)?Q.call(this,b)&&this[f]["@@"+b]:Ab.call(this,a)},l=function(b){p(x,b,{enumerable:!1,configurable:!0,get:q,set:function(a){aa(this,b,{enumerable:!1,configurable:!0,writable:!0,value:a});T(this,b,!0)}});return n(Y[b]=p(a(b),"constructor",Cb))},y=function(a){if(this&&this!==c)throw new TypeError("Symbol is not a constructor");return l("__\u0001symbol:".concat(a||
"",e,++d))},Y=k(null),Cb={value:y},La=function(a){return Y[a]},za=function(a,b,c){var d=""+b;if(Z(d)){b=aa;if(c.enumerable){var e=k(c);e.enumerable=!1}else e=c;b(a,d,e);T(a,d,!!c.enumerable)}else p(a,b,c);return a},Ma=function(a){return g(a).filter(Z).map(La)};u.value=za;p(a,"defineProperty",u);u.value=Ma;p(a,b,u);u.value=function(a){return g(a).filter(ya)};p(a,"getOwnPropertyNames",u);u.value=function(a,b){var c=Ma(b);c.length?m(b).concat(c).forEach(function(c){X.call(b,c)&&za(a,c,b[c])}):G(a,b);
return a};p(a,"defineProperties",u);u.value=X;p(x,"propertyIsEnumerable",u);u.value=y;p(c,"Symbol",u);u.value=function(a){a="__\u0001symbol:".concat("__\u0001symbol:",a,e);return a in x?Y[a]:l(a)};p(y,"for",u);u.value=function(a){if(ya(a))throw new TypeError(a+" is not a symbol");return Q.call(Y,a)?a.slice(20,-e.length):void 0};p(y,"keyFor",u);u.value=function(a,b){var c=h(a,b);c&&Z(b)&&(c.enumerable=X.call(a,b));return c};p(a,"getOwnPropertyDescriptor",u);u.value=function(a,b){return 1===arguments.length?
k(a):Ka(a,b)};p(a,"create",u);u.value=function(){var a=Bb.call(this);return"[object String]"===a&&Z(this)?"[object Symbol]":a};p(x,"toString",u);try{var aa=k(p({},"__\u0001symbol:",{get:function(){return p(this,"__\u0001symbol:",{value:!1})["__\u0001symbol:"]}}))["__\u0001symbol:"]||p}catch(Na){aa=function(a,b,c){var d=h(x,b);delete x[b];p(a,b,c);p(x,b,d)}}}})(Object,"getOwnPropertySymbols");
(function(a){var b=a.defineProperty,c=a.prototype,d=c.toString,e;"iterator match replace search split hasInstance isConcatSpreadable unscopables species toPrimitive toStringTag".split(" ").forEach(function(f){if(!(f in Symbol))switch(b(Symbol,f,{value:Symbol(f)}),f){case "toStringTag":e=a.getOwnPropertyDescriptor(c,"toString"),e.value=function(){var a=d.call(this),b=this[Symbol.toStringTag];return"undefined"===typeof b?a:"[object "+b+"]"},b(c,"toString",e)}})})(Object,Symbol);
(function(a,b,c){function d(){return this}b[a]||(b[a]=function(){var b=0,c=this,g={next:function(){var a=c.length<=b;return a?{done:a}:{done:a,value:c[b++]}}};g[a]=d;return g});c[a]||(c[a]=function(){var b=String.fromCodePoint,c=this,g=0,h=c.length,k={next:function(){var a=h<=g,d=a?"":b(c.codePointAt(g));g+=d.length;return a?{done:a}:{done:a,value:d}}};k[a]=d;return k})})(Symbol.iterator,Array.prototype,String.prototype);/*

Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
var Va=Object.prototype.toString;Object.prototype.toString=function(){return void 0===this?"[object Undefined]":null===this?"[object Null]":Va.call(this)};Object.keys=function(a){return Object.getOwnPropertyNames(a).filter(function(b){return(b=Object.getOwnPropertyDescriptor(a,b))&&b.enumerable})};var Wa=window.Symbol.iterator;
String.prototype[Wa]&&String.prototype.codePointAt||(String.prototype[Wa]=function Xa(){var b,c=this;return Aa(Xa,function(d){1==d.a&&(b=0);if(3!=d.a)return b<c.length?d=sa(d,c[b]):(d.a=0,d=void 0),d;b++;d.a=2})});Set.prototype[Wa]||(Set.prototype[Wa]=function Ya(){var b,c=this,d;return Aa(Ya,function(e){1==e.a&&(b=[],c.forEach(function(c){b.push(c)}),d=0);if(3!=e.a)return d<b.length?e=sa(e,b[d]):(e.a=0,e=void 0),e;d++;e.a=2})});
Map.prototype[Wa]||(Map.prototype[Wa]=function Za(){var b,c=this,d;return Aa(Za,function(e){1==e.a&&(b=[],c.forEach(function(c,d){b.push([d,c])}),d=0);if(3!=e.a)return d<b.length?e=sa(e,b[d]):(e.a=0,e=void 0),e;d++;e.a=2})});/*

 Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
window.WebComponents=window.WebComponents||{flags:{}};var $a=document.querySelector('script[src*="webcomponents-bundle"]'),ab=/wc-(.+)/,w={};if(!w.noOpts){location.search.slice(1).split("&").forEach(function(a){a=a.split("=");var b;a[0]&&(b=a[0].match(ab))&&(w[b[1]]=a[1]||!0)});if($a)for(var bb=0,cb=void 0;cb=$a.attributes[bb];bb++)"src"!==cb.name&&(w[cb.name]=cb.value||!0);if(w.log&&w.log.split){var db=w.log.split(",");w.log={};db.forEach(function(a){w.log[a]=!0})}else w.log={}}
window.WebComponents.flags=w;var eb=w.shadydom;eb&&(window.ShadyDOM=window.ShadyDOM||{},window.ShadyDOM.force=eb);var fb=w.register||w.ce;fb&&window.customElements&&(window.customElements.forcePolyfill=fb);/*

Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
function gb(){this.va=this.root=null;this.ba=!1;this.N=this.Z=this.ka=this.assignedSlot=this.assignedNodes=this.R=null;this.childNodes=this.nextSibling=this.previousSibling=this.lastChild=this.firstChild=this.parentNode=this.U=void 0;this.qa=this.ra=!1;this.Y={}}gb.prototype.toJSON=function(){return{}};function z(a){a.__shady||(a.__shady=new gb);return a.__shady}function A(a){return a&&a.__shady};var B=window.ShadyDOM||{};B.La=!(!Element.prototype.attachShadow||!Node.prototype.getRootNode);var hb=Object.getOwnPropertyDescriptor(Node.prototype,"firstChild");B.D=!!(hb&&hb.configurable&&hb.get);B.ma=B.force||!B.La;B.T=B.noPatch||!1;B.ua=B.preferPerformance;function ib(a){return(a=A(a))&&void 0!==a.firstChild}function C(a){return"ShadyRoot"===a.Da}function jb(a){return(a=(a=A(a))&&a.root)&&kb(a)}
var lb=Element.prototype,mb=lb.matches||lb.matchesSelector||lb.mozMatchesSelector||lb.msMatchesSelector||lb.oMatchesSelector||lb.webkitMatchesSelector,nb=document.createTextNode(""),ob=0,pb=[];(new MutationObserver(function(){for(;pb.length;)try{pb.shift()()}catch(a){throw nb.textContent=ob++,a;}})).observe(nb,{characterData:!0});function qb(a){pb.push(a);nb.textContent=ob++}var rb=!!document.contains;function sb(a,b){for(;b;){if(b==a)return!0;b=b.__shady_parentNode}return!1}
function tb(a){for(var b=a.length-1;0<=b;b--){var c=a[b],d=c.getAttribute("id")||c.getAttribute("name");d&&"length"!==d&&isNaN(d)&&(a[d]=c)}a.item=function(b){return a[b]};a.namedItem=function(b){if("length"!==b&&isNaN(b)&&a[b])return a[b];for(var c=ia(a),d=c.next();!d.done;d=c.next())if(d=d.value,(d.getAttribute("id")||d.getAttribute("name"))==b)return d;return null};return a}
function D(a,b,c,d){c=void 0===c?"":c;for(var e in b){var f=b[e];if(!(d&&0<=d.indexOf(e))){f.configurable=!0;var g=c+e;if(f.value)a[g]=f.value;else try{Object.defineProperty(a,g,f)}catch(h){}}}}function E(a){var b={};Object.getOwnPropertyNames(a).forEach(function(c){b[c]=Object.getOwnPropertyDescriptor(a,c)});return b};var ub=[],vb;function wb(a){vb||(vb=!0,qb(xb));ub.push(a)}function xb(){vb=!1;for(var a=!!ub.length;ub.length;)ub.shift()();return a}xb.list=ub;function yb(){this.a=!1;this.addedNodes=[];this.removedNodes=[];this.aa=new Set}function zb(a){a.a||(a.a=!0,qb(function(){a.flush()}))}yb.prototype.flush=function(){if(this.a){this.a=!1;var a=this.takeRecords();a.length&&this.aa.forEach(function(b){b(a)})}};yb.prototype.takeRecords=function(){if(this.addedNodes.length||this.removedNodes.length){var a=[{addedNodes:this.addedNodes,removedNodes:this.removedNodes}];this.addedNodes=[];this.removedNodes=[];return a}return[]};
function Db(a,b){var c=z(a);c.R||(c.R=new yb);c.R.aa.add(b);var d=c.R;return{Ca:b,O:d,Ea:a,takeRecords:function(){return d.takeRecords()}}}function Eb(a){var b=a&&a.O;b&&(b.aa.delete(a.Ca),b.aa.size||(z(a.Ea).R=null))}
function Fb(a,b){var c=b.getRootNode();return a.map(function(a){var b=c===a.target.getRootNode();if(b&&a.addedNodes){if(b=Array.from(a.addedNodes).filter(function(a){return c===a.getRootNode()}),b.length)return a=Object.create(a),Object.defineProperty(a,"addedNodes",{value:b,configurable:!0}),a}else if(b)return a}).filter(function(a){return a})};var Gb=/[&\u00A0"]/g,Hb=/[&\u00A0<>]/g;function Ib(a){switch(a){case "&":return"&amp;";case "<":return"&lt;";case ">":return"&gt;";case '"':return"&quot;";case "\u00a0":return"&nbsp;"}}function Jb(a){for(var b={},c=0;c<a.length;c++)b[a[c]]=!0;return b}var Kb=Jb("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),Lb=Jb("style script xmp iframe noembed noframes plaintext noscript".split(" "));
function Mb(a,b){"template"===a.localName&&(a=a.content);for(var c="",d=b?b(a):a.childNodes,e=0,f=d.length,g=void 0;e<f&&(g=d[e]);e++){a:{var h=g;var k=a,m=b;switch(h.nodeType){case Node.ELEMENT_NODE:k=h.localName;for(var n="<"+k,p=h.attributes,G=0,u;u=p[G];G++)n+=" "+u.name+'="'+u.value.replace(Gb,Ib)+'"';n+=">";h=Kb[k]?n:n+Mb(h,m)+"</"+k+">";break a;case Node.TEXT_NODE:h=h.data;h=k&&Lb[k.localName]?h:h.replace(Hb,Ib);break a;case Node.COMMENT_NODE:h="\x3c!--"+h.data+"--\x3e";break a;default:throw window.console.error(h),
Error("not implemented");}}c+=h}return c};var Nb=B.D,Ob={querySelector:function(a){return this.__shady_native_querySelector(a)},querySelectorAll:function(a){return this.__shady_native_querySelectorAll(a)}},Pb={};function Qb(a){Pb[a]=function(b){return b["__shady_native_"+a]}}function Rb(a,b){D(a,b,"__shady_native_");for(var c in b)Qb(c)}function F(a,b){b=void 0===b?[]:b;for(var c=0;c<b.length;c++){var d=b[c],e=Object.getOwnPropertyDescriptor(a,d);e&&(Object.defineProperty(a,"__shady_native_"+d,e),e.value?Ob[d]||(Ob[d]=e.value):Qb(d))}}
var H=document.createTreeWalker(document,NodeFilter.SHOW_ALL,null,!1),I=document.createTreeWalker(document,NodeFilter.SHOW_ELEMENT,null,!1),Sb=document.implementation.createHTMLDocument("inert");function Tb(a){for(var b;b=a.__shady_native_firstChild;)a.__shady_native_removeChild(b)}var Ub=["firstElementChild","lastElementChild","children","childElementCount"],Vb=["querySelector","querySelectorAll"];
function Wb(){var a=["dispatchEvent","addEventListener","removeEventListener"];window.EventTarget?F(window.EventTarget.prototype,a):(F(Node.prototype,a),F(Window.prototype,a));Nb?F(Node.prototype,"parentNode firstChild lastChild previousSibling nextSibling childNodes parentElement textContent".split(" ")):Rb(Node.prototype,{parentNode:{get:function(){H.currentNode=this;return H.parentNode()}},firstChild:{get:function(){H.currentNode=this;return H.firstChild()}},lastChild:{get:function(){H.currentNode=
this;return H.lastChild()}},previousSibling:{get:function(){H.currentNode=this;return H.previousSibling()}},nextSibling:{get:function(){H.currentNode=this;return H.nextSibling()}},childNodes:{get:function(){var a=[];H.currentNode=this;for(var c=H.firstChild();c;)a.push(c),c=H.nextSibling();return a}},parentElement:{get:function(){I.currentNode=this;return I.parentNode()}},textContent:{get:function(){switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:for(var a=document.createTreeWalker(this,
NodeFilter.SHOW_TEXT,null,!1),c="",d;d=a.nextNode();)c+=d.nodeValue;return c;default:return this.nodeValue}},set:function(a){if("undefined"===typeof a||null===a)a="";switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:Tb(this);(0<a.length||this.nodeType===Node.ELEMENT_NODE)&&this.__shady_native_insertBefore(document.createTextNode(a),void 0);break;default:this.nodeValue=a}}}});F(Node.prototype,"appendChild insertBefore removeChild replaceChild cloneNode contains".split(" "));
a={firstElementChild:{get:function(){I.currentNode=this;return I.firstChild()}},lastElementChild:{get:function(){I.currentNode=this;return I.lastChild()}},children:{get:function(){var a=[];I.currentNode=this;for(var c=I.firstChild();c;)a.push(c),c=I.nextSibling();return tb(a)}},childElementCount:{get:function(){return this.children?this.children.length:0}}};Nb?(F(Element.prototype,Ub),F(Element.prototype,["previousElementSibling","nextElementSibling","innerHTML"]),Object.getOwnPropertyDescriptor(HTMLElement.prototype,
"children")&&F(HTMLElement.prototype,["children"]),Object.getOwnPropertyDescriptor(HTMLElement.prototype,"innerHTML")&&F(HTMLElement.prototype,["innerHTML"])):(Rb(Element.prototype,a),Rb(Element.prototype,{previousElementSibling:{get:function(){I.currentNode=this;return I.previousSibling()}},nextElementSibling:{get:function(){I.currentNode=this;return I.nextSibling()}},innerHTML:{get:function(){return Mb(this,function(a){return a.__shady_native_childNodes})},set:function(a){var b="template"===this.localName?
this.content:this;Tb(b);var d=this.localName||"div";d=this.namespaceURI&&this.namespaceURI!==Sb.namespaceURI?Sb.createElementNS(this.namespaceURI,d):Sb.createElement(d);d.innerHTML=a;for(a="template"===this.localName?d.content:d;d=a.__shady_native_firstChild;)b.__shady_native_insertBefore(d,void 0)}}}));F(Element.prototype,"setAttribute getAttribute hasAttribute removeAttribute focus blur".split(" "));F(Element.prototype,Vb);F(HTMLElement.prototype,["focus","blur","contains"]);Nb&&F(HTMLElement.prototype,
["parentElement","children","innerHTML"]);window.HTMLTemplateElement&&F(window.HTMLTemplateElement.prototype,["innerHTML"]);Nb?F(DocumentFragment.prototype,Ub):Rb(DocumentFragment.prototype,a);F(DocumentFragment.prototype,Vb);Nb?(F(Document.prototype,Ub),F(Document.prototype,["activeElement"])):Rb(Document.prototype,a);F(Document.prototype,["importNode","getElementById"]);F(Document.prototype,Vb)};var Xb=E({get childNodes(){return this.__shady_childNodes},get firstChild(){return this.__shady_firstChild},get lastChild(){return this.__shady_lastChild},get textContent(){return this.__shady_textContent},set textContent(a){this.__shady_textContent=a},get childElementCount(){return this.__shady_childElementCount},get children(){return this.__shady_children},get firstElementChild(){return this.__shady_firstElementChild},get lastElementChild(){return this.__shady_lastElementChild},get innerHTML(){return this.__shady_innerHTML},
set innerHTML(a){return this.__shady_innerHTML=a},get shadowRoot(){return this.__shady_shadowRoot}}),Yb=E({get parentElement(){return this.__shady_parentElement},get parentNode(){return this.__shady_parentNode},get nextSibling(){return this.__shady_nextSibling},get previousSibling(){return this.__shady_previousSibling},get nextElementSibling(){return this.__shady_nextElementSibling},get previousElementSibling(){return this.__shady_previousElementSibling},get className(){return this.__shady_className},
set className(a){return this.__shady_className=a}}),Zb;for(Zb in Xb)Xb[Zb].enumerable=!1;for(var $b in Yb)Yb[$b].enumerable=!1;var ac=B.D||B.T,bc=ac?function(){}:function(a){var b=z(a);b.ra||(b.ra=!0,D(a,Yb))},cc=ac?function(){}:function(a){var b=z(a);b.qa||(b.qa=!0,D(a,Xb))};var dc="__eventWrappers"+Date.now(),ec=function(){var a=Object.getOwnPropertyDescriptor(Event.prototype,"composed");return a?function(b){return a.get.call(b)}:null}(),fc={blur:!0,focus:!0,focusin:!0,focusout:!0,click:!0,dblclick:!0,mousedown:!0,mouseenter:!0,mouseleave:!0,mousemove:!0,mouseout:!0,mouseover:!0,mouseup:!0,wheel:!0,beforeinput:!0,input:!0,keydown:!0,keyup:!0,compositionstart:!0,compositionupdate:!0,compositionend:!0,touchstart:!0,touchend:!0,touchmove:!0,touchcancel:!0,pointerover:!0,
pointerenter:!0,pointerdown:!0,pointermove:!0,pointerup:!0,pointercancel:!0,pointerout:!0,pointerleave:!0,gotpointercapture:!0,lostpointercapture:!0,dragstart:!0,drag:!0,dragenter:!0,dragleave:!0,dragover:!0,drop:!0,dragend:!0,DOMActivate:!0,DOMFocusIn:!0,DOMFocusOut:!0,keypress:!0},gc={DOMAttrModified:!0,DOMAttributeNameChanged:!0,DOMCharacterDataModified:!0,DOMElementNameChanged:!0,DOMNodeInserted:!0,DOMNodeInsertedIntoDocument:!0,DOMNodeRemoved:!0,DOMNodeRemovedFromDocument:!0,DOMSubtreeModified:!0};
function hc(a){return a instanceof Node?a.__shady_getRootNode():a}function ic(a,b){var c=[],d=a;for(a=hc(a);d;)c.push(d),d.__shady_assignedSlot?d=d.__shady_assignedSlot:d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host&&(b||d!==a)?d=d.host:d=d.__shady_parentNode;c[c.length-1]===document&&c.push(window);return c}function jc(a){a.__composedPath||(a.__composedPath=ic(a.target,!0));return a.__composedPath}
function kc(a,b){if(!C)return a;a=ic(a,!0);for(var c=0,d,e=void 0,f,g=void 0;c<b.length;c++)if(d=b[c],f=hc(d),f!==e&&(g=a.indexOf(f),e=f),!C(f)||-1<g)return d}function lc(a){function b(b,d){b=new a(b,d);b.__composed=d&&!!d.composed;return b}b.__proto__=a;b.prototype=a.prototype;return b}var mc={focus:!0,blur:!0};function nc(a){return a.__target!==a.target||a.__relatedTarget!==a.relatedTarget}
function oc(a,b,c){if(c=b.__handlers&&b.__handlers[a.type]&&b.__handlers[a.type][c])for(var d=0,e;(e=c[d])&&(!nc(a)||a.target!==a.relatedTarget)&&(e.call(b,a),!a.__immediatePropagationStopped);d++);}
function pc(a){var b=a.composedPath();Object.defineProperty(a,"currentTarget",{get:function(){return d},configurable:!0});for(var c=b.length-1;0<=c;c--){var d=b[c];oc(a,d,"capture");if(a.ha)return}Object.defineProperty(a,"eventPhase",{get:function(){return Event.AT_TARGET}});var e;for(c=0;c<b.length;c++){d=b[c];var f=A(d);f=f&&f.root;if(0===c||f&&f===e)if(oc(a,d,"bubble"),d!==window&&(e=d.__shady_getRootNode()),a.ha)break}}
function qc(a,b,c,d,e,f){for(var g=0;g<a.length;g++){var h=a[g],k=h.type,m=h.capture,n=h.once,p=h.passive;if(b===h.node&&c===k&&d===m&&e===n&&f===p)return g}return-1}
function rc(a,b,c){if(b){var d=typeof b;if("function"===d||"object"===d)if("object"!==d||b.handleEvent&&"function"===typeof b.handleEvent){if(gc[a])return this.__shady_native_addEventListener(a,b,c);if(c&&"object"===typeof c){var e=!!c.capture;var f=!!c.once;var g=!!c.passive}else e=!!c,g=f=!1;var h=c&&c.ia||this,k=b[dc];if(k){if(-1<qc(k,h,a,e,f,g))return}else b[dc]=[];k=function(e){f&&this.__shady_removeEventListener(a,b,c);e.__target||sc(e);if(h!==this){var g=Object.getOwnPropertyDescriptor(e,"currentTarget");
Object.defineProperty(e,"currentTarget",{get:function(){return h},configurable:!0})}e.__previousCurrentTarget=e.currentTarget;if(!C(h)||-1!=e.composedPath().indexOf(h))if(e.composed||-1<e.composedPath().indexOf(h))if(nc(e)&&e.target===e.relatedTarget)e.eventPhase===Event.BUBBLING_PHASE&&e.stopImmediatePropagation();else if(e.eventPhase===Event.CAPTURING_PHASE||e.bubbles||e.target===h||h instanceof Window){var k="function"===d?b.call(h,e):b.handleEvent&&b.handleEvent(e);h!==this&&(g?(Object.defineProperty(e,
"currentTarget",g),g=null):delete e.currentTarget);return k}};b[dc].push({node:h,type:a,capture:e,once:f,passive:g,$a:k});mc[a]?(this.__handlers=this.__handlers||{},this.__handlers[a]=this.__handlers[a]||{capture:[],bubble:[]},this.__handlers[a][e?"capture":"bubble"].push(k)):this.__shady_native_addEventListener(a,k,c)}}}
function tc(a,b,c){if(b){if(gc[a])return this.__shady_native_removeEventListener(a,b,c);if(c&&"object"===typeof c){var d=!!c.capture;var e=!!c.once;var f=!!c.passive}else d=!!c,f=e=!1;var g=c&&c.ia||this,h=void 0;var k=null;try{k=b[dc]}catch(m){}k&&(e=qc(k,g,a,d,e,f),-1<e&&(h=k.splice(e,1)[0].$a,k.length||(b[dc]=void 0)));this.__shady_native_removeEventListener(a,h||b,c);h&&mc[a]&&this.__handlers&&this.__handlers[a]&&(a=this.__handlers[a][d?"capture":"bubble"],h=a.indexOf(h),-1<h&&a.splice(h,1))}}
function uc(){for(var a in mc)window.__shady_native_addEventListener(a,function(a){a.__target||(sc(a),pc(a))},!0)}
var vc=E({get composed(){void 0===this.__composed&&(ec?this.__composed="focusin"===this.type||"focusout"===this.type||ec(this):!1!==this.isTrusted&&(this.__composed=fc[this.type]));return this.__composed||!1},composedPath:function(){this.__composedPath||(this.__composedPath=ic(this.__target,this.composed));return this.__composedPath},get target(){return kc(this.currentTarget||this.__previousCurrentTarget,this.composedPath())},get relatedTarget(){if(!this.__relatedTarget)return null;this.__relatedTargetComposedPath||
(this.__relatedTargetComposedPath=ic(this.__relatedTarget,!0));return kc(this.currentTarget||this.__previousCurrentTarget,this.__relatedTargetComposedPath)},stopPropagation:function(){Event.prototype.stopPropagation.call(this);this.ha=!0},stopImmediatePropagation:function(){Event.prototype.stopImmediatePropagation.call(this);this.ha=this.__immediatePropagationStopped=!0}});
function sc(a){a.__target=a.target;a.__relatedTarget=a.relatedTarget;if(B.D){var b=Object.getPrototypeOf(a);if(!Object.hasOwnProperty(b,"__shady_patchedProto")){var c=Object.create(b);c.__shady_sourceProto=b;D(c,vc);b.__shady_patchedProto=c}a.__proto__=b.__shady_patchedProto}else D(a,vc)}var wc=lc(Event),xc=lc(CustomEvent),yc=lc(MouseEvent);
function zc(){if(!ec&&Object.getOwnPropertyDescriptor(Event.prototype,"isTrusted")){var a=function(){var a=new MouseEvent("click",{bubbles:!0,cancelable:!0,composed:!0});this.__shady_dispatchEvent(a)};Element.prototype.click?Element.prototype.click=a:HTMLElement.prototype.click&&(HTMLElement.prototype.click=a)}}var Ac=Object.getOwnPropertyNames(Document.prototype).filter(function(a){return"on"===a.substring(0,2)});function Bc(a,b){return{index:a,V:[],$:b}}
function Cc(a,b,c,d){var e=0,f=0,g=0,h=0,k=Math.min(b-e,d-f);if(0==e&&0==f)a:{for(g=0;g<k;g++)if(a[g]!==c[g])break a;g=k}if(b==a.length&&d==c.length){h=a.length;for(var m=c.length,n=0;n<k-g&&Dc(a[--h],c[--m]);)n++;h=n}e+=g;f+=g;b-=h;d-=h;if(0==b-e&&0==d-f)return[];if(e==b){for(b=Bc(e,0);f<d;)b.V.push(c[f++]);return[b]}if(f==d)return[Bc(e,b-e)];k=e;g=f;d=d-g+1;h=b-k+1;b=Array(d);for(m=0;m<d;m++)b[m]=Array(h),b[m][0]=m;for(m=0;m<h;m++)b[0][m]=m;for(m=1;m<d;m++)for(n=1;n<h;n++)if(a[k+n-1]===c[g+m-1])b[m][n]=
b[m-1][n-1];else{var p=b[m-1][n]+1,G=b[m][n-1]+1;b[m][n]=p<G?p:G}k=b.length-1;g=b[0].length-1;d=b[k][g];for(a=[];0<k||0<g;)0==k?(a.push(2),g--):0==g?(a.push(3),k--):(h=b[k-1][g-1],m=b[k-1][g],n=b[k][g-1],p=m<n?m<h?m:h:n<h?n:h,p==h?(h==d?a.push(0):(a.push(1),d=h),k--,g--):p==m?(a.push(3),k--,d=m):(a.push(2),g--,d=n));a.reverse();b=void 0;k=[];for(g=0;g<a.length;g++)switch(a[g]){case 0:b&&(k.push(b),b=void 0);e++;f++;break;case 1:b||(b=Bc(e,0));b.$++;e++;b.V.push(c[f]);f++;break;case 2:b||(b=Bc(e,0));
b.$++;e++;break;case 3:b||(b=Bc(e,0)),b.V.push(c[f]),f++}b&&k.push(b);return k}function Dc(a,b){return a===b};function Ec(a,b,c){bc(a);c=c||null;var d=z(a),e=z(b),f=c?z(c):null;d.previousSibling=c?f.previousSibling:b.__shady_lastChild;if(f=A(d.previousSibling))f.nextSibling=a;if(f=A(d.nextSibling=c))f.previousSibling=a;d.parentNode=b;c?c===e.firstChild&&(e.firstChild=a):(e.lastChild=a,e.firstChild||(e.firstChild=a));e.childNodes=null}
function Fc(a,b,c){cc(b);var d=z(b);void 0!==d.firstChild&&(d.childNodes=null);if(a.nodeType===Node.DOCUMENT_FRAGMENT_NODE){d=a.__shady_childNodes;for(var e=0;e<d.length;e++)Ec(d[e],b,c);a=z(a);b=void 0!==a.firstChild?null:void 0;a.firstChild=a.lastChild=b;a.childNodes=b}else Ec(a,b,c)}
function Gc(a,b){var c=z(a);b=z(b);a===b.firstChild&&(b.firstChild=c.nextSibling);a===b.lastChild&&(b.lastChild=c.previousSibling);a=c.previousSibling;var d=c.nextSibling;a&&(z(a).nextSibling=d);d&&(z(d).previousSibling=a);c.parentNode=c.previousSibling=c.nextSibling=void 0;void 0!==b.childNodes&&(b.childNodes=null)}
function Hc(a){var b=z(a);if(void 0===b.firstChild){b.childNodes=null;var c=b.firstChild=a.__shady_native_firstChild||null;b.lastChild=a.__shady_native_lastChild||null;cc(a);b=c;for(c=void 0;b;b=b.__shady_native_nextSibling){var d=z(b);d.parentNode=a;d.nextSibling=b.__shady_native_nextSibling||null;d.previousSibling=c||null;c=b;bc(b)}}};var Ic=null;function Jc(){Ic||(Ic=window.ShadyCSS&&window.ShadyCSS.ScopingShim);return Ic||null}function Kc(a,b){var c=Jc();c&&c.unscopeNode(a,b)}function Lc(a,b){var c=Jc();if(!c)return!0;if(a.nodeType===Node.DOCUMENT_FRAGMENT_NODE){c=!0;a=a.__shady_childNodes;for(var d=0;c&&d<a.length;d++)c=c&&Lc(a[d],b);return c}return a.nodeType!==Node.ELEMENT_NODE?!0:c.currentScopeForNode(a)===b}function Mc(a){if(a.nodeType!==Node.ELEMENT_NODE)return"";var b=Jc();return b?b.currentScopeForNode(a):""}
function Nc(a,b){if(a){a.nodeType===Node.ELEMENT_NODE&&b(a);a=a.__shady_childNodes;for(var c=0,d;c<a.length;c++)d=a[c],d.nodeType===Node.ELEMENT_NODE&&Nc(d,b)}};var Oc=window.document,Pc=B.ua,Qc=Object.getOwnPropertyDescriptor(Node.prototype,"isConnected"),Rc=Qc&&Qc.get;function Sc(a){for(var b;b=a.__shady_firstChild;)a.__shady_removeChild(b)}function Tc(a){var b=A(a);if(b&&void 0!==b.U){b=a.__shady_childNodes;for(var c=0,d=b.length,e=void 0;c<d&&(e=b[c]);c++)Tc(e)}if(a=A(a))a.U=void 0}function Uc(a){var b=a;a&&"slot"===a.localName&&(b=(b=(b=A(a))&&b.N)&&b.length?b[0]:Uc(a.__shady_nextSibling));return b}
function Vc(a,b,c){if(a=(a=A(a))&&a.R)b&&a.addedNodes.push(b),c&&a.removedNodes.push(c),zb(a)}
var Zc=E({get parentNode(){var a=A(this);a=a&&a.parentNode;return void 0!==a?a:this.__shady_native_parentNode},get firstChild(){var a=A(this);a=a&&a.firstChild;return void 0!==a?a:this.__shady_native_firstChild},get lastChild(){var a=A(this);a=a&&a.lastChild;return void 0!==a?a:this.__shady_native_lastChild},get nextSibling(){var a=A(this);a=a&&a.nextSibling;return void 0!==a?a:this.__shady_native_nextSibling},get previousSibling(){var a=A(this);a=a&&a.previousSibling;return void 0!==a?a:this.__shady_native_previousSibling},
get childNodes(){if(ib(this)){var a=A(this);if(!a.childNodes){a.childNodes=[];for(var b=this.__shady_firstChild;b;b=b.__shady_nextSibling)a.childNodes.push(b)}var c=a.childNodes}else c=this.__shady_native_childNodes;c.item=function(a){return c[a]};return c},get parentElement(){var a=A(this);(a=a&&a.parentNode)&&a.nodeType!==Node.ELEMENT_NODE&&(a=null);return void 0!==a?a:this.__shady_native_parentElement},get isConnected(){if(Rc&&Rc.call(this))return!0;if(this.nodeType==Node.DOCUMENT_FRAGMENT_NODE)return!1;
var a=this.ownerDocument;if(rb){if(a.__shady_native_contains(this))return!0}else if(a.documentElement&&a.documentElement.__shady_native_contains(this))return!0;for(a=this;a&&!(a instanceof Document);)a=a.__shady_parentNode||(C(a)?a.host:void 0);return!!(a&&a instanceof Document)},get textContent(){if(ib(this)){for(var a=[],b=0,c=this.__shady_childNodes,d;d=c[b];b++)d.nodeType!==Node.COMMENT_NODE&&a.push(d.__shady_textContent);return a.join("")}return this.__shady_native_textContent},set textContent(a){if("undefined"===
typeof a||null===a)a="";switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:if(!ib(this)&&B.D){var b=this.__shady_firstChild;(b!=this.__shady_lastChild||b&&b.nodeType!=Node.TEXT_NODE)&&Sc(this);this.__shady_native_textContent=a}else Sc(this),(0<a.length||this.nodeType===Node.ELEMENT_NODE)&&this.__shady_insertBefore(document.createTextNode(a));break;default:this.nodeValue=a}},insertBefore:function(a,b){if(this.ownerDocument!==Oc&&a.ownerDocument!==Oc)return this.__shady_native_insertBefore(a,
b),a;if(a===this)throw Error("Failed to execute 'appendChild' on 'Node': The new child element contains the parent.");if(b){var c=A(b);c=c&&c.parentNode;if(void 0!==c&&c!==this||void 0===c&&b.__shady_native_parentNode!==this)throw Error("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");}if(b===a)return a;var d=[],e=(c=Wc(this))?c.host.localName:Mc(this),f=a.__shady_parentNode;if(f){var g=Mc(a);f.__shady_removeChild(a,!!c||
!Wc(a))}f=!0;var h=(!Pc||void 0===a.__noInsertionPoint)&&!Lc(a,e),k=c&&!a.__noInsertionPoint&&(!Pc||a.nodeType===Node.DOCUMENT_FRAGMENT_NODE);if(k||h)h&&(g=g||Mc(a)),Nc(a,function(a){k&&"slot"===a.localName&&d.push(a);if(h){var b=g;Jc()&&(b&&Kc(a,b),(b=Jc())&&b.scopeNode(a,e))}});if("slot"===this.localName||d.length)d.length&&(c.c=c.c||[],c.a=c.a||[],c.b=c.b||{},c.c.push.apply(c.c,d instanceof Array?d:ja(ia(d)))),c&&Xc(c);ib(this)&&(Fc(a,this,b),c=A(this),jb(this)?(Xc(c.root),f=!1):c.root&&(f=!1));
f?(c=C(this)?this.host:this,b?(b=Uc(b),c.__shady_native_insertBefore(a,b)):c.__shady_native_appendChild(a)):a.ownerDocument!==this.ownerDocument&&this.ownerDocument.adoptNode(a);Vc(this,a);return a},appendChild:function(a){return this.__shady_insertBefore(a)},removeChild:function(a,b){b=void 0===b?!1:b;if(this.ownerDocument!==Oc)return this.__shady_native_removeChild(a);if(a.__shady_parentNode!==this)throw Error("The node to be removed is not a child of this node: "+a);var c=Wc(a),d=c&&Yc(c,a),e=
A(this);if(ib(this)&&(Gc(a,this),jb(this))){Xc(e.root);var f=!0}if(Jc()&&!b&&c){var g=Mc(a);Nc(a,function(a){Kc(a,g)})}Tc(a);c&&((b=this&&"slot"===this.localName)&&(f=!0),(d||b)&&Xc(c));f||(f=C(this)?this.host:this,(!e.root&&"slot"!==a.localName||f===a.__shady_native_parentNode)&&f.__shady_native_removeChild(a));Vc(this,null,a);return a},replaceChild:function(a,b){this.__shady_insertBefore(a,b);this.__shady_removeChild(b);return a},cloneNode:function(a){if("template"==this.localName)return this.__shady_native_cloneNode(a);
var b=this.__shady_native_cloneNode(!1);if(a&&b.nodeType!==Node.ATTRIBUTE_NODE){a=this.__shady_childNodes;for(var c=0,d;c<a.length;c++)d=a[c].__shady_cloneNode(!0),b.__shady_appendChild(d)}return b},getRootNode:function(a){if(this&&this.nodeType){var b=z(this),c=b.U;void 0===c&&(C(this)?(c=this,b.U=c):(c=(c=this.__shady_parentNode)?c.__shady_getRootNode(a):this,document.documentElement.__shady_native_contains(this)&&(b.U=c)));return c}},contains:function(a){return sb(this,a)}});function $c(a,b,c){var d=[];ad(a.__shady_childNodes,b,c,d);return d}function ad(a,b,c,d){for(var e=0,f=a.length,g=void 0;e<f&&(g=a[e]);e++){var h;if(h=g.nodeType===Node.ELEMENT_NODE){h=g;var k=b,m=c,n=d,p=k(h);p&&n.push(h);m&&m(p)?h=p:(ad(h.__shady_childNodes,k,m,n),h=void 0)}if(h)break}}
var bd=E({get firstElementChild(){var a=A(this);if(a&&void 0!==a.firstChild){for(a=this.__shady_firstChild;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_nextSibling;return a}return this.__shady_native_firstElementChild},get lastElementChild(){var a=A(this);if(a&&void 0!==a.lastChild){for(a=this.__shady_lastChild;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_previousSibling;return a}return this.__shady_native_lastElementChild},get children(){return ib(this)?tb(Array.prototype.filter.call(this.__shady_childNodes,
function(a){return a.nodeType===Node.ELEMENT_NODE})):this.__shady_native_children},get childElementCount(){var a=this.__shady_children;return a?a.length:0}}),cd=E({querySelector:function(a){return $c(this,function(b){return mb.call(b,a)},function(a){return!!a})[0]||null},querySelectorAll:function(a,b){if(b){b=Array.prototype.slice.call(this.__shady_native_querySelectorAll(a));var c=this.__shady_getRootNode();return b.filter(function(a){return a.__shady_getRootNode()==c})}return $c(this,function(b){return mb.call(b,
a)})}}),dd=B.ua?Object.assign({},bd):bd;Object.assign(bd,cd);var ed=E({getElementById:function(a){return""===a?null:$c(this,function(b){return b.id==a},function(a){return!!a})[0]||null}});var fd=E({get activeElement(){var a=B.D?document.__shady_native_activeElement:document.activeElement;if(!a||!a.nodeType)return null;var b=!!C(this);if(!(this===document||b&&this.host!==a&&this.host.__shady_native_contains(a)))return null;for(b=Wc(a);b&&b!==this;)a=b.host,b=Wc(a);return this===document?b?null:a:b===this?a:null}});var gd=document.implementation.createHTMLDocument("inert"),hd=E({get innerHTML(){return ib(this)?Mb("template"===this.localName?this.content:this,function(a){return a.__shady_childNodes}):this.__shady_native_innerHTML},set innerHTML(a){if("template"===this.localName)this.__shady_native_innerHTML=a;else{Sc(this);var b=this.localName||"div";b=this.namespaceURI&&this.namespaceURI!==gd.namespaceURI?gd.createElementNS(this.namespaceURI,b):gd.createElement(b);for(B.D?b.__shady_native_innerHTML=a:b.innerHTML=
a;a=b.__shady_firstChild;)this.__shady_insertBefore(a)}}});var id=E({addEventListener:function(a,b,c){"object"!==typeof c&&(c={capture:!!c});c.ia=this;this.host.__shady_addEventListener(a,b,c)},removeEventListener:function(a,b,c){"object"!==typeof c&&(c={capture:!!c});c.ia=this;this.host.__shady_removeEventListener(a,b,c)}});function jd(a,b){D(a,id,b);D(a,fd,b);D(a,hd,b);D(a,bd,b);B.T&&!b?(D(a,Zc,b),D(a,ed,b)):B.D||(D(a,Yb),D(a,Xb))};var kd={},ld=B.deferConnectionCallbacks&&"loading"===document.readyState,md;function nd(a){var b=[];do b.unshift(a);while(a=a.__shady_parentNode);return b}
function od(a,b,c){if(a!==kd)throw new TypeError("Illegal constructor");this.Da="ShadyRoot";this.host=b;this.mode=c&&c.mode;Hc(b);a=z(b);a.root=this;a.va="closed"!==this.mode?this:null;a=z(this);a.firstChild=a.lastChild=a.parentNode=a.nextSibling=a.previousSibling=null;a.childNodes=[];this.ja=this.M=!1;this.c=this.b=this.a=null;if(B.preferPerformance)for(;a=b.__shady_native_firstChild;)b.__shady_native_removeChild(a);else Xc(this)}function Xc(a){a.M||(a.M=!0,wb(function(){return pd(a)}))}
function pd(a){var b;if(b=a.M){for(var c;a;)a:{a.M&&(c=a),b=a;a=b.host.__shady_getRootNode();if(C(a)&&(b=A(b.host))&&0<b.X)break a;a=void 0}b=c}(c=b)&&c._renderSelf()}
od.prototype._renderSelf=function(){var a=ld;ld=!0;this.M=!1;if(this.a){qd(this);for(var b=0,c;b<this.a.length;b++){c=this.a[b];var d=A(c),e=d.assignedNodes;d.assignedNodes=[];d.N=[];if(d.ka=e)for(d=0;d<e.length;d++){var f=A(e[d]);f.Z=f.assignedSlot;f.assignedSlot===c&&(f.assignedSlot=null)}}for(b=this.host.__shady_firstChild;b;b=b.__shady_nextSibling)rd(this,b);for(b=0;b<this.a.length;b++){c=this.a[b];e=A(c);if(!e.assignedNodes.length)for(d=c.__shady_firstChild;d;d=d.__shady_nextSibling)rd(this,
d,c);(d=(d=A(c.__shady_parentNode))&&d.root)&&(kb(d)||d.M)&&d._renderSelf();sd(this,e.N,e.assignedNodes);if(d=e.ka){for(f=0;f<d.length;f++)A(d[f]).Z=null;e.ka=null;d.length>e.assignedNodes.length&&(e.ba=!0)}e.ba&&(e.ba=!1,td(this,c))}c=this.a;b=[];for(e=0;e<c.length;e++)d=c[e].__shady_parentNode,(f=A(d))&&f.root||!(0>b.indexOf(d))||b.push(d);for(c=0;c<b.length;c++){f=b[c];e=f===this?this.host:f;d=[];f=f.__shady_childNodes;for(var g=0;g<f.length;g++){var h=f[g];if("slot"==h.localName){h=A(h).N;for(var k=
0;k<h.length;k++)d.push(h[k])}else d.push(h)}f=Array.prototype.slice.call(e.__shady_native_childNodes);g=Cc(d,d.length,f,f.length);k=h=0;for(var m=void 0;h<g.length&&(m=g[h]);h++){for(var n=0,p=void 0;n<m.V.length&&(p=m.V[n]);n++)p.__shady_native_parentNode===e&&e.__shady_native_removeChild(p),f.splice(m.index+k,1);k-=m.$}k=0;for(m=void 0;k<g.length&&(m=g[k]);k++)for(h=f[m.index],n=m.index;n<m.index+m.$;n++)p=d[n],e.__shady_native_insertBefore(p,h),f.splice(n,0,p)}}if(!B.preferPerformance&&!this.ja)for(b=
this.host.__shady_childNodes,c=0,e=b.length;c<e;c++)d=b[c],f=A(d),d.__shady_native_parentNode!==this.host||"slot"!==d.localName&&f.assignedSlot||this.host.__shady_native_removeChild(d);this.ja=!0;ld=a;md&&md()};function rd(a,b,c){var d=z(b),e=d.Z;d.Z=null;c||(c=(a=a.b[b.__shady_slot||"__catchall"])&&a[0]);c?(z(c).assignedNodes.push(b),d.assignedSlot=c):d.assignedSlot=void 0;e!==d.assignedSlot&&d.assignedSlot&&(z(d.assignedSlot).ba=!0)}
function sd(a,b,c){for(var d=0,e=void 0;d<c.length&&(e=c[d]);d++)if("slot"==e.localName){var f=A(e).assignedNodes;f&&f.length&&sd(a,b,f)}else b.push(c[d])}function td(a,b){b.__shady_native_dispatchEvent(new Event("slotchange"));b=A(b);b.assignedSlot&&td(a,b.assignedSlot)}
function qd(a){if(a.c&&a.c.length){for(var b=a.c,c,d=0;d<b.length;d++){var e=b[d];Hc(e);var f=e.__shady_parentNode;Hc(f);f=A(f);f.X=(f.X||0)+1;f=ud(e);a.b[f]?(c=c||{},c[f]=!0,a.b[f].push(e)):a.b[f]=[e];a.a.push(e)}if(c)for(var g in c)a.b[g]=vd(a.b[g]);a.c=[]}}function ud(a){var b=a.name||a.getAttribute("name")||"__catchall";return a.Ba=b}
function vd(a){return a.sort(function(a,c){a=nd(a);for(var b=nd(c),e=0;e<a.length;e++){c=a[e];var f=b[e];if(c!==f)return a=Array.from(c.__shady_parentNode.__shady_childNodes),a.indexOf(c)-a.indexOf(f)}})}
function Yc(a,b){if(a.a){qd(a);var c=a.b,d;for(d in c)for(var e=c[d],f=0;f<e.length;f++){var g=e[f];if(sb(b,g)){e.splice(f,1);var h=a.a.indexOf(g);0<=h&&(a.a.splice(h,1),(h=A(g.__shady_parentNode))&&h.X&&h.X--);f--;g=A(g);if(h=g.N)for(var k=0;k<h.length;k++){var m=h[k],n=m.__shady_native_parentNode;n&&n.__shady_native_removeChild(m)}g.N=[];g.assignedNodes=[];h=!0}}return h}}function kb(a){qd(a);return!(!a.a||!a.a.length)}
(function(a){a.__proto__=DocumentFragment.prototype;jd(a,"__shady_");jd(a);Object.defineProperties(a,{nodeType:{value:Node.DOCUMENT_FRAGMENT_NODE,configurable:!0},nodeName:{value:"#document-fragment",configurable:!0},nodeValue:{value:null,configurable:!0}});["localName","namespaceURI","prefix"].forEach(function(b){Object.defineProperty(a,b,{value:void 0,configurable:!0})});["ownerDocument","baseURI","isConnected"].forEach(function(b){Object.defineProperty(a,b,{get:function(){return this.host[b]},
configurable:!0})})})(od.prototype);
if(window.customElements&&B.ma&&!B.preferPerformance){var wd=new Map;md=function(){var a=[];wd.forEach(function(b,c){a.push([c,b])});wd.clear();for(var b=0;b<a.length;b++){var c=a[b][0];a[b][1]?c.za():c.Aa()}};ld&&document.addEventListener("readystatechange",function(){ld=!1;md()},{once:!0});var xd=function(a,b,c){var d=0,e="__isConnected"+d++;if(b||c)a.prototype.connectedCallback=a.prototype.za=function(){ld?wd.set(this,!0):this[e]||(this[e]=!0,b&&b.call(this))},a.prototype.disconnectedCallback=
a.prototype.Aa=function(){ld?this.isConnected||wd.set(this,!1):this[e]&&(this[e]=!1,c&&c.call(this))};return a},define=window.customElements.define;Object.defineProperty(window.CustomElementRegistry.prototype,"define",{value:function(a,b){var c=b.prototype.connectedCallback,d=b.prototype.disconnectedCallback;define.call(window.customElements,a,xd(b,c,d));b.prototype.connectedCallback=c;b.prototype.disconnectedCallback=d}})}function Wc(a){a=a.__shady_getRootNode();if(C(a))return a};function yd(a){this.node=a}r=yd.prototype;r.addEventListener=function(a,b,c){return this.node.__shady_addEventListener(a,b,c)};r.removeEventListener=function(a,b,c){return this.node.__shady_removeEventListener(a,b,c)};r.appendChild=function(a){return this.node.__shady_appendChild(a)};r.insertBefore=function(a,b){return this.node.__shady_insertBefore(a,b)};r.removeChild=function(a){return this.node.__shady_removeChild(a)};r.replaceChild=function(a,b){return this.node.__shady_replaceChild(a,b)};
r.cloneNode=function(a){return this.node.__shady_cloneNode(a)};r.getRootNode=function(a){return this.node.__shady_getRootNode(a)};r.contains=function(a){return this.node.__shady_contains(a)};r.dispatchEvent=function(a){return this.node.__shady_dispatchEvent(a)};r.setAttribute=function(a,b){this.node.__shady_setAttribute(a,b)};r.getAttribute=function(a){return this.node.__shady_native_getAttribute(a)};r.hasAttribute=function(a){return this.node.__shady_native_hasAttribute(a)};r.removeAttribute=function(a){this.node.__shady_removeAttribute(a)};
r.attachShadow=function(a){return this.node.__shady_attachShadow(a)};r.focus=function(){this.node.__shady_native_focus()};r.blur=function(){this.node.__shady_blur()};r.importNode=function(a,b){if(this.node.nodeType===Node.DOCUMENT_NODE)return this.node.__shady_importNode(a,b)};r.getElementById=function(a){if(this.node.nodeType===Node.DOCUMENT_NODE)return this.node.__shady_getElementById(a)};r.querySelector=function(a){return this.node.__shady_querySelector(a)};
r.querySelectorAll=function(a,b){return this.node.__shady_querySelectorAll(a,b)};r.assignedNodes=function(a){if("slot"===this.node.localName)return this.node.__shady_assignedNodes(a)};
t.Object.defineProperties(yd.prototype,{activeElement:{configurable:!0,enumerable:!0,get:function(){if(C(this.node)||this.node.nodeType===Node.DOCUMENT_NODE)return this.node.__shady_activeElement}},_activeElement:{configurable:!0,enumerable:!0,get:function(){return this.activeElement}},host:{configurable:!0,enumerable:!0,get:function(){if(C(this.node))return this.node.host}},parentNode:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_parentNode}},firstChild:{configurable:!0,
enumerable:!0,get:function(){return this.node.__shady_firstChild}},lastChild:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_lastChild}},nextSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_nextSibling}},previousSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_previousSibling}},childNodes:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_childNodes}},parentElement:{configurable:!0,enumerable:!0,
get:function(){return this.node.__shady_parentElement}},firstElementChild:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_firstElementChild}},lastElementChild:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_lastElementChild}},nextElementSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_nextElementSibling}},previousElementSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_previousElementSibling}},
children:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_children}},childElementCount:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_childElementCount}},shadowRoot:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_shadowRoot}},assignedSlot:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_assignedSlot}},isConnected:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_isConnected}},innerHTML:{configurable:!0,
enumerable:!0,get:function(){return this.node.__shady_innerHTML},set:function(a){this.node.__shady_innerHTML=a}},textContent:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_textContent},set:function(a){this.node.__shady_textContent=a}},slot:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_slot},set:function(a){this.node.__shady_slot=a}}});
Ac.forEach(function(a){Object.defineProperty(yd.prototype,a,{get:function(){return this.node["__shady_"+a]},set:function(b){this.node["__shady_"+a]=b},configurable:!0})});var zd=new WeakMap;function Ad(a){if(C(a)||a instanceof yd)return a;var b=zd.get(a);b||(b=new yd(a),zd.set(a,b));return b};var Bd=E({dispatchEvent:function(a){xb();return this.__shady_native_dispatchEvent(a)},addEventListener:rc,removeEventListener:tc});var Cd=E({get assignedSlot(){var a=this.__shady_parentNode;(a=a&&a.__shady_shadowRoot)&&pd(a);return(a=A(this))&&a.assignedSlot||null}});var Dd=window.document;function Ed(a,b){if("slot"===b)a=a.__shady_parentNode,jb(a)&&Xc(A(a).root);else if("slot"===a.localName&&"name"===b&&(b=Wc(a))){if(b.a){qd(b);var c=a.Ba,d=ud(a);if(d!==c){c=b.b[c];var e=c.indexOf(a);0<=e&&c.splice(e,1);c=b.b[d]||(b.b[d]=[]);c.push(a);1<c.length&&(b.b[d]=vd(c))}}Xc(b)}}
var Fd=E({get previousElementSibling(){var a=A(this);if(a&&void 0!==a.previousSibling){for(a=this.__shady_previousSibling;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_previousSibling;return a}return this.__shady_native_previousElementSibling},get nextElementSibling(){var a=A(this);if(a&&void 0!==a.nextSibling){for(a=this.__shady_nextSibling;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_nextSibling;return a}return this.__shady_native_nextElementSibling},get slot(){return this.getAttribute("slot")},
set slot(a){this.__shady_setAttribute("slot",a)},get shadowRoot(){var a=A(this);return a&&a.va||null},get className(){return this.getAttribute("class")||""},set className(a){this.__shady_setAttribute("class",a)},setAttribute:function(a,b){if(this.ownerDocument!==Dd)this.__shady_native_setAttribute(a,b);else{var c;(c=Jc())&&"class"===a?(c.setElementClass(this,b),c=!0):c=!1;c||(this.__shady_native_setAttribute(a,b),Ed(this,a))}},removeAttribute:function(a){this.__shady_native_removeAttribute(a);Ed(this,
a)},attachShadow:function(a){if(!this)throw Error("Must provide a host.");if(!a)throw Error("Not enough arguments.");return new od(kd,this,a)}});var Gd=E({blur:function(){var a=A(this);(a=(a=a&&a.root)&&a.activeElement)?a.__shady_blur():this.__shady_native_blur()}});Ac.forEach(function(a){Gd[a]={set:function(b){var c=z(this),d=a.substring(2);c.Y[a]&&this.removeEventListener(d,c.Y[a]);this.__shady_addEventListener(d,b);c.Y[a]=b},get:function(){var b=A(this);return b&&b.Y[a]},configurable:!0}});var Hd=E({assignedNodes:function(a){if("slot"===this.localName){var b=this.__shady_getRootNode();b&&C(b)&&pd(b);return(b=A(this))?(a&&a.flatten?b.N:b.assignedNodes)||[]:[]}}});var Id=window.document,Jd=E({importNode:function(a,b){if(a.ownerDocument!==Id||"template"===a.localName)return this.__shady_native_importNode(a,b);var c=this.__shady_native_importNode(a,!1);if(b){a=a.__shady_childNodes;b=0;for(var d;b<a.length;b++)d=this.__shady_importNode(a[b],!0),c.__shady_appendChild(d)}return c}});var Kd=E({addEventListener:rc.bind(window),removeEventListener:tc.bind(window)});var Ld={};Object.getOwnPropertyDescriptor(HTMLElement.prototype,"parentElement")&&(Ld.parentElement=Zc.parentElement);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"contains")&&(Ld.contains=Zc.contains);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"children")&&(Ld.children=bd.children);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"innerHTML")&&(Ld.innerHTML=hd.innerHTML);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"className")&&(Ld.className=Fd.className);
var Md={EventTarget:[Bd],Node:[Zc,window.EventTarget?null:Bd],Text:[Cd],Element:[Fd,bd,Cd,!B.D||"innerHTML"in Element.prototype?hd:null,window.HTMLSlotElement?null:Hd],HTMLElement:[Gd,Ld],HTMLSlotElement:[Hd],DocumentFragment:[dd,ed],Document:[Jd,dd,ed,fd],Window:[Kd]},Nd=B.D?null:["innerHTML","textContent"];function Od(a){var b=a?null:Nd,c={},d;for(d in Md)c.fa=window[d]&&window[d].prototype,Md[d].forEach(function(c){return function(d){return c.fa&&d&&D(c.fa,d,a,b)}}(c)),c={fa:c.fa}};if(B.ma){var ShadyDOM={inUse:B.ma,patch:function(a){cc(a);bc(a);return a},isShadyRoot:C,enqueue:wb,flush:xb,flushInitial:function(a){!a.ja&&a.M&&pd(a)},settings:B,filterMutations:Fb,observeChildren:Db,unobserveChildren:Eb,deferConnectionCallbacks:B.deferConnectionCallbacks,preferPerformance:B.preferPerformance,handlesDynamicScoping:!0,wrap:B.T?Ad:function(a){return a},Wrapper:yd,composedPath:jc,noPatch:B.T,nativeMethods:Ob,nativeTree:Pb};window.ShadyDOM=ShadyDOM;Wb();Od("__shady_");Object.defineProperty(document,
"_activeElement",fd.activeElement);D(Window.prototype,Kd,"__shady_");B.T||(Od(),zc());uc();window.Event=wc;window.CustomEvent=xc;window.MouseEvent=yc;window.ShadowRoot=od};var Pd=new Set("annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" "));function Qd(a){var b=Pd.has(a);a=/^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(a);return!b&&a}function J(a){var b=a.isConnected;if(void 0!==b)return b;for(;a&&!(a.__CE_isImportDocument||a instanceof Document);)a=a.parentNode||(window.ShadowRoot&&a instanceof ShadowRoot?a.host:void 0);return!(!a||!(a.__CE_isImportDocument||a instanceof Document))}
function Rd(a,b){for(;b&&b!==a&&!b.nextSibling;)b=b.parentNode;return b&&b!==a?b.nextSibling:null}
function Sd(a,b,c){c=void 0===c?new Set:c;for(var d=a;d;){if(d.nodeType===Node.ELEMENT_NODE){var e=d;b(e);var f=e.localName;if("link"===f&&"import"===e.getAttribute("rel")){d=e.import;if(d instanceof Node&&!c.has(d))for(c.add(d),d=d.firstChild;d;d=d.nextSibling)Sd(d,b,c);d=Rd(a,e);continue}else if("template"===f){d=Rd(a,e);continue}if(e=e.__CE_shadowRoot)for(e=e.firstChild;e;e=e.nextSibling)Sd(e,b,c)}d=d.firstChild?d.firstChild:Rd(a,d)}}function K(a,b,c){a[b]=c};function Td(){this.a=new Map;this.u=new Map;this.f=[];this.c=!1}function Ud(a,b,c){a.a.set(b,c);a.u.set(c.constructorFunction,c)}function Vd(a,b){a.c=!0;a.f.push(b)}function Wd(a,b){a.c&&Sd(b,function(b){return a.b(b)})}Td.prototype.b=function(a){if(this.c&&!a.__CE_patched){a.__CE_patched=!0;for(var b=0;b<this.f.length;b++)this.f[b](a)}};function L(a,b){var c=[];Sd(b,function(a){return c.push(a)});for(b=0;b<c.length;b++){var d=c[b];1===d.__CE_state?a.connectedCallback(d):Xd(a,d)}}
function M(a,b){var c=[];Sd(b,function(a){return c.push(a)});for(b=0;b<c.length;b++){var d=c[b];1===d.__CE_state&&a.disconnectedCallback(d)}}
function N(a,b,c){c=void 0===c?{}:c;var d=c.Za||new Set,e=c.ga||function(b){return Xd(a,b)},f=[];Sd(b,function(b){if("link"===b.localName&&"import"===b.getAttribute("rel")){var c=b.import;c instanceof Node&&(c.__CE_isImportDocument=!0,c.__CE_hasRegistry=!0);c&&"complete"===c.readyState?c.__CE_documentLoadHandled=!0:b.addEventListener("load",function(){var c=b.import;if(!c.__CE_documentLoadHandled){c.__CE_documentLoadHandled=!0;var f=new Set(d);f.delete(c);N(a,c,{Za:f,ga:e})}})}else f.push(b)},d);
if(a.c)for(b=0;b<f.length;b++)a.b(f[b]);for(b=0;b<f.length;b++)e(f[b])}
function Xd(a,b){if(void 0===b.__CE_state){var c=b.ownerDocument;if(c.defaultView||c.__CE_isImportDocument&&c.__CE_hasRegistry)if(c=a.a.get(b.localName)){c.constructionStack.push(b);var d=c.constructorFunction;try{try{if(new d!==b)throw Error("The custom element constructor did not produce the element being upgraded.");}finally{c.constructionStack.pop()}}catch(g){throw b.__CE_state=2,g;}b.__CE_state=1;b.__CE_definition=c;if(c.attributeChangedCallback)for(c=c.observedAttributes,d=0;d<c.length;d++){var e=
c[d],f=b.getAttribute(e);null!==f&&a.attributeChangedCallback(b,e,null,f,null)}J(b)&&a.connectedCallback(b)}}}Td.prototype.connectedCallback=function(a){var b=a.__CE_definition;b.connectedCallback&&b.connectedCallback.call(a)};Td.prototype.disconnectedCallback=function(a){var b=a.__CE_definition;b.disconnectedCallback&&b.disconnectedCallback.call(a)};
Td.prototype.attributeChangedCallback=function(a,b,c,d,e){var f=a.__CE_definition;f.attributeChangedCallback&&-1<f.observedAttributes.indexOf(b)&&f.attributeChangedCallback.call(a,b,c,d,e)};function Yd(a){var b=document;this.b=a;this.a=b;this.O=void 0;N(this.b,this.a);"loading"===this.a.readyState&&(this.O=new MutationObserver(this.c.bind(this)),this.O.observe(this.a,{childList:!0,subtree:!0}))}function Zd(a){a.O&&a.O.disconnect()}Yd.prototype.c=function(a){var b=this.a.readyState;"interactive"!==b&&"complete"!==b||Zd(this);for(b=0;b<a.length;b++)for(var c=a[b].addedNodes,d=0;d<c.length;d++)N(this.b,c[d])};function $d(){var a=this;this.a=this.w=void 0;this.b=new Promise(function(b){a.a=b;a.w&&b(a.w)})}$d.prototype.resolve=function(a){if(this.w)throw Error("Already resolved.");this.w=a;this.a&&this.a(a)};function O(a){this.c=!1;this.a=a;this.F=new Map;this.f=function(a){return a()};this.b=!1;this.u=[];this.ca=new Yd(a)}r=O.prototype;
r.xa=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructors must be functions.");if(!Qd(a))throw new SyntaxError("The element name '"+a+"' is not valid.");if(this.a.a.get(a))throw Error("A custom element with name '"+a+"' has already been defined.");if(this.c)throw Error("A custom element is already being defined.");this.c=!0;try{var d=function(a){var b=e[a];if(void 0!==b&&!(b instanceof Function))throw Error("The '"+a+"' callback must be a function.");
return b},e=b.prototype;if(!(e instanceof Object))throw new TypeError("The custom element constructor's prototype is not an object.");var f=d("connectedCallback");var g=d("disconnectedCallback");var h=d("adoptedCallback");var k=d("attributeChangedCallback");var m=b.observedAttributes||[]}catch(n){return}finally{this.c=!1}b={localName:a,constructorFunction:b,connectedCallback:f,disconnectedCallback:g,adoptedCallback:h,attributeChangedCallback:k,observedAttributes:m,constructionStack:[]};Ud(this.a,
a,b);this.u.push(b);this.b||(this.b=!0,this.f(function(){return ae(c)}))};r.ga=function(a){N(this.a,a)};
function ae(a){if(!1!==a.b){a.b=!1;for(var b=a.u,c=[],d=new Map,e=0;e<b.length;e++)d.set(b[e].localName,[]);N(a.a,document,{ga:function(b){if(void 0===b.__CE_state){var e=b.localName,f=d.get(e);f?f.push(b):a.a.a.get(e)&&c.push(b)}}});for(e=0;e<c.length;e++)Xd(a.a,c[e]);for(;0<b.length;){var f=b.shift();e=f.localName;f=d.get(f.localName);for(var g=0;g<f.length;g++)Xd(a.a,f[g]);(e=a.F.get(e))&&e.resolve(void 0)}}}r.get=function(a){if(a=this.a.a.get(a))return a.constructorFunction};
r.ya=function(a){if(!Qd(a))return Promise.reject(new SyntaxError("'"+a+"' is not a valid custom element name."));var b=this.F.get(a);if(b)return b.b;b=new $d;this.F.set(a,b);this.a.a.get(a)&&!this.u.some(function(b){return b.localName===a})&&b.resolve(void 0);return b.b};r.Ra=function(a){Zd(this.ca);var b=this.f;this.f=function(c){return a(function(){return b(c)})}};window.CustomElementRegistry=O;O.prototype.define=O.prototype.xa;O.prototype.upgrade=O.prototype.ga;O.prototype.get=O.prototype.get;
O.prototype.whenDefined=O.prototype.ya;O.prototype.polyfillWrapFlushCallback=O.prototype.Ra;var be=window.Document.prototype.createElement,ce=window.Document.prototype.createElementNS,de=window.Document.prototype.importNode,ee=window.Document.prototype.prepend,fe=window.Document.prototype.append,ge=window.DocumentFragment.prototype.prepend,he=window.DocumentFragment.prototype.append,ie=window.Node.prototype.cloneNode,je=window.Node.prototype.appendChild,ke=window.Node.prototype.insertBefore,le=window.Node.prototype.removeChild,me=window.Node.prototype.replaceChild,ne=Object.getOwnPropertyDescriptor(window.Node.prototype,
"textContent"),oe=window.Element.prototype.attachShadow,pe=Object.getOwnPropertyDescriptor(window.Element.prototype,"innerHTML"),qe=window.Element.prototype.getAttribute,re=window.Element.prototype.setAttribute,se=window.Element.prototype.removeAttribute,te=window.Element.prototype.getAttributeNS,ue=window.Element.prototype.setAttributeNS,ve=window.Element.prototype.removeAttributeNS,we=window.Element.prototype.insertAdjacentElement,xe=window.Element.prototype.insertAdjacentHTML,ye=window.Element.prototype.prepend,
ze=window.Element.prototype.append,Ae=window.Element.prototype.before,Be=window.Element.prototype.after,Ce=window.Element.prototype.replaceWith,De=window.Element.prototype.remove,Ee=window.HTMLElement,Fe=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML"),Ge=window.HTMLElement.prototype.insertAdjacentElement,He=window.HTMLElement.prototype.insertAdjacentHTML;var Ie=new function(){};function Je(){var a=Ke;window.HTMLElement=function(){function b(){var b=this.constructor,d=a.u.get(b);if(!d)throw Error("The custom element being constructed was not registered with `customElements`.");var e=d.constructionStack;if(0===e.length)return e=be.call(document,d.localName),Object.setPrototypeOf(e,b.prototype),e.__CE_state=1,e.__CE_definition=d,a.b(e),e;d=e.length-1;var f=e[d];if(f===Ie)throw Error("The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.");
e[d]=Ie;Object.setPrototypeOf(f,b.prototype);a.b(f);return f}b.prototype=Ee.prototype;Object.defineProperty(b.prototype,"constructor",{writable:!0,configurable:!0,enumerable:!1,value:b});return b}()};function Le(a,b,c){function d(b){return function(c){for(var d=[],e=0;e<arguments.length;++e)d[e]=arguments[e];e=[];for(var f=[],m=0;m<d.length;m++){var n=d[m];n instanceof Element&&J(n)&&f.push(n);if(n instanceof DocumentFragment)for(n=n.firstChild;n;n=n.nextSibling)e.push(n);else e.push(n)}b.apply(this,d);for(d=0;d<f.length;d++)M(a,f[d]);if(J(this))for(d=0;d<e.length;d++)f=e[d],f instanceof Element&&L(a,f)}}void 0!==c.ea&&(b.prepend=d(c.ea));void 0!==c.append&&(b.append=d(c.append))};function Me(){var a=Ke;K(Document.prototype,"createElement",function(b){if(this.__CE_hasRegistry){var c=a.a.get(b);if(c)return new c.constructorFunction}b=be.call(this,b);a.b(b);return b});K(Document.prototype,"importNode",function(b,c){b=de.call(this,b,!!c);this.__CE_hasRegistry?N(a,b):Wd(a,b);return b});K(Document.prototype,"createElementNS",function(b,c){if(this.__CE_hasRegistry&&(null===b||"http://www.w3.org/1999/xhtml"===b)){var d=a.a.get(c);if(d)return new d.constructorFunction}b=ce.call(this,
b,c);a.b(b);return b});Le(a,Document.prototype,{ea:ee,append:fe})};function Ne(){function a(a,d){Object.defineProperty(a,"textContent",{enumerable:d.enumerable,configurable:!0,get:d.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)d.set.call(this,a);else{var c=void 0;if(this.firstChild){var e=this.childNodes,h=e.length;if(0<h&&J(this)){c=Array(h);for(var k=0;k<h;k++)c[k]=e[k]}}d.set.call(this,a);if(c)for(a=0;a<c.length;a++)M(b,c[a])}}})}var b=Ke;K(Node.prototype,"insertBefore",function(a,d){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);
a=ke.call(this,a,d);if(J(this))for(d=0;d<c.length;d++)L(b,c[d]);return a}c=J(a);d=ke.call(this,a,d);c&&M(b,a);J(this)&&L(b,a);return d});K(Node.prototype,"appendChild",function(a){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=je.call(this,a);if(J(this))for(var e=0;e<c.length;e++)L(b,c[e]);return a}c=J(a);e=je.call(this,a);c&&M(b,a);J(this)&&L(b,a);return e});K(Node.prototype,"cloneNode",function(a){a=ie.call(this,!!a);this.ownerDocument.__CE_hasRegistry?N(b,a):
Wd(b,a);return a});K(Node.prototype,"removeChild",function(a){var c=J(a),e=le.call(this,a);c&&M(b,a);return e});K(Node.prototype,"replaceChild",function(a,d){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=me.call(this,a,d);if(J(this))for(M(b,d),d=0;d<c.length;d++)L(b,c[d]);return a}c=J(a);var f=me.call(this,a,d),g=J(this);g&&M(b,d);c&&M(b,a);g&&L(b,a);return f});ne&&ne.get?a(Node.prototype,ne):Vd(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=
[],b=0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join("")},set:function(a){for(;this.firstChild;)le.call(this,this.firstChild);je.call(this,document.createTextNode(a))}})})};function Oe(a){function b(b){return function(c){for(var d=[],e=0;e<arguments.length;++e)d[e]=arguments[e];e=[];for(var h=[],k=0;k<d.length;k++){var m=d[k];m instanceof Element&&J(m)&&h.push(m);if(m instanceof DocumentFragment)for(m=m.firstChild;m;m=m.nextSibling)e.push(m);else e.push(m)}b.apply(this,d);for(d=0;d<h.length;d++)M(a,h[d]);if(J(this))for(d=0;d<e.length;d++)h=e[d],h instanceof Element&&L(a,h)}}var c=Element.prototype;void 0!==Ae&&(c.before=b(Ae));void 0!==Ae&&(c.after=b(Be));void 0!==Ce&&
K(c,"replaceWith",function(b){for(var c=[],d=0;d<arguments.length;++d)c[d]=arguments[d];d=[];for(var g=[],h=0;h<c.length;h++){var k=c[h];k instanceof Element&&J(k)&&g.push(k);if(k instanceof DocumentFragment)for(k=k.firstChild;k;k=k.nextSibling)d.push(k);else d.push(k)}h=J(this);Ce.apply(this,c);for(c=0;c<g.length;c++)M(a,g[c]);if(h)for(M(a,this),c=0;c<d.length;c++)g=d[c],g instanceof Element&&L(a,g)});void 0!==De&&K(c,"remove",function(){var b=J(this);De.call(this);b&&M(a,this)})};function Pe(){function a(a,b){Object.defineProperty(a,"innerHTML",{enumerable:b.enumerable,configurable:!0,get:b.get,set:function(a){var c=this,e=void 0;J(this)&&(e=[],Sd(this,function(a){a!==c&&e.push(a)}));b.set.call(this,a);if(e)for(var f=0;f<e.length;f++){var g=e[f];1===g.__CE_state&&d.disconnectedCallback(g)}this.ownerDocument.__CE_hasRegistry?N(d,this):Wd(d,this);return a}})}function b(a,b){K(a,"insertAdjacentElement",function(a,c){var e=J(c);a=b.call(this,a,c);e&&M(d,c);J(a)&&L(d,c);return a})}
function c(a,b){function c(a,b){for(var c=[];a!==b;a=a.nextSibling)c.push(a);for(b=0;b<c.length;b++)N(d,c[b])}K(a,"insertAdjacentHTML",function(a,d){a=a.toLowerCase();if("beforebegin"===a){var e=this.previousSibling;b.call(this,a,d);c(e||this.parentNode.firstChild,this)}else if("afterbegin"===a)e=this.firstChild,b.call(this,a,d),c(this.firstChild,e);else if("beforeend"===a)e=this.lastChild,b.call(this,a,d),c(e||this.firstChild,null);else if("afterend"===a)e=this.nextSibling,b.call(this,a,d),c(this.nextSibling,
e);else throw new SyntaxError("The value provided ("+String(a)+") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.");})}var d=Ke;oe&&K(Element.prototype,"attachShadow",function(a){return this.__CE_shadowRoot=a=oe.call(this,a)});pe&&pe.get?a(Element.prototype,pe):Fe&&Fe.get?a(HTMLElement.prototype,Fe):Vd(d,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return ie.call(this,!0).innerHTML},set:function(a){var b="template"===this.localName,c=b?this.content:this,d=ce.call(document,
this.namespaceURI,this.localName);for(d.innerHTML=a;0<c.childNodes.length;)le.call(c,c.childNodes[0]);for(a=b?d.content:d;0<a.childNodes.length;)je.call(c,a.childNodes[0])}})});K(Element.prototype,"setAttribute",function(a,b){if(1!==this.__CE_state)return re.call(this,a,b);var c=qe.call(this,a);re.call(this,a,b);b=qe.call(this,a);d.attributeChangedCallback(this,a,c,b,null)});K(Element.prototype,"setAttributeNS",function(a,b,c){if(1!==this.__CE_state)return ue.call(this,a,b,c);var e=te.call(this,a,
b);ue.call(this,a,b,c);c=te.call(this,a,b);d.attributeChangedCallback(this,b,e,c,a)});K(Element.prototype,"removeAttribute",function(a){if(1!==this.__CE_state)return se.call(this,a);var b=qe.call(this,a);se.call(this,a);null!==b&&d.attributeChangedCallback(this,a,b,null,null)});K(Element.prototype,"removeAttributeNS",function(a,b){if(1!==this.__CE_state)return ve.call(this,a,b);var c=te.call(this,a,b);ve.call(this,a,b);var e=te.call(this,a,b);c!==e&&d.attributeChangedCallback(this,b,c,e,a)});Ge?b(HTMLElement.prototype,
Ge):we?b(Element.prototype,we):console.warn("Custom Elements: `Element#insertAdjacentElement` was not patched.");He?c(HTMLElement.prototype,He):xe?c(Element.prototype,xe):console.warn("Custom Elements: `Element#insertAdjacentHTML` was not patched.");Le(d,Element.prototype,{ea:ye,append:ze});Oe(d)};var Qe=window.customElements;if(!Qe||Qe.forcePolyfill||"function"!=typeof Qe.define||"function"!=typeof Qe.get){var Ke=new Td;Je();Me();Le(Ke,DocumentFragment.prototype,{ea:ge,append:he});Ne();Pe();document.__CE_hasRegistry=!0;var customElements=new O(Ke);Object.defineProperty(window,"customElements",{configurable:!0,enumerable:!0,value:customElements})};function Re(){this.end=this.start=0;this.rules=this.parent=this.previous=null;this.cssText=this.parsedCssText="";this.atRule=!1;this.type=0;this.parsedSelector=this.selector=this.keyframesName=""}
function Se(a){a=a.replace(Te,"").replace(Ue,"");var b=Ve,c=a,d=new Re;d.start=0;d.end=c.length;for(var e=d,f=0,g=c.length;f<g;f++)if("{"===c[f]){e.rules||(e.rules=[]);var h=e,k=h.rules[h.rules.length-1]||null;e=new Re;e.start=f+1;e.parent=h;e.previous=k;h.rules.push(e)}else"}"===c[f]&&(e.end=f+1,e=e.parent||d);return b(d,a)}
function Ve(a,b){var c=b.substring(a.start,a.end-1);a.parsedCssText=a.cssText=c.trim();a.parent&&(c=b.substring(a.previous?a.previous.end:a.parent.start,a.start-1),c=We(c),c=c.replace(Xe," "),c=c.substring(c.lastIndexOf(";")+1),c=a.parsedSelector=a.selector=c.trim(),a.atRule=0===c.indexOf("@"),a.atRule?0===c.indexOf("@media")?a.type=Ye:c.match(Ze)&&(a.type=$e,a.keyframesName=a.selector.split(Xe).pop()):a.type=0===c.indexOf("--")?af:bf);if(c=a.rules)for(var d=0,e=c.length,f=void 0;d<e&&(f=c[d]);d++)Ve(f,
b);return a}function We(a){return a.replace(/\\([0-9a-f]{1,6})\s/gi,function(a,c){a=c;for(c=6-a.length;c--;)a="0"+a;return"\\"+a})}
function cf(a,b,c){c=void 0===c?"":c;var d="";if(a.cssText||a.rules){var e=a.rules,f;if(f=e)f=e[0],f=!(f&&f.selector&&0===f.selector.indexOf("--"));if(f){f=0;for(var g=e.length,h=void 0;f<g&&(h=e[f]);f++)d=cf(h,b,d)}else b?b=a.cssText:(b=a.cssText,b=b.replace(df,"").replace(ef,""),b=b.replace(ff,"").replace(gf,"")),(d=b.trim())&&(d="  "+d+"\n")}d&&(a.selector&&(c+=a.selector+" {\n"),c+=d,a.selector&&(c+="}\n\n"));return c}
var bf=1,$e=7,Ye=4,af=1E3,Te=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim,Ue=/@import[^;]*;/gim,df=/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,ef=/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,ff=/@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim,gf=/[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,Ze=/^@[^\s]*keyframes/,Xe=/\s+/g;var P=!(window.ShadyDOM&&window.ShadyDOM.inUse),hf;function jf(a){hf=a&&a.shimcssproperties?!1:P||!(navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/)||!window.CSS||!CSS.supports||!CSS.supports("box-shadow","0 0 0 var(--foo)"))}var kf;window.ShadyCSS&&void 0!==window.ShadyCSS.cssBuild&&(kf=window.ShadyCSS.cssBuild);var lf=!(!window.ShadyCSS||!window.ShadyCSS.disableRuntime);
window.ShadyCSS&&void 0!==window.ShadyCSS.nativeCss?hf=window.ShadyCSS.nativeCss:window.ShadyCSS?(jf(window.ShadyCSS),window.ShadyCSS=void 0):jf(window.WebComponents&&window.WebComponents.flags);var R=hf,of=kf;var pf=/(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};{])+)|\{([^}]*)\}(?:(?=[;\s}])|$))/gi,qf=/(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi,rf=/(--[\w-]+)\s*([:,;)]|$)/gi,sf=/(animation\s*:)|(animation-name\s*:)/,tf=/@media\s(.*)/,uf=/\{[^}]*\}/g;var vf=new Set;function wf(a,b){if(!a)return"";"string"===typeof a&&(a=Se(a));b&&xf(a,b);return cf(a,R)}function yf(a){!a.__cssRules&&a.textContent&&(a.__cssRules=Se(a.textContent));return a.__cssRules||null}function zf(a){return!!a.parent&&a.parent.type===$e}function xf(a,b,c,d){if(a){var e=!1,f=a.type;if(d&&f===Ye){var g=a.selector.match(tf);g&&(window.matchMedia(g[1]).matches||(e=!0))}f===bf?b(a):c&&f===$e?c(a):f===af&&(e=!0);if((a=a.rules)&&!e)for(e=0,f=a.length,g=void 0;e<f&&(g=a[e]);e++)xf(g,b,c,d)}}
function Af(a,b,c,d){var e=document.createElement("style");b&&e.setAttribute("scope",b);e.textContent=a;Bf(e,c,d);return e}var Cf=null;function Df(a){a=document.createComment(" Shady DOM styles for "+a+" ");var b=document.head;b.insertBefore(a,(Cf?Cf.nextSibling:null)||b.firstChild);return Cf=a}function Bf(a,b,c){b=b||document.head;b.insertBefore(a,c&&c.nextSibling||b.firstChild);Cf?a.compareDocumentPosition(Cf)===Node.DOCUMENT_POSITION_PRECEDING&&(Cf=a):Cf=a}
function Ef(a,b){for(var c=0,d=a.length;b<d;b++)if("("===a[b])c++;else if(")"===a[b]&&0===--c)return b;return-1}function Ff(a,b){var c=a.indexOf("var(");if(-1===c)return b(a,"","","");var d=Ef(a,c+3),e=a.substring(c+4,d);c=a.substring(0,c);a=Ff(a.substring(d+1),b);d=e.indexOf(",");return-1===d?b(c,e.trim(),"",a):b(c,e.substring(0,d).trim(),e.substring(d+1).trim(),a)}function Gf(a,b){P?a.setAttribute("class",b):window.ShadyDOM.nativeMethods.setAttribute.call(a,"class",b)}
var Hf=window.ShadyDOM&&window.ShadyDOM.wrap||function(a){return a};function If(a){var b=a.localName,c="";b?-1<b.indexOf("-")||(c=b,b=a.getAttribute&&a.getAttribute("is")||""):(b=a.is,c=a.extends);return{is:b,W:c}}function Jf(a){for(var b=[],c="",d=0;0<=d&&d<a.length;d++)if("("===a[d]){var e=Ef(a,d);c+=a.slice(d,e+1);d=e}else","===a[d]?(b.push(c),c=""):c+=a[d];c&&b.push(c);return b}
function Kf(a){if(void 0!==of)return of;if(void 0===a.__cssBuild){var b=a.getAttribute("css-build");if(b)a.__cssBuild=b;else{a:{b="template"===a.localName?a.content.firstChild:a.firstChild;if(b instanceof Comment&&(b=b.textContent.trim().split(":"),"css-build"===b[0])){b=b[1];break a}b=""}if(""!==b){var c="template"===a.localName?a.content.firstChild:a.firstChild;c.parentNode.removeChild(c)}a.__cssBuild=b}}return a.__cssBuild||""}
function Lf(a){a=void 0===a?"":a;return""!==a&&R?P?"shadow"===a:"shady"===a:!1};function Mf(){}function Nf(a,b){Of(S,a,function(a){Pf(a,b||"")})}function Of(a,b,c){b.nodeType===Node.ELEMENT_NODE&&c(b);var d;"template"===b.localName?d=(b.content||b._content||b).childNodes:d=b.children||b.childNodes;if(d)for(b=0;b<d.length;b++)Of(a,d[b],c)}
function Pf(a,b,c){if(b)if(a.classList)c?(a.classList.remove("style-scope"),a.classList.remove(b)):(a.classList.add("style-scope"),a.classList.add(b));else if(a.getAttribute){var d=a.getAttribute("class");c?d&&(b=d.replace("style-scope","").replace(b,""),Gf(a,b)):Gf(a,(d?d+" ":"")+"style-scope "+b)}}function Qf(a,b,c){Of(S,a,function(a){Pf(a,b,!0);Pf(a,c)})}function Rf(a,b){Of(S,a,function(a){Pf(a,b||"",!0)})}
function Sf(a,b,c,d,e){var f=S;e=void 0===e?"":e;""===e&&(P||"shady"===(void 0===d?"":d)?e=wf(b,c):(a=If(a),e=Tf(f,b,a.is,a.W,c)+"\n\n"));return e.trim()}function Tf(a,b,c,d,e){var f=Uf(c,d);c=c?"."+c:"";return wf(b,function(b){b.c||(b.selector=b.C=Vf(a,b,a.b,c,f),b.c=!0);e&&e(b,c,f)})}function Uf(a,b){return b?"[is="+a+"]":a}
function Vf(a,b,c,d,e){var f=Jf(b.selector);if(!zf(b)){b=0;for(var g=f.length,h=void 0;b<g&&(h=f[b]);b++)f[b]=c.call(a,h,d,e)}return f.filter(function(a){return!!a}).join(",")}function Wf(a){return a.replace(Xf,function(a,c,d){-1<d.indexOf("+")?d=d.replace(/\+/g,"___"):-1<d.indexOf("___")&&(d=d.replace(/___/g,"+"));return":"+c+"("+d+")"})}
function Yf(a){for(var b=[],c;c=a.match(Zf);){var d=c.index,e=Ef(a,d);if(-1===e)throw Error(c.input+" selector missing ')'");c=a.slice(d,e+1);a=a.replace(c,"\ue000");b.push(c)}return{pa:a,matches:b}}function $f(a,b){var c=a.split("\ue000");return b.reduce(function(a,b,f){return a+b+c[f+1]},c[0])}
Mf.prototype.b=function(a,b,c){var d=!1;a=a.trim();var e=Xf.test(a);e&&(a=a.replace(Xf,function(a,b,c){return":"+b+"("+c.replace(/\s/g,"")+")"}),a=Wf(a));var f=Zf.test(a);if(f){var g=Yf(a);a=g.pa;g=g.matches}a=a.replace(ag,":host $1");a=a.replace(bg,function(a,e,f){d||(a=cg(f,e,b,c),d=d||a.stop,e=a.Ha,f=a.value);return e+f});f&&(a=$f(a,g));e&&(a=Wf(a));return a};
function cg(a,b,c,d){var e=a.indexOf("::slotted");0<=a.indexOf(":host")?a=dg(a,d):0!==e&&(a=c?eg(a,c):a);c=!1;0<=e&&(b="",c=!0);if(c){var f=!0;c&&(a=a.replace(fg,function(a,b){return" > "+b}))}a=a.replace(gg,function(a,b,c){return'[dir="'+c+'"] '+b+", "+b+'[dir="'+c+'"]'});return{value:a,Ha:b,stop:f}}
function eg(a,b){a=a.split(/(\[.+?\])/);for(var c=[],d=0;d<a.length;d++)if(1===d%2)c.push(a[d]);else{var e=a[d];if(""!==e||d!==a.length-1)e=e.split(":"),e[0]+=b,c.push(e.join(":"))}return c.join("")}function dg(a,b){var c=a.match(hg);return(c=c&&c[2].trim()||"")?c[0].match(ig)?a.replace(hg,function(a,c,f){return b+f}):c.split(ig)[0]===b?c:"should_not_match":a.replace(":host",b)}function jg(a){":root"===a.selector&&(a.selector="html")}
Mf.prototype.c=function(a){return a.match(":host")?"":a.match("::slotted")?this.b(a,":not(.style-scope)"):eg(a.trim(),":not(.style-scope)")};t.Object.defineProperties(Mf.prototype,{a:{configurable:!0,enumerable:!0,get:function(){return"style-scope"}}});
var Xf=/:(nth[-\w]+)\(([^)]+)\)/,bg=/(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=[])+)/g,ig=/[[.:#*]/,ag=/^(::slotted)/,hg=/(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,fg=/(?:::slotted)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,gg=/(.*):dir\((?:(ltr|rtl))\)/,Zf=/:(?:matches|any|-(?:webkit|moz)-any)/,S=new Mf;function kg(a,b,c,d,e){this.L=a||null;this.b=b||null;this.na=c||[];this.G=null;this.cssBuild=e||"";this.W=d||"";this.a=this.H=this.K=null}function U(a){return a?a.__styleInfo:null}function lg(a,b){return a.__styleInfo=b}kg.prototype.c=function(){return this.L};kg.prototype._getStyleRules=kg.prototype.c;function mg(a){var b=this.matches||this.matchesSelector||this.mozMatchesSelector||this.msMatchesSelector||this.oMatchesSelector||this.webkitMatchesSelector;return b&&b.call(this,a)}var ng=navigator.userAgent.match("Trident");function og(){}function pg(a){var b={},c=[],d=0;xf(a,function(a){qg(a);a.index=d++;a=a.A.cssText;for(var c;c=rf.exec(a);){var e=c[1];":"!==c[2]&&(b[e]=!0)}},function(a){c.push(a)});a.b=c;a=[];for(var e in b)a.push(e);return a}
function qg(a){if(!a.A){var b={},c={};rg(a,c)&&(b.J=c,a.rules=null);b.cssText=a.parsedCssText.replace(uf,"").replace(pf,"");a.A=b}}function rg(a,b){var c=a.A;if(c){if(c.J)return Object.assign(b,c.J),!0}else{c=a.parsedCssText;for(var d;a=pf.exec(c);){d=(a[2]||a[3]).trim();if("inherit"!==d||"unset"!==d)b[a[1].trim()]=d;d=!0}return d}}
function sg(a,b,c){b&&(b=0<=b.indexOf(";")?tg(a,b,c):Ff(b,function(b,e,f,g){if(!e)return b+g;(e=sg(a,c[e],c))&&"initial"!==e?"apply-shim-inherit"===e&&(e="inherit"):e=sg(a,c[f]||f,c)||f;return b+(e||"")+g}));return b&&b.trim()||""}
function tg(a,b,c){b=b.split(";");for(var d=0,e,f;d<b.length;d++)if(e=b[d]){qf.lastIndex=0;if(f=qf.exec(e))e=sg(a,c[f[1]],c);else if(f=e.indexOf(":"),-1!==f){var g=e.substring(f);g=g.trim();g=sg(a,g,c)||g;e=e.substring(0,f)+g}b[d]=e&&e.lastIndexOf(";")===e.length-1?e.slice(0,-1):e||""}return b.join(";")}
function ug(a,b){var c={},d=[];xf(a,function(a){a.A||qg(a);var e=a.C||a.parsedSelector;b&&a.A.J&&e&&mg.call(b,e)&&(rg(a,c),a=a.index,e=parseInt(a/32,10),d[e]=(d[e]||0)|1<<a%32)},null,!0);return{J:c,key:d}}
function vg(a,b,c,d){b.A||qg(b);if(b.A.J){var e=If(a);a=e.is;e=e.W;e=a?Uf(a,e):"html";var f=b.parsedSelector,g=":host > *"===f||"html"===f,h=0===f.indexOf(":host")&&!g;"shady"===c&&(g=f===e+" > *."+e||-1!==f.indexOf("html"),h=!g&&0===f.indexOf(e));if(g||h)c=e,h&&(b.C||(b.C=Vf(S,b,S.b,a?"."+a:"",e)),c=b.C||e),d({pa:c,Oa:h,ab:g})}}function wg(a,b,c){var d={},e={};xf(b,function(b){vg(a,b,c,function(c){mg.call(a._element||a,c.pa)&&(c.Oa?rg(b,d):rg(b,e))})},null,!0);return{Ta:e,Ma:d}}
function xg(a,b,c,d){var e=If(b),f=Uf(e.is,e.W),g=new RegExp("(?:^|[^.#[:])"+(b.extends?"\\"+f.slice(0,-1)+"\\]":f)+"($|[.:[\\s>+~])"),h=U(b);e=h.L;h=h.cssBuild;var k=yg(e,d);return Sf(b,e,function(b){var e="";b.A||qg(b);b.A.cssText&&(e=tg(a,b.A.cssText,c));b.cssText=e;if(!P&&!zf(b)&&b.cssText){var h=e=b.cssText;null==b.ta&&(b.ta=sf.test(e));if(b.ta)if(null==b.da){b.da=[];for(var m in k)h=k[m],h=h(e),e!==h&&(e=h,b.da.push(m))}else{for(m=0;m<b.da.length;++m)h=k[b.da[m]],e=h(e);h=e}b.cssText=h;b.C=
b.C||b.selector;e="."+d;m=Jf(b.C);h=0;for(var u=m.length,x=void 0;h<u&&(x=m[h]);h++)m[h]=x.match(g)?x.replace(f,e):e+" "+x;b.selector=m.join(",")}},h)}function yg(a,b){a=a.b;var c={};if(!P&&a)for(var d=0,e=a[d];d<a.length;e=a[++d]){var f=e,g=b;f.f=new RegExp("\\b"+f.keyframesName+"(?!\\B|-)","g");f.a=f.keyframesName+"-"+g;f.C=f.C||f.selector;f.selector=f.C.replace(f.keyframesName,f.a);c[e.keyframesName]=zg(e)}return c}function zg(a){return function(b){return b.replace(a.f,a.a)}}
function Ag(a,b){var c=Bg,d=yf(a);a.textContent=wf(d,function(a){var d=a.cssText=a.parsedCssText;a.A&&a.A.cssText&&(d=d.replace(df,"").replace(ef,""),a.cssText=tg(c,d,b))})}t.Object.defineProperties(og.prototype,{a:{configurable:!0,enumerable:!0,get:function(){return"x-scope"}}});var Bg=new og;var Cg={},Dg=window.customElements;if(Dg&&!P&&!lf){var Eg=Dg.define;Dg.define=function(a,b,c){Cg[a]||(Cg[a]=Df(a));Eg.call(Dg,a,b,c)}};function Fg(){this.cache={}}Fg.prototype.store=function(a,b,c,d){var e=this.cache[a]||[];e.push({J:b,styleElement:c,H:d});100<e.length&&e.shift();this.cache[a]=e};function Gg(){}var Hg=new RegExp(S.a+"\\s*([^\\s]*)");function Ig(a){return(a=(a.classList&&a.classList.value?a.classList.value:a.getAttribute("class")||"").match(Hg))?a[1]:""}function Jg(a){var b=Hf(a).getRootNode();return b===a||b===a.ownerDocument?"":(a=b.host)?If(a).is:""}
function Kg(a){for(var b=0;b<a.length;b++){var c=a[b];if(c.target!==document.documentElement&&c.target!==document.head)for(var d=0;d<c.addedNodes.length;d++){var e=c.addedNodes[d];if(e.nodeType===Node.ELEMENT_NODE){var f=e.getRootNode(),g=Ig(e);if(g&&f===e.ownerDocument&&("style"!==e.localName&&"template"!==e.localName||""===Kf(e)))Rf(e,g);else if(f instanceof ShadowRoot)for(f=Jg(e),f!==g&&Qf(e,g,f),e=window.ShadyDOM.nativeMethods.querySelectorAll.call(e,":not(."+S.a+")"),g=0;g<e.length;g++){f=e[g];
var h=Jg(f);h&&Pf(f,h)}}}}}
if(!(P||window.ShadyDOM&&window.ShadyDOM.handlesDynamicScoping)){var Lg=new MutationObserver(Kg),Mg=function(a){Lg.observe(a,{childList:!0,subtree:!0})};if(window.customElements&&!window.customElements.polyfillWrapFlushCallback)Mg(document);else{var Ng=function(){Mg(document.body)};window.HTMLImports?window.HTMLImports.whenReady(Ng):requestAnimationFrame(function(){if("loading"===document.readyState){var a=function(){Ng();document.removeEventListener("readystatechange",a)};document.addEventListener("readystatechange",
a)}else Ng()})}Gg=function(){Kg(Lg.takeRecords())}}var Og=Gg;var Pg={};var Qg=Promise.resolve();function Rg(a){if(a=Pg[a])a._applyShimCurrentVersion=a._applyShimCurrentVersion||0,a._applyShimValidatingVersion=a._applyShimValidatingVersion||0,a._applyShimNextVersion=(a._applyShimNextVersion||0)+1}function Sg(a){return a._applyShimCurrentVersion===a._applyShimNextVersion}function Tg(a){a._applyShimValidatingVersion=a._applyShimNextVersion;a._validating||(a._validating=!0,Qg.then(function(){a._applyShimCurrentVersion=a._applyShimNextVersion;a._validating=!1}))};var Ug={},Vg=new Fg;function V(){this.F={};this.c=document.documentElement;var a=new Re;a.rules=[];this.f=lg(this.c,new kg(a));this.u=!1;this.b=this.a=null}r=V.prototype;r.flush=function(){Og()};r.Ka=function(a){return yf(a)};r.Xa=function(a){return wf(a)};r.prepareTemplate=function(a,b,c){this.prepareTemplateDom(a,b);this.prepareTemplateStyles(a,b,c)};
r.prepareTemplateStyles=function(a,b,c){if(!a._prepared&&!lf){P||Cg[b]||(Cg[b]=Df(b));a._prepared=!0;a.name=b;a.extends=c;Pg[b]=a;var d=Kf(a),e=Lf(d);c={is:b,extends:c};for(var f=[],g=a.content.querySelectorAll("style"),h=0;h<g.length;h++){var k=g[h];if(k.hasAttribute("shady-unscoped")){if(!P){var m=k.textContent;vf.has(m)||(vf.add(m),m=k.cloneNode(!0),document.head.appendChild(m));k.parentNode.removeChild(k)}}else f.push(k.textContent),k.parentNode.removeChild(k)}f=f.join("").trim()+(Ug[b]||"");
Wg(this);if(!e){if(g=!d)g=qf.test(f)||pf.test(f),qf.lastIndex=0,pf.lastIndex=0;h=Se(f);g&&R&&this.a&&this.a.transformRules(h,b);a._styleAst=h}g=[];R||(g=pg(a._styleAst));if(!g.length||R)h=P?a.content:null,b=Cg[b]||null,d=Sf(c,a._styleAst,null,d,e?f:""),d=d.length?Af(d,c.is,h,b):null,a._style=d;a.a=g}};r.Sa=function(a,b){Ug[b]=a.join(" ")};r.prepareTemplateDom=function(a,b){if(!lf){var c=Kf(a);P||"shady"===c||a._domPrepared||(a._domPrepared=!0,Nf(a.content,b))}};
function Xg(a){var b=If(a),c=b.is;b=b.W;var d=Cg[c]||null,e=Pg[c];if(e){c=e._styleAst;var f=e.a;e=Kf(e);b=new kg(c,d,f,b,e);lg(a,b);return b}}function Yg(a){!a.b&&window.ShadyCSS&&window.ShadyCSS.CustomStyleInterface&&(a.b=window.ShadyCSS.CustomStyleInterface,a.b.transformCallback=function(b){a.wa(b)},a.b.validateCallback=function(){requestAnimationFrame(function(){(a.b.enqueued||a.u)&&a.flushCustomStyles()})})}
function Wg(a){!a.a&&window.ShadyCSS&&window.ShadyCSS.ApplyShim&&(a.a=window.ShadyCSS.ApplyShim,a.a.invalidCallback=Rg);Yg(a)}
r.flushCustomStyles=function(){if(!lf&&(Wg(this),this.b)){var a=this.b.processStyles();if(this.b.enqueued&&!Lf(this.f.cssBuild)){if(R){if(!this.f.cssBuild)for(var b=0;b<a.length;b++){var c=this.b.getStyleForCustomStyle(a[b]);if(c&&R&&this.a){var d=yf(c);Wg(this);this.a.transformRules(d);c.textContent=wf(d)}}}else{Zg(this,this.c,this.f);for(b=0;b<a.length;b++)(c=this.b.getStyleForCustomStyle(a[b]))&&Ag(c,this.f.K);this.u&&this.styleDocument()}this.b.enqueued=!1}}};
r.styleElement=function(a,b){if(lf){if(b){U(a)||lg(a,new kg(null));var c=U(a);c.G=c.G||{};Object.assign(c.G,b);$g(this,a,c)}}else if(c=U(a)||Xg(a))if(a!==this.c&&(this.u=!0),b&&(c.G=c.G||{},Object.assign(c.G,b)),R)$g(this,a,c);else if(this.flush(),Zg(this,a,c),c.na&&c.na.length){b=If(a).is;var d;a:{if(d=Vg.cache[b])for(var e=d.length-1;0<=e;e--){var f=d[e];b:{var g=c.na;for(var h=0;h<g.length;h++){var k=g[h];if(f.J[k]!==c.K[k]){g=!1;break b}}g=!0}if(g){d=f;break a}}d=void 0}g=d?d.styleElement:null;
e=c.H;(f=d&&d.H)||(f=this.F[b]=(this.F[b]||0)+1,f=b+"-"+f);c.H=f;f=c.H;h=Bg;h=g?g.textContent||"":xg(h,a,c.K,f);k=U(a);var m=k.a;m&&!P&&m!==g&&(m._useCount--,0>=m._useCount&&m.parentNode&&m.parentNode.removeChild(m));P?k.a?(k.a.textContent=h,g=k.a):h&&(g=Af(h,f,a.shadowRoot,k.b)):g?g.parentNode||(ng&&-1<h.indexOf("@media")&&(g.textContent=h),Bf(g,null,k.b)):h&&(g=Af(h,f,null,k.b));g&&(g._useCount=g._useCount||0,k.a!=g&&g._useCount++,k.a=g);f=g;P||(g=c.H,k=h=a.getAttribute("class")||"",e&&(k=h.replace(new RegExp("\\s*x-scope\\s*"+
e+"\\s*","g")," ")),k+=(k?" ":"")+"x-scope "+g,h!==k&&Gf(a,k));d||Vg.store(b,c.K,f,c.H)}};
function $g(a,b,c){var d=If(b).is;if(c.G){var e=c.G,f;for(f in e)null===f?b.style.removeProperty(f):b.style.setProperty(f,e[f])}e=Pg[d];if(!(!e&&b!==a.c||e&&""!==Kf(e))&&e&&e._style&&!Sg(e)){if(Sg(e)||e._applyShimValidatingVersion!==e._applyShimNextVersion)Wg(a),a.a&&a.a.transformRules(e._styleAst,d),e._style.textContent=Sf(b,c.L),Tg(e);P&&(a=b.shadowRoot)&&(a=a.querySelector("style"))&&(a.textContent=Sf(b,c.L));c.L=e._styleAst}}
function ah(a,b){return(b=Hf(b).getRootNode().host)?U(b)||Xg(b)?b:ah(a,b):a.c}function Zg(a,b,c){var d=ah(a,b),e=U(d),f=e.K;d===a.c||f||(Zg(a,d,e),f=e.K);a=Object.create(f||null);d=wg(b,c.L,c.cssBuild);b=ug(e.L,b).J;Object.assign(a,d.Ma,b,d.Ta);b=c.G;for(var g in b)if((e=b[g])||0===e)a[g]=e;g=Bg;b=Object.getOwnPropertyNames(a);for(e=0;e<b.length;e++)d=b[e],a[d]=sg(g,a[d],a);c.K=a}r.styleDocument=function(a){this.styleSubtree(this.c,a)};
r.styleSubtree=function(a,b){var c=Hf(a),d=c.shadowRoot;(d||a===this.c)&&this.styleElement(a,b);if(a=d&&(d.children||d.childNodes))for(c=0;c<a.length;c++)this.styleSubtree(a[c]);else if(c=c.children||c.childNodes)for(a=0;a<c.length;a++)this.styleSubtree(c[a])};
r.wa=function(a){var b=this,c=Kf(a);c!==this.f.cssBuild&&(this.f.cssBuild=c);if(!Lf(c)){var d=yf(a);xf(d,function(a){if(P)jg(a);else{var d=S;a.selector=a.parsedSelector;jg(a);a.selector=a.C=Vf(d,a,d.c,void 0,void 0)}R&&""===c&&(Wg(b),b.a&&b.a.transformRule(a))});R?a.textContent=wf(d):this.f.L.rules.push(d)}};r.getComputedStyleValue=function(a,b){var c;R||(c=(U(a)||U(ah(this,a))).K[b]);return(c=c||window.getComputedStyle(a).getPropertyValue(b))?c.trim():""};
r.Wa=function(a,b){var c=Hf(a).getRootNode();b=b?b.split(/\s/):[];c=c.host&&c.host.localName;if(!c){var d=a.getAttribute("class");if(d){d=d.split(/\s/);for(var e=0;e<d.length;e++)if(d[e]===S.a){c=d[e+1];break}}}c&&b.push(S.a,c);R||(c=U(a))&&c.H&&b.push(Bg.a,c.H);Gf(a,b.join(" "))};r.Fa=function(a){return U(a)};r.Va=function(a,b){Pf(a,b)};r.Ya=function(a,b){Pf(a,b,!0)};r.Ua=function(a){return Jg(a)};r.Ia=function(a){return Ig(a)};V.prototype.flush=V.prototype.flush;V.prototype.prepareTemplate=V.prototype.prepareTemplate;
V.prototype.styleElement=V.prototype.styleElement;V.prototype.styleDocument=V.prototype.styleDocument;V.prototype.styleSubtree=V.prototype.styleSubtree;V.prototype.getComputedStyleValue=V.prototype.getComputedStyleValue;V.prototype.setElementClass=V.prototype.Wa;V.prototype._styleInfoForNode=V.prototype.Fa;V.prototype.transformCustomStyleForDocument=V.prototype.wa;V.prototype.getStyleAst=V.prototype.Ka;V.prototype.styleAstToString=V.prototype.Xa;V.prototype.flushCustomStyles=V.prototype.flushCustomStyles;
V.prototype.scopeNode=V.prototype.Va;V.prototype.unscopeNode=V.prototype.Ya;V.prototype.scopeForNode=V.prototype.Ua;V.prototype.currentScopeForNode=V.prototype.Ia;V.prototype.prepareAdoptedCssText=V.prototype.Sa;Object.defineProperties(V.prototype,{nativeShadow:{get:function(){return P}},nativeCss:{get:function(){return R}}});var W=new V,bh,ch;window.ShadyCSS&&(bh=window.ShadyCSS.ApplyShim,ch=window.ShadyCSS.CustomStyleInterface);
window.ShadyCSS={ScopingShim:W,prepareTemplate:function(a,b,c){W.flushCustomStyles();W.prepareTemplate(a,b,c)},prepareTemplateDom:function(a,b){W.prepareTemplateDom(a,b)},prepareTemplateStyles:function(a,b,c){W.flushCustomStyles();W.prepareTemplateStyles(a,b,c)},styleSubtree:function(a,b){W.flushCustomStyles();W.styleSubtree(a,b)},styleElement:function(a){W.flushCustomStyles();W.styleElement(a)},styleDocument:function(a){W.flushCustomStyles();W.styleDocument(a)},flushCustomStyles:function(){W.flushCustomStyles()},
getComputedStyleValue:function(a,b){return W.getComputedStyleValue(a,b)},nativeCss:R,nativeShadow:P,cssBuild:of,disableRuntime:lf};bh&&(window.ShadyCSS.ApplyShim=bh);ch&&(window.ShadyCSS.CustomStyleInterface=ch);(function(a){function b(a){""==a&&(f.call(this),this.i=!0);return a.toLowerCase()}function c(a){var b=a.charCodeAt(0);return 32<b&&127>b&&-1==[34,35,60,62,63,96].indexOf(b)?a:encodeURIComponent(a)}function d(a){var b=a.charCodeAt(0);return 32<b&&127>b&&-1==[34,35,60,62,96].indexOf(b)?a:encodeURIComponent(a)}function e(a,e,g){function h(a){X.push(a)}var k=e||"scheme start",x=0,q="",u=!1,Q=!1,X=[];a:for(;(void 0!=a[x-1]||0==x)&&!this.i;){var l=a[x];switch(k){case "scheme start":if(l&&p.test(l))q+=l.toLowerCase(),
k="scheme";else if(e){h("Invalid scheme.");break a}else{q="";k="no scheme";continue}break;case "scheme":if(l&&G.test(l))q+=l.toLowerCase();else if(":"==l){this.h=q;q="";if(e)break a;void 0!==m[this.h]&&(this.B=!0);k="file"==this.h?"relative":this.B&&g&&g.h==this.h?"relative or authority":this.B?"authority first slash":"scheme data"}else if(e){void 0!=l&&h("Code point not allowed in scheme: "+l);break a}else{q="";x=0;k="no scheme";continue}break;case "scheme data":"?"==l?(this.o="?",k="query"):"#"==
l?(this.v="#",k="fragment"):void 0!=l&&"\t"!=l&&"\n"!=l&&"\r"!=l&&(this.la+=c(l));break;case "no scheme":if(g&&void 0!==m[g.h]){k="relative";continue}else h("Missing scheme."),f.call(this),this.i=!0;break;case "relative or authority":if("/"==l&&"/"==a[x+1])k="authority ignore slashes";else{h("Expected /, got: "+l);k="relative";continue}break;case "relative":this.B=!0;"file"!=this.h&&(this.h=g.h);if(void 0==l){this.j=g.j;this.m=g.m;this.l=g.l.slice();this.o=g.o;this.s=g.s;this.g=g.g;break a}else if("/"==
l||"\\"==l)"\\"==l&&h("\\ is an invalid code point."),k="relative slash";else if("?"==l)this.j=g.j,this.m=g.m,this.l=g.l.slice(),this.o="?",this.s=g.s,this.g=g.g,k="query";else if("#"==l)this.j=g.j,this.m=g.m,this.l=g.l.slice(),this.o=g.o,this.v="#",this.s=g.s,this.g=g.g,k="fragment";else{k=a[x+1];var y=a[x+2];if("file"!=this.h||!p.test(l)||":"!=k&&"|"!=k||void 0!=y&&"/"!=y&&"\\"!=y&&"?"!=y&&"#"!=y)this.j=g.j,this.m=g.m,this.s=g.s,this.g=g.g,this.l=g.l.slice(),this.l.pop();k="relative path";continue}break;
case "relative slash":if("/"==l||"\\"==l)"\\"==l&&h("\\ is an invalid code point."),k="file"==this.h?"file host":"authority ignore slashes";else{"file"!=this.h&&(this.j=g.j,this.m=g.m,this.s=g.s,this.g=g.g);k="relative path";continue}break;case "authority first slash":if("/"==l)k="authority second slash";else{h("Expected '/', got: "+l);k="authority ignore slashes";continue}break;case "authority second slash":k="authority ignore slashes";if("/"!=l){h("Expected '/', got: "+l);continue}break;case "authority ignore slashes":if("/"!=
l&&"\\"!=l){k="authority";continue}else h("Expected authority, got: "+l);break;case "authority":if("@"==l){u&&(h("@ already seen."),q+="%40");u=!0;for(l=0;l<q.length;l++)y=q[l],"\t"==y||"\n"==y||"\r"==y?h("Invalid whitespace in authority."):":"==y&&null===this.g?this.g="":(y=c(y),null!==this.g?this.g+=y:this.s+=y);q=""}else if(void 0==l||"/"==l||"\\"==l||"?"==l||"#"==l){x-=q.length;q="";k="host";continue}else q+=l;break;case "file host":if(void 0==l||"/"==l||"\\"==l||"?"==l||"#"==l){2!=q.length||
!p.test(q[0])||":"!=q[1]&&"|"!=q[1]?(0!=q.length&&(this.j=b.call(this,q),q=""),k="relative path start"):k="relative path";continue}else"\t"==l||"\n"==l||"\r"==l?h("Invalid whitespace in file host."):q+=l;break;case "host":case "hostname":if(":"!=l||Q)if(void 0==l||"/"==l||"\\"==l||"?"==l||"#"==l){this.j=b.call(this,q);q="";k="relative path start";if(e)break a;continue}else"\t"!=l&&"\n"!=l&&"\r"!=l?("["==l?Q=!0:"]"==l&&(Q=!1),q+=l):h("Invalid code point in host/hostname: "+l);else if(this.j=b.call(this,
q),q="",k="port","hostname"==e)break a;break;case "port":if(/[0-9]/.test(l))q+=l;else if(void 0==l||"/"==l||"\\"==l||"?"==l||"#"==l||e){""!=q&&(q=parseInt(q,10),q!=m[this.h]&&(this.m=q+""),q="");if(e)break a;k="relative path start";continue}else"\t"==l||"\n"==l||"\r"==l?h("Invalid code point in port: "+l):(f.call(this),this.i=!0);break;case "relative path start":"\\"==l&&h("'\\' not allowed in path.");k="relative path";if("/"!=l&&"\\"!=l)continue;break;case "relative path":if(void 0!=l&&"/"!=l&&"\\"!=
l&&(e||"?"!=l&&"#"!=l))"\t"!=l&&"\n"!=l&&"\r"!=l&&(q+=c(l));else{"\\"==l&&h("\\ not allowed in relative path.");if(y=n[q.toLowerCase()])q=y;".."==q?(this.l.pop(),"/"!=l&&"\\"!=l&&this.l.push("")):"."==q&&"/"!=l&&"\\"!=l?this.l.push(""):"."!=q&&("file"==this.h&&0==this.l.length&&2==q.length&&p.test(q[0])&&"|"==q[1]&&(q=q[0]+":"),this.l.push(q));q="";"?"==l?(this.o="?",k="query"):"#"==l&&(this.v="#",k="fragment")}break;case "query":e||"#"!=l?void 0!=l&&"\t"!=l&&"\n"!=l&&"\r"!=l&&(this.o+=d(l)):(this.v=
"#",k="fragment");break;case "fragment":void 0!=l&&"\t"!=l&&"\n"!=l&&"\r"!=l&&(this.v+=l)}x++}}function f(){this.s=this.la=this.h="";this.g=null;this.m=this.j="";this.l=[];this.v=this.o="";this.B=this.i=!1}function g(a,b){void 0===b||b instanceof g||(b=new g(String(b)));this.a=a;f.call(this);a=this.a.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g,"");e.call(this,a,null,b)}var h=!1;try{var k=new URL("b","http://a");k.pathname="c%20d";h="http://a/c%20d"===k.href}catch(x){}if(!h){var m=Object.create(null);m.ftp=
21;m.file=0;m.gopher=70;m.http=80;m.https=443;m.ws=80;m.wss=443;var n=Object.create(null);n["%2e"]=".";n[".%2e"]="..";n["%2e."]="..";n["%2e%2e"]="..";var p=/[a-zA-Z]/,G=/[a-zA-Z0-9\+\-\.]/;g.prototype={toString:function(){return this.href},get href(){if(this.i)return this.a;var a="";if(""!=this.s||null!=this.g)a=this.s+(null!=this.g?":"+this.g:"")+"@";return this.protocol+(this.B?"//"+a+this.host:"")+this.pathname+this.o+this.v},set href(a){f.call(this);e.call(this,a)},get protocol(){return this.h+
":"},set protocol(a){this.i||e.call(this,a+":","scheme start")},get host(){return this.i?"":this.m?this.j+":"+this.m:this.j},set host(a){!this.i&&this.B&&e.call(this,a,"host")},get hostname(){return this.j},set hostname(a){!this.i&&this.B&&e.call(this,a,"hostname")},get port(){return this.m},set port(a){!this.i&&this.B&&e.call(this,a,"port")},get pathname(){return this.i?"":this.B?"/"+this.l.join("/"):this.la},set pathname(a){!this.i&&this.B&&(this.l=[],e.call(this,a,"relative path start"))},get search(){return this.i||
!this.o||"?"==this.o?"":this.o},set search(a){!this.i&&this.B&&(this.o="?","?"==a[0]&&(a=a.slice(1)),e.call(this,a,"query"))},get hash(){return this.i||!this.v||"#"==this.v?"":this.v},set hash(a){this.i||(a?(this.v="#","#"==a[0]&&(a=a.slice(1)),e.call(this,a,"fragment")):this.v="")},get origin(){var a;if(this.i||!this.h)return"";switch(this.h){case "data":case "file":case "javascript":case "mailto":return"null"}return(a=this.host)?this.h+"://"+a:""}};var u=a.URL;u&&(g.createObjectURL=function(a){return u.createObjectURL.apply(u,
arguments)},g.revokeObjectURL=function(a){u.revokeObjectURL(a)});a.URL=g}})(window);Object.getOwnPropertyDescriptor(Node.prototype,"baseURI")||Object.defineProperty(Node.prototype,"baseURI",{get:function(){var a=(this.ownerDocument||this).querySelector("base[href]");return a&&a.href||window.location.href},configurable:!0,enumerable:!0});var dh=document.createElement("style");dh.textContent="body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";var eh=document.querySelector("head");eh.insertBefore(dh,eh.firstChild);var fh=window.customElements,gh=!1,hh=null;fh.polyfillWrapFlushCallback&&fh.polyfillWrapFlushCallback(function(a){hh=a;gh&&a()});function ih(){window.HTMLTemplateElement.bootstrap&&window.HTMLTemplateElement.bootstrap(window.document);hh&&hh();gh=!0;window.WebComponents.ready=!0;document.dispatchEvent(new CustomEvent("WebComponentsReady",{bubbles:!0}))}
"complete"!==document.readyState?(window.addEventListener("load",ih),window.addEventListener("DOMContentLoaded",function(){window.removeEventListener("load",ih);ih()})):ih();}).call(this);

//# sourceMappingURL=webcomponents-bundle.js.map

/**
 * @description CES Connect Controller serves as the wrapper class to the CES Chat Service.
 * Binds event handlers for socket events passed by Backend CES.
 */

class cesConnectController {
  participantDetails = {};
  chat = {};
  socket = {};
  isAgentJoined = false;
  isCustomerJoined = false;
  isEscalationCancelled = false;
  isQueueMessageReceived = false;
  constructor(
    cesParticipantDetails,
    socket
  ) {
    this.participantDetails = cesParticipantDetails;
    this.socket = socket;
    this.initializeCES();
    this.handleConnectChat();
  }

  /**
   * @description Initializes CES Chat Service and uses the details sent to constructor.
   */
  initializeCES() {
    if (/amazonConnect/.test(this.participantDetails.provider)) {
      this.participantDetails.provider = 'AMAZON';
    }

    this.chat = new window.ChatServiceHandler.ChatService({
      provider: this.participantDetails.provider,
      participantData: this.participantDetails.participantData,
      region: this.participantDetails.participantData.Region,
      messages: this.participantDetails.messages,
      warningTimeout: 600,
      chatTimeout: 600,
      onChatEnded: function (data) {
        if (this.isRefreshed()) {
          this.disconnectionCESEvent();
        } else if (!this.isEscalationCancelled) {
          this.displayCESMessage('bot', this.chat.settings.messages.onChatEnded,
            '', '', '', 'onChatEnded');
          this.disconnectionCESEvent();
        }
      }.bind(this),
      onChatClosed: function (data) {
        if (this.isEscalationCancelled) {//displays the cancel message of the button
          this.displayCESMessage('bot', this.chat.settings.messages.onEscalationCancelled, '', '', '', 'onEscalationCancelled');
          this.disconnectionCESEvent();
        }
      }.bind(this),
      onParticipantJoined: function (data) {
        if (data.ParticipantRole === 'CUSTOMER') {
          this.isCustomerJoined = true;
        } else {
          this.isAgentJoined = true;
          this.isQueueMessageReceived = false;
        }
        this.displayCESMessage('agent', this.chat.settings.messages.onParticipantJoined,
          data.DisplayName, data.ParticipantRole, '', 'onParticipantJoined');
      }.bind(this),
      onParticipantLeft: function (data) {
        this.displayCESMessage('agent', this.chat.settings.messages.onParticipantLeft,
          data.DisplayName, data.ParticipantRole, '', 'onParticipantLeft');
      }.bind(this),
      onAboutToTimeout: function (data) {
        this.displayCESMessage('bot', this.chat.settings.messages.onAboutToTimeout,
          '', '', '', 'onAboutToTimeout');
      }.bind(this),
      onTimedOut: function (data) {
        this.displayCESMessage('bot', this.chat.settings.messages.onTimedOut,
          '', '', '', 'onTimedOut');
      }.bind(this),
      onEventTyping: function (data) {
        this.displayCESMessage('agent', 'AGENT_TYPING_EVENT',
          data.DisplayName, '', '', 'onEventTyping');
      }.bind(this),
      onTransferSucceeded: function (data) {
        this.displayCESMessage('bot', this.chat.settings.messages.onTransferSucceeded,
          data.DisplayName, data.ParticipantRole, '', 'onTransferSucceeded');
      }.bind(this),
      onTransferFailed: function (data) {
        this.displayCESMessage('bot', this.chat.settings.messages.onTransferFailed,
          data.DisplayName, data.ParticipantRole, '', 'onTransferFailed');
      }.bind(this),
      onMessageReceived: function (data) {
        if (this.isEscalationCancelled || this.isRefreshed()) {
          // Do nothing
        } else if (data && data.Event) {
          //check if displayname or participantRole
          this.checkEventType(data);
        } else {
          if (this.isQueueMessageReceived) {
            this.isQueueMessageReceived = false;
          }
          this.displayCESMessage(data.ParticipantRole,
            this.chat.settings.messages.onMessageReceived,
            data.DisplayName, data.ParticipantRole, data.Content, 'onMessageReceived');
        }
      }.bind(this),
      onUnknownMessage: function (data) {
        this.displayCESMessage('bot', this.chat.settings.messages.onUnknownMessage,
          data.DisplayName, data.ParticipantRole, data.ContentType, 'onUnknownMessage');
      }.bind(this)
    });
  }

  /**
   * This method is responsible for handling CES ConnectChat Method
   */
  handleConnectChat() {
    try {
      this.chat.connectChat();
    } catch (error) {
      throw error;
    }
  }

  /**
   * This method is responsible for handling CES EndChat Method
   */
  handleEndChat(isCancelled) {
    try {
      this.isEscalationCancelled = isCancelled;
      setTimeout(() => {
        this.chat.endChat();
        this.chat.stopTimers();
      }, 1000);
    } catch (error) {
      throw error;
    }
  }

  /**
   * This method will call displayCeRelatedMessages to emit EscalationLog
   */
  displayCESMessage(from, message, agentName = '', role = '', content = '', eventName = ''
  ,isQueueMessageReceived = false) {
    this.isQueueMessageReceived = isQueueMessageReceived;
    this.socket.displayCeRelatedMessages(from, message, agentName, role, content, eventName);
  }

  /**
   * This method will call disconnectionEvent to emit EscalationEnd
   */
  disconnectionCESEvent() {
    this.isQueueMessageReceived = false;
    this.socket.disconnectionEvent();
  }

  /**
   * This method will call checkIsRefreshed
   */
  isRefreshed() {
    this.socket.checkIsRefreshed();
  }

  /**
  * This function is responsible handling the CES sendMessage Method
  */
  sendMessage(msg) {
    try {
      if (msg === 'USER_TYPING_EVENT') {
        //show user typing in agent workspace
        this.chat.showTyping();
      } else {
        this.socket.displayCeRelatedMessages(
          'user', msg, '', '', '', ''
        );

        this.chat.sendMessage(msg);
      }
    } catch (error) {
      throw error;
    }
  }

  /**
   * This method is responsible for handling CES Event Types
   */
  checkEventType(data) {
    let message;
    let eventType;
    let from = data.ParticipantRole;

    try {
      eventType = data.Event;
      message = data.Content;

      switch (eventType) {
        case eventType === 'AgentsOffline':
          this.handleAgentOffline();
          break;
        case eventType === 'IsHolidayTrue':
          this.handleHolidayMatch();
          break;
        case eventType === 'HolidayCheckError':
          this.handleHolidayCheckError();
          break;
        case eventType === 'HourErrorMessage':
          this.handleOfficeHoursError();
          break;
        case eventType === 'OutHoursMessage':
          this.handleOutOfOffice();
          break;
        default:
          break;
      }

      if (/QueueAdditionAlert|NextPositionAlert|OneBehindPositionAlert|PositionAlert/.test(eventType)) {
        console.log('TRUE')
        this.displayCESMessage(
          from,
          this.chat.settings.messages.onMessageReceived,
          data.DisplayName,
          data.ParticipantRole,
          message,
          'onMessageReceived',
          true
        );
      } else if (eventType !== 'ConversationHistory') {
        this.displayCESMessage(
          from,
          this.chat.settings.messages.onMessageReceived,
          data.DisplayName,
          data.ParticipantRole,
          message,
          'onMessageReceived'
        );
      }
    } catch (error) {
      throw error;
    }
  }
  
  
  /**
   * This method is responsible for handling AgentOffline Event
   */
  handleAgentOffline() {
    try {
      //specific conditions for handling agent offline event
    } catch (error) {
      throw error;
    }
  }

  /**
   * This method is responsible for handling HolidayMatch Event
   */
  handleHolidayMatch() {
    try {
      //specific conditions for handling holiday match event
    } catch (error) {
      throw error;
    }
  }

  /**
   * This method is responsible for handling HolidayMatch Check Error Event
   */
  handleHolidayCheckError() {
    try {
      //specific conditions for handling holiday Check Error event
    } catch (error) {
      throw error;
    }
  }

  /**
   * This method is responsible for handling OfficeHoursError Event
   */
  handleOfficeHoursError() {
    try {
      //specific conditions for handling OfficeHoursError event
    } catch (error) {
      throw error;
    }
  }
  /**
   * This method is responsible for handling OutOfOffice Event
   */
  handleOutOfOffice() {
    try {
      //specific conditions for handling OutOfOffice event
    } catch (error) {
      throw error;
    }
  }
}

/**
 * @description Handles generating and interacting with the chat window
 */
class ChatController {
  cesControllerInstance;
  ismaximizeChat = false;
  isCancelledRequest = true;
  isQueueInitialized = false;
  queueID = 0;
  defaultLanguage;
  browserLocale = 'en-US';
  browserLanguage;
  translations = {};
  constructor() {
    this.activeForm = {};
    this.dateCounter = 1;
    this.datePicker = null;
    this.dateClass = "";
    this.linkToOpen = null;
    this.agentTypingIndicator = '';
    this.unreadMessages = 0;
  }

  /**
   * @description - Scrolls to the bottom of the chat window
   */
  scrollToBottom() {
    const lastMessage = this.shadowRootDoc.querySelector(
      '#chat-messages'
    ).lastChild;
    if (lastMessage) {
      const isSafari =
        navigator.vendor &&
        navigator.vendor.indexOf('Apple') > -1 &&
        navigator.userAgent &&
        navigator.userAgent.indexOf('CriOS') == -1 &&
        navigator.userAgent.indexOf('FxiOS') == -1;

      if (isSafari) {
        lastMessage.parentNode.scrollTop = lastMessage.offsetTop - 50;
      } else {
        lastMessage.scrollIntoView({ behavior: 'smooth' });
      }
      lastMessage.scrollIntoView({ behavior: 'smooth' });
    }
  }

  /**
   * @description toggles the typing indicator to appear
   */
  showTypingIndicator() {
    const chatMessageWindow = this.shadowRootDoc.querySelector(
      '#chat-messages'
    );
    chatMessageWindow.appendChild(this.typingIndicator);
    this.scrollToBottom();
  }

  /**
   * @description hides the typing indicator
   */
  hideTypingIndicator() {
    const typingIndicator = this.shadowRootDoc.querySelector(
      '#typing-indicator'
    );
    if (typingIndicator) {
      const chatMessageWindow = this.shadowRootDoc.querySelector(
        '#chat-messages'
      );
      chatMessageWindow.removeChild(typingIndicator);
    }
  }

  /**
   * @description hides the agent typing indicator
   */
  hideAgentTypingIndicator() {
    const agentTypingIndicator = document.querySelector(
      '#agent-typing-indicator'
    );
    if (agentTypingIndicator) {
      const chatMessageWindow = document.querySelector(
        '#chat-messages'
      );
      chatMessageWindow.removeChild(agentTypingIndicator);
    }
  }

  /**
   * @description formatting date according to tale.dateTime package
   * @param {Object} date - Date() value
   */

  formatDate(date, range) {
    date = date.split('-');
    if (range) {
      date = date[1] + ' ' + date[0] + ', ' + date[2] + ' 00:00:00';
      return date;
    }
    else {
      const chart = { 'Jan': 0, 'Feb': 1, 'Mar': 2, 'Apr': 3, 'May': 4, 'June': 5, 'July': 6, 'Aug': 7, 'Sep': 8, 'Oct': 9, 'Nov': 10, 'Dec': 11 };
      date = [chart[date[1]], parseInt(date[2])]
      return date;
    }
  }

  /**
   * @description Set date picker options
   * @param {Object} data - response config datepicker data
   */

  setDateOptions(data) {
    let dateOptions = {}
    let options = {
      startOpen: true,
      stayOpen: true,
      timeFormat: false,
      dateBlacklist: false,
      closeButton: false,
      dateFormat: 'dd/mm/YYYY',
      classNames: 'tail-date-container'
    };

    var range = {};
    var pastDate = new Date();
    pastDate.setDate(pastDate.getDate() - 1);
    var futureDate = new Date();
    futureDate.setDate(futureDate.getDate() + 1);
    // apply response settings to the datepicker

    if (data.allowFutureDates && !data.allowPastDates) {
      range.start = futureDate;
      range.end = new Date(8640000000000000);
      dateOptions.dateType = 'future'
    }
    else if (data.allowPastDates && !data.allowFutureDates) {
      range.start = new Date('1000,1,1');
      range.end = pastDate;
      dateOptions.dateType = 'past'
    }
    else if (data.minDate && data.maxDate) {
      range.start = new Date(this.formatDate(data.minDate,true));
      range.end = new Date(this.formatDate(data.maxDate,true));
      dateOptions.dateType = 'range';
      dateOptions.maxDate = data.maxDate;

    }
    else {
      range.start = new Date('1000,1,1');
      range.end = new Date(8640000000000000);
    }

    var dateRange = [range];
    options.dateRanges = dateRange;
    dateOptions.options = options;
    return dateOptions;
  }

  /**
   * @description Creates an HTML element
   * @param {Object} type - HTML element type, defaults to div
   * @param {Object} params - HTML element parameters
   */
  createElement(type, params) {
    const elem = document.createElement(type || 'div');
    if (params) {
      if (params.className) elem.className = params.className;
      if (params.id) elem.id = params.id;
      if (params.innerText) elem.innerText = params.innerText;
      if (params.innerHTML) elem.innerHTML = params.innerHTML;
      if (params.onclick && typeof params.onclick === 'string')
        elem.setAttribute('onclick', params.onclick);
      else if (params.onclick) elem.onclick = params.onclick;
      if (params.onsubmit && typeof params.onsubmit === 'string')
        elem.setAttribute('onsubmit', params.onsubmit);
      else if (params.onsubmit) elem.onsubmit = params.onsubmit;
      if (params.oninput && typeof params.oninput === 'string')
        elem.setAttribute('oninput', params.oninput);
      else if (params.oninput) elem.oninput = params.oninput;
      if (params.rel) elem.setAttribute('rel', params.rel);
      if (params.href) elem.setAttribute('href', params.href);
      if (params.src) elem.setAttribute('src', params.src);
      if (params.type) elem.setAttribute('type', params.type);
      if (params.autocomplete)
        elem.setAttribute('autocomplete', params.autocomplete);
      if (params['data-value'])
        elem.setAttribute('data-value', params['data-value']);
      if (params['data-link'])
        elem.setAttribute('data-link', params['data-link']);
      if (params.onchange) elem.onchange = params.onchange;
    }
    return elem;
  }

  /**
   * @description Create message elements
   * @param {HTMLElement} messageContainer - container to add new elements to
   * @param {Array<String>} messages - array of messages to add
   * @param {Object} content - response content
   */
  addMessages(messageContainer, messages, content) {
    if (this.cesControllerInstance && !this.cesControllerInstance.isQueueMessageReceived) {
      this.isQueueInitialized = false;
      this.queueID++;
    }

    for (let i = 0; i < messages.length; i++) {
      let messageElem;

      if (this.cesControllerInstance && this.cesControllerInstance.isQueueMessageReceived && !this.isQueueInitialized) {
        // display queue messages
        messageElem = this.createElement('div', {
          id: 'queueMessage' + this.queueID,
          className: 'message',
          innerHTML: messages[i]
        });

        messageContainer.appendChild(messageElem);
        this.isQueueInitialized = true;
        chatController.addTimeStamp(messageElem);
        messageContainer.setAttribute('data-ssml', content.responseSsml);
      } else if (this.isQueueInitialized) {
        const element = document.querySelector("#queueMessage" + this.queueID);
        element.textContent = messages[i];
        chatController.addTimeStamp(element);
        
        const elementRemove = document.getElementById('chat-message-wrapper-queue');
        if (elementRemove) elementRemove.remove();

        let items = document.getElementsByClassName('chat-message-botname');
        const count = items.length - 1;
        if (elementRemove || elementRemove === null) {
          items[count].remove();
        }
      } else {
        this.isQueueInitialized = false;
        let agentName;
        //adding new div element for agent messages (excluding DEI theme)
        if (
          content &&
          content.agentName &&
          content.agentName !== 'Live Agent' &&
          !(localStorage.getItem("theme") === 'dei')
        ) {
          agentName = content.agentName;
          let agentIconElem = this.createElement('div', {
            className: 'agent-icon',
          });

          messageContainer.appendChild(agentIconElem);
          messageElem = this.createElement('div', {
            className: 'message',
            innerHTML: content.response[i]
          });
        } else if (
          messages[i].includes('AGENT') &&
          !(localStorage.getItem("theme") === 'dei')
        ) {
          agentName = messages[i].split(' (AGENT): ')[0];
          let agentIconElem = this.createElement('div', {
            className: 'agent-icon',
          });

          messageContainer.appendChild(agentIconElem);

          messageElem = this.createElement('div', {
            className: 'message',
            innerHTML: messages[i].split(' (AGENT): ')[1]
          });
        } else {
          messageElem = this.createElement('div', {
            className: 'message',
            innerHTML: messages[i]
          });
        }

        messageContainer.appendChild(messageElem);
        chatController.addTimeStamp(messageElem);
        messageContainer.setAttribute('data-ssml', content.responseSsml);
      }
    }
  }

  /**
   * @description Increments the unreadMessages count by 1 and updates the badge.
   */
  incrementUnreadMessages() {
    this.unreadMessages += 1;
    this.updateBadge();
  }

  /**
   * @description Resets the unreadMessages count to 0 and updates the badge.
   */
  resetUnreadMessages() {
    this.unreadMessages = 0;
    this.updateBadge();
  }

  /**
   * @description Updates the unread message badge's display and text content based 
   * on the unreadMessages count.
   */
  updateBadge() {
    const badge = document.getElementById('unread-message');
    badge.textContent = this.unreadMessages;
    badge.classList.toggle('unread-message-hide', this.unreadMessages === 0);
  }
  /**
   * @description Create button elements
   * @param {HTMLElement} messageContainer - container to add new elements to
   * @param {Array<String>} buttons - array of buttons to add
   */
  addButtons(messageContainer, buttons) {
    const buttonContainer = this.createElement('div', {
      className: 'button-container'
    });
    for (let b = 0; b < buttons.length; b++) {
      if (
        buttons[b]['name'] &&
        (!buttons[b]['value'] || buttons[b]['value'] === '')
      ) {
        buttons[b]['value'] = buttons[b]['name'];
      }

      // if buttons contain a link, create element for open link button
      if (buttons[b] && buttons[b]['link']) {
        const buttonElem = this.createElement('button', {
          className: 'convButton',
          innerText: buttons[b].name,
          'data-link': buttons[b].link,
          id: buttons[b].uniqueKey
        });
        const openLinkElem = this.createElement('div', {
          className: 'openLinkButton'
        });
  
        buttonElem.appendChild(openLinkElem);
        buttonContainer.appendChild(buttonElem);
      } else {
        let buttonValue = buttons[b].name;
        if(buttons[b].value && (buttons[b].value !== buttons[b].name)) {
          buttonValue = buttons[b].value;
        }
        const buttonElem = this.createElement('button', {
          className: 'convButton',
          innerText: buttons[b].name,
          'data-value': buttonValue
        });
  
        buttonContainer.appendChild(buttonElem);
      }
    }

    messageContainer.appendChild(buttonContainer);

    // added timestamp
    chatController.addTimeStamp(buttonContainer);
  }

  /**
   * @description Create carousel elements
   * @param {HTMLElement} messageContainer - container to add new elements to
   * @param {Array<String>} carousel - array of carousel items to add
   * @param {boolean} displayUnselectedOptions - whether carousel slides should be displayed also after selection
   * @param {boolean} hideButtons - is true if carousel response is not the last message in a chat flow
   */
  addCarousel(
    messageContainer,
    carousel,
    displayUnselectedOptions,
    hideButtons
  ) {
    // do not create already used carousel slides if they shouldn't been displayed
    if (hideButtons && !displayUnselectedOptions) return;

    const carouselContainer = this.createElement('div', {
      className: 'carousel-container'
    });
    const scrollContainer = this.createElement('div', {
      className: 'scroll-container'
    });
    for (let x = 0; x < carousel.length; x++) {
      const carouselElem = this.createElement('div', {
        className:
          'carousel-option' + (hideButtons ? ' disabled' : ''),
        onclick: () => {
          // don't bind onclick event to already used slides
          if (hideButtons) return null;
          // if unselected slides should be visible, then delete onclick logic when any slide is clicked and change cursor to the default one
          if (displayUnselectedOptions) {
            carouselContainer
              .querySelectorAll('.carousel-option')
              .forEach((item) => {
                item.onclick = null;
                item.classList.add('disabled');
              });
            this.sendQuickReply(null, carousel[x].title);
          } else {
            if (carousel[x].value && carousel[x].title !== carousel[x].value) {
              this.sendQuickReply(carouselContainer, carousel[x].title, carousel[x].value);
            } else {
              this.sendQuickReply(carouselContainer, carousel[x].title);
            }
          }
        }
      });
      const carouselImg = this.createElement('img', {
        src: carousel[x].url
      });
      const carouselTextDiv = this.createElement('div', {
        className: 'carouselTitleDiv'
      });
      const carouselText = this.createElement('span', {
        innerText: carousel[x].title,
        className: 'carouselTitle'
      });
      const carouselSubTitleDiv = this.createElement('div', {
        className: 'carouselSubTitleDiv'
      });
      const carouselSubTitle = this.createElement('span', {
        innerText: carousel[x].subTitle,
        className: 'carouselSubTitle'
      })
      const carouselImageContainer = this.createElement('div', {
        className: 'carousel-image-container'
      });
      carouselImageContainer.appendChild(carouselImg);
      carouselElem.appendChild(carouselImageContainer);
      carouselElem.appendChild(carouselTextDiv);
      carouselTextDiv.appendChild(carouselText);
      carouselElem.appendChild(carouselSubTitleDiv);
      carouselSubTitleDiv.appendChild(carouselSubTitle);
      carouselContainer.appendChild(carouselElem);
    }
    scrollContainer.appendChild(carouselContainer);
    messageContainer.appendChild(scrollContainer);

    // added timestamp
    chatController.addTimeStamp(scrollContainer);
  }

  /**
   * @description Create button elements
   * @param {HTMLElement} messageContainer - container to add new elements to
   * @param {Array<String>} feedbackTiles - array of feedback tiles to add
   */
  addFeedbackTiles(messageContainer, feedbackTiles) {
    const tileContainer = this.createElement('div', {
      className: 'feedback-button-container'
    });
    for (let t = 0; t < feedbackTiles.length; t++) {
      const tileElem = this.createElement('button', {
        className: 'convButton',
        innerHTML:
          '<img style="float:left; width:auto" src="' +
          feedbackTiles[t].image +
          '"/><span style="vertical-align: -webkit-baseline-middle;">' +
          feedbackTiles[t].name +
          '</span>',
          'data-value': feedbackTiles[t].name
      });

      tileContainer.appendChild(tileElem);
    }

    messageContainer.appendChild(tileContainer);

    // added timestamp
    chatController.addTimeStamp(tileContainer);
  }

  /**
   * @description Create datepicker element
   * @param {HTMLElement} messageContainer - container to add new elements to
   * @param {Object} data - data of datepicker to add
   */
  addDatepicker(messageContainer, data) {
    chatController.dateClass = 'datepicker-' + chatController.dateCounter;
    // create necessary HTML elements
    const datepickerContainer = this.createElement('div', {
      className: chatController.dateClass
    });
    const datepickerElemContainer = this.createElement('div', {
      className: 'datepicker-element-container'
    });
    datepickerContainer.appendChild(datepickerElemContainer);
    // add the HTML elements to the message container
    messageContainer.appendChild(datepickerContainer);
    const dateOptions = this.setDateOptions(data);
    var monthRange = null;
    if (dateOptions.dateType === 'range') {
     monthRange = this.formatDate(dateOptions.maxDate, false);
    }
    setTimeout(function () {
      chatController.datePicker = new tail.DateTime('.' + chatController.dateClass, dateOptions.options);
      if (dateOptions.dateType === 'range') {
        chatController.datePicker.switchMonth(monthRange[0], monthRange[1])
      }
      if (chatController.datePicker.length > 1) {
        chatController.datePicker.forEach(() => {
          chatController.dateCounter += 1;
        });
      } else {
        chatController.datePicker.on('change', function () {
          var data = document.getElementsByClassName(chatController.dateClass)[0]
            .value;
          // chatController.datePicker.close();
          document.getElementById('user-input').value = data;
          document.getElementById('user-input').focus();
        });
        datepickerElemContainer.appendChild(
          document.getElementById(
            'tail-datetime-' + chatController.dateCounter
          )
        );
        chatController.scrollToBottom();
        chatController.dateCounter += 1;
      }
    }, 0);

    // added timestamp
    chatController.addTimeStamp(datepickerContainer);
  }

  /**
   * @description Updates form value
   * @param  fieldName - field name
   * @param  value - new value
   * @param  elem - field element
   */
  updateFormValue(fieldName, value, elem = '') {
    this.activeForm[fieldName] = value;
    if (elem) {
      elem.classList.remove('error');
      const errorField = elem.querySelector('#field-error');
      if (errorField) errorField.classList.remove('show');
    }
  }

  /**
   * @description Create form element
   * @param {HTMLElement} messageContainer - container to add new element to
   * @param {Array<String>} carousel - array of carousel items to add
   */
  addForm(messageContainer, form, buttons) {
    this.activeForm = {};
    const formContainer = this.createElement('div', {
      className: 'form-container'
    });

    // add form id in form container
    if(form && form.id) {
      const formId = this.createElement('p', {
        className: 'field-label',
        innerText: form.id
      });
      formContainer.appendChild(formId);
    }

    for (let x = 0; x < form.data.length; x++) {
      const fieldData = form.data[x];
      const fieldContainer = this.createElement('div', {
        className: 'field-container ' + fieldData.type,
        'data-value': fieldData.title
      });
      if (fieldData.type !== 'checkbox') {
        const fieldLabel = this.createElement('div', {
          className: 'field-label',
          innerText: fieldData.title + (fieldData.required ? '*' : '')
        });
        fieldContainer.appendChild(fieldLabel);
      }

      if (fieldData.type === 'text') {
        const fieldInput = this.createElement('input', {
          className: 'field-input text',
          type: 'text',
          'data-value': fieldData.title
        });
        fieldContainer.appendChild(fieldInput);
      }

      if (fieldData.type === 'textarea') {
        const fieldInput = this.createElement('textarea', {
          className: 'field-input textarea',
          'data-value': fieldData.title
        });
        fieldContainer.appendChild(fieldInput);
      }

      if (fieldData.type === 'password') {
        const fieldInput = this.createElement('input', {
          className: 'field-input password',
          type: 'password',
          autocomplete: 'new-password',
          'data-value': fieldData.title
        });
        fieldContainer.appendChild(fieldInput);
      }

      if (
        fieldData.type === 'text' ||
        fieldData.type === 'textarea' ||
        fieldData.type === 'password'
      ) {
        const fieldError = this.createElement('div', {
          id: 'field-error',
          innerText: fieldData.errorMessage
        });
        fieldContainer.appendChild(fieldError);
      }

      if (fieldData.type === 'dropdown' && fieldData.dropdownValues) {
        const dropdown = this.createElement('div', {
          className: 'dropdown-input placeholder',
          onclick: (e) => {
            if (
              e.target.classList.contains('dropdown-input') ||
              e.target.classList.contains('dropdown-label')
            ) {
              const dropdownElem = e.target.classList.contains(
                'dropdown-input'
              )
                ? e.target
                : e.target.parentNode;
              dropdownElem
                .querySelector('.dropdown-values-container')
                .classList.toggle('hidden');
            }
          }
        });
        const dropdownLabel = this.createElement('span', {
          className: 'dropdown-label',
          innerText: 'Select option'
        });
        dropdown.appendChild(dropdownLabel);

        const dropdownContainer = this.createElement('div', {
          className: 'dropdown-values-container hidden'
        });

        for (let i = 0; i < fieldData.dropdownValues.length; i++) {
          const option = this.createElement('div', {
            className: 'dropdown-value',
            'data-value':
              fieldData.dynamicValues ? fieldData.dropdownValues[i][fieldData.variableValue] :
              fieldData.dropdownValues[i].value,
            innerText:
              fieldData.dynamicValues ? fieldData.dropdownValues[i][fieldData.variableName] :
              fieldData.dropdownValues[i].value,
            onclick: (e) => {
              e.target.parentNode.parentNode.querySelector(
                'span'
              ).innerText = e.target.innerText;
              e.target.parentNode.parentNode.classList.remove(
                'placeholder'
              );
              e.target.parentNode.classList.add('hidden');
              chatController.updateFormValue(
                fieldData.title,
                e.target.dataset.value,
                e.target.parentNode.parentNode.parentNode
              );
            }
          });
          dropdownContainer.appendChild(option);
        }
        dropdown.appendChild(dropdownContainer);
        fieldContainer.appendChild(dropdown);
      }

      if (fieldData.type === 'radioButtons') {
        const buttonsContainer = this.createElement('div', {
          className: 'form-buttons-container'
        });

        for (let i = 0; i < fieldData.radioValues.length; i++) {
          const button = this.createElement('div', {
            className: 'form-button',
            innerText: fieldData.radioValues[i].value,
            'data-value': fieldData.radioValues[i].value,
            onclick: (e) => {
              if (fieldData.allowMultiple) {
                e.target.classList.toggle('active');
              } else {
                e.target.classList.toggle('active');

                e.target.parentNode
                  .querySelectorAll('.form-button')
                  .forEach((item) => {
                    if(e.target.classList !== item.classList) {
                      item.classList.remove('active');

                    }
                  });
              }
              const values = [];
              e.target.parentNode
                .querySelectorAll('.active')
                .forEach((item) => values.push(item.dataset.value));

              chatController.updateFormValue(
                fieldData.title,
                values,
                e.target.parentNode.parentNode
              );
            }
          });
          buttonsContainer.appendChild(button);
        }
        fieldContainer.appendChild(buttonsContainer);
      }

      if (fieldData.type === 'checkbox') {
        let flag = false;
        const checkboxContainer = this.createElement('div', {
          className: 'checkbox-container'
        });

        const checkbox = this.createElement('input', {
          type: 'checkbox',
          onchange: (e) => {
            let value = e.target.checked;
            if (value) {
              e.target.parentNode.classList.add('checked');
              flag = true;
            } else {
              e.target.parentNode.classList.remove('checked');
              flag = false;
              value = 'false';
            }
            chatController.updateFormValue(
              fieldData.title,
              value,
              e.target.parentNode.parentNode.parentNode
            );
          }
        });
        if (!flag) {
          chatController.updateFormValue(
            fieldData.title,
            'false'
          );
        }
        const label = this.createElement('label');
        label.appendChild(checkbox);
        checkboxContainer.appendChild(label);

        const span = this.createElement('span', {
          className: 'field-label',
          innerHTML: fieldData.title
        });
        checkboxContainer.appendChild(span);
        fieldContainer.appendChild(checkboxContainer);
      }

      formContainer.appendChild(fieldContainer);
    }

    const responseButtonsContainer = this.createElement('div', {
      className: 'form-response-buttons-container'
    });

    for (let b = 0; b < buttons.length; b++) {
      let clickAction;
      if (buttons[b].name) {
        clickAction = (e) => {
          const errorFields = form.data
            .filter(
              (item) => {
                Array.isArray(this.activeForm[item.title]) ? this.activeForm[item.title].length <= 0 ? this.activeForm[item.title] = undefined : this.activeForm[item.title] : this.activeForm[item.title];
                return item.required && !this.activeForm[item.title]
              }
            )
            .map((item) => item.title);

          const invalidFields = form.data
            .filter(
              (item) =>
                item.validation &&
                this.activeForm[item.title] &&
                new RegExp(
                  item.regexpPattern,
                  item.regexpFlags.join('')
                ).test(this.activeForm[item.title]) === false
            )
            .map((item) => item.title);

          if (errorFields.length > 0) {
            e.target.parentNode.parentNode
              .querySelectorAll('.field-container')
              .forEach((item) => {
                if (errorFields.indexOf(item.dataset.value) !== -1)
                  item.classList.add('error');
              });
          }
          
          if (invalidFields.length > 0) {
            e.target.parentNode.parentNode
              .querySelectorAll('.field-container')
              .forEach((item) => {
                if (
                  invalidFields.indexOf(item.dataset.value) !== -1
                ) {
                  item.classList.add('error');
                  item
                    .querySelector('#field-error')
                    .classList.add('show');
                }
              });
          }

          if (
            errorFields.length === 0 &&
            invalidFields.length === 0
          ) {
            this.sendFormReply(
              e.target.parentNode.parentNode,
              buttons[b].name,
              form.id
            );
          }
        };
      } else {
        clickAction =
          "chatController.sendQuickReply(this.parentNode, '" +
          buttons[b].name +
          "')";
      }

      const buttonElem = this.createElement('button', {
        className: 'convButton',
        innerText: buttons[b].name,
        onclick: clickAction
      });
      responseButtonsContainer.appendChild(buttonElem);
    }

    formContainer.appendChild(responseButtonsContainer);
    messageContainer.appendChild(formContainer);

    // added timestamp
    chatController.addTimeStamp(formContainer);
  }

  /**
   * @description Create custom form  element
   * @param {HTMLElement} messageContainer - container to add new elements to
   * @param {Object} data - data of form to add
   */
  addCustomForm(messageContainer, data) {
    var formId = data.values
      .replace('${', '')
      .replace('}', '')
      .split('.')[0];
    var headers = data.headers;

    const formContainer = this.createElement('form', {
      className: 'form-container',
      id: formId
    });

    for (let x = 0; x < headers.length; x++) {
      const inputElem = this.createElement('div', {
        class: 'form-input-box-cls'
      });

      const inputLable = this.createElement('span', {
        class: 'form-lable-cls',
        innerText: headers[x].title
      });

      const inputTxt = this.createElement('input', {
        class: 'form-input-cls',
        type: headers[x].type,
        id: headers[x].name
      });

      inputElem.appendChild(inputLable);
      inputElem.appendChild(inputTxt);
      formContainer.appendChild(inputElem);
    }

    const formConfirmBtn = this.createElement('button', {
      className: 'form-confirm-btn',
      innerText: 'Submit',
      onclick: () => {
        var formEls = this.shadowRootDoc.getElementById(formId)
          .childNodes;
        var jsonObj = {
          formid: formId
        };
        for (let y = 0; y < formEls.length - 1; y++) {
          var value = formEls[y].childNodes[1].value;
          jsonObj[formEls[y].childNodes[1].id] = value;
        }
        socketController.sendUserMessageToServer(
          JSON.stringify(jsonObj),
          false
        );
      }
    });
    formContainer.appendChild(formConfirmBtn);
    messageContainer.appendChild(formContainer);

    // added timestamp
    chatController.addTimeStamp(formContainer);
  }

  /**
   * @description clears unnecessary values from the response config
   * @param {Object} config the responseConfig object returned from webOut
   */
  sanitizeResponseConfig(config) {
    const cleanResConfig = {};
    const invalidObjects = [
      '[]',
      '{}',
      `{"data":[]}`,
      `{"values":[],"staticbuttons":[]}`
    ];

    Object.keys(config).forEach((property) => {
      try {
        if (
          config[property] &&
          invalidObjects.indexOf(JSON.stringify(config[property])) ===
            -1
        ) {
          cleanResConfig[property] = config[property];
        }
      } catch {}
    });

    return cleanResConfig;
  }

  /**
   * @description Display Message on chat
   * @param {Boolean} isAgentMsg
   * @param {Object} content - recieved from the server
   * @param {Boolean} hideButtons - whether buttons should be hidden for this message or not. Only shown if it is the latest message
   */
  async displayMessageOnChat(isAgentMsg, content, hideButtons) {
    const chatMessageWindow = this.shadowRootDoc.querySelector(
      '#chat-messages'
    );
    let doNotDisplay = false;
    const chatMessageID = this.isQueueInitialized ? 'chat-message-wrapper-queue' : 'chat-message-wrapper';

    const messageContainer = this.createElement('div', {
      className: isAgentMsg
        ? 'message-wrapper bot'
        : 'message-wrapper user',
      id: chatMessageID
    });
    if (isAgentMsg) {

      if (content.response && content.response.length > 0 ) {
        let agentName;
        let chatBotName;

        if (content.response[0].includes('AGENT')) {
          agentName = content.response[0].split(' (AGENT): ')[0];
        } else if (content && content.agentName && content.agentName !== 'Live Agent') {
          agentName = content.agentName;
        } else {
          chatBotName = this.fetchChatbotName();
        }

        let botName;
        // if response is coming from agent/ChatBot set agent/ChatBot name
        if (chatBotName) {
          botName = this.createElement('div', {
            className: 'chat-message-botname',
            innerText: chatBotName,
            id: 'header-chatbot-name'
          });
        } else if (agentName) {
          botName = this.createElement('div', {
            className: 'chat-message-agent',
            innerText: agentName,
            id: 'header-agent-name'
          });
        }
        
        const childDiv = document.getElementById('chat-messages');
  
        // insertAfter(childDiv, botName);
        childDiv.appendChild(botName);
      }
      const messages = content.response ? content.response : null;
      
      try {
        if (messages && messages.length >= 0) {
          document.getElementById('user-input').disabled = false;
          document.getElementById('chat-input-send').disabled = false;
          messages.forEach(function (txt, idx, messages) {
            var tokens = messages[idx].match(
              /\b(?:http:\/\/|https:\/\/)(\S+)\b/g
            ); // extract all url's

            if (tokens) {
              tokens.forEach(function (token, cnt, tokens) {
                //Commenting below line of code for ticket "LSLCUSEN-605"
                // don't wrap link in <a> tag if it is already wrapped in it
                // const messageBeforeUrl = messages[idx].substring(
                //   0,
                //   messages[idx].indexOf(token)
                // );
                if (!messageBeforeUrl.endsWith('href="')) {
                  messages[idx] = messages[idx].replace(
                    token,
                    '<a class="linkstyle" href="' +
                      token +
                      '" target="_blank" rel="noopener noreferrer">' +
                      token +
                      '</a>'
                  ); // replace each with anchor tag
                }
              });
            }
          });
        }
      } catch (error) {
        console.log(error);
      }

      content.responseConfig = this.sanitizeResponseConfig(
        content.responseConfig || {}
      );

      const customForm =
        content.responseConfig &&
        content.responseConfig.customResponse &&
        content.responseConfig.customResponse.data
          ? JSON.parse(content.responseConfig.customResponse.data)
          : null;

      // render text message
      if (messages) {
        document.getElementById('user-input').disabled = false;
        document.getElementById('chat-input-send').disabled = false;
        this.addMessages(messageContainer, messages, content);
      }

      try {
        if (content.responseConfig.feedbackReqMsg) {
          this.addMessages(messageContainer, [
            content.responseConfig.feedbackReqMsg
          ]);
        }
      }catch (e) {
        console.log(e);
      }

      // render feedback tiles
      if (content.responseConfig.feedbackTiles) {
        this.addFeedbackTiles(
          messageContainer,
          content.responseConfig.feedbackTiles
        );
      }

      // add carousel
      if (content.responseConfig.carousel) {
        document.getElementById('user-input').disabled = false;
        document.getElementById('chat-input-send').disabled = false;
        this.addCarousel(
          messageContainer,
          content.responseConfig.carousel,
          content.responseConfig.displayUnselectedOptions,
          hideButtons
        );
      }

      // add datepicker
      if (content.responseConfig.datepicker && !hideButtons) {
        this.addDatepicker(
          messageContainer,
          content.responseConfig.datepicker
        );
      }

      // add form
      if (content.responseConfig.form && !hideButtons) {
        document.getElementById('user-input').disabled = false;
        document.getElementById('chat-input-send').disabled = false;
        this.addForm(
          messageContainer,
          content.responseConfig.form,
          content.responseConfig.buttons
        );
      } 

      // add custom form
      /*if (customForm && !hideButtons) {
              this.addCustomForm(messageContainer, customForm);
            }*/

      // add buttons
      if (
        content.responseConfig.buttons &&
        !content.responseConfig.form &&
        !hideButtons
      ) {
        document.getElementById('user-input').disabled = false;
        document.getElementById('chat-input-send').disabled = false;
        this.addButtons(
          messageContainer,
          content.responseConfig.buttons
        );
      }

      // write logic if messages is empty, buttons is empty etc.
      if (!messages && !content.responseConfig.buttons) {
        doNotDisplay = true;
      }
    } else {
      const messageElem = this.createElement('div', {
        className: 'message',
        innerText: content
      });
      messageContainer.appendChild(messageElem);
      
      // added timestamp
      chatController.addTimeStamp(messageElem);
    }

    if (!doNotDisplay) {
      chatMessageWindow.appendChild(messageContainer);
    }

    const buttonElements = document.getElementsByClassName('convButton');

    if (buttonElements) {
      for (let i = 0; i < buttonElements.length; i++) {
          buttonElements[i].addEventListener('click', function () {
            if (buttonElements[i].getAttribute('data-value'))
              chatController.sendQuickReply(this, buttonElements[i].innerText, buttonElements[i].getAttribute('data-value') );
            else if (buttonElements[i].getAttribute('data-link'))
              chatController.openButtonLink(this, buttonElements[i].getAttribute('data-link'), buttonElements[i].id);
          });
      }
    }

    const formElementsText = document.getElementsByClassName('field-input text');

    if (formElementsText) {
      for (let i = 0; i < formElementsText.length; i++) {
        formElementsText[i].addEventListener('input', function () {
          if (formElementsText[i].getAttribute('data-value')) 
            chatController.updateFormValue(formElementsText[i].getAttribute('data-value'), this.value, this.parentNode);
        })
      }
    }

    const formElementsTextarea = document.getElementsByClassName('field-input textarea');
    
    if (formElementsTextarea) {
      for (let i = 0; i < formElementsTextarea.length; i++) {
        formElementsTextarea[i].addEventListener('input', function () {
          if (formElementsTextarea[i].getAttribute('data-value')) 
            chatController.updateFormValue(formElementsTextarea[i].getAttribute('data-value'), this.value, this.parentNode);
        })
      }
    }

    const formElementsPassword = document.getElementsByClassName('field-input password');

    if (formElementsPassword) {
      for (let i = 0; i < formElementsPassword.length; i++) {
        formElementsPassword[i].addEventListener('input', function () {
          if (formElementsPassword[i].getAttribute('data-value')) 
            chatController.updateFormValue(formElementsPassword[i].getAttribute('data-value'), this.value, this.parentNode);
        })
      }
    }


    if (isAgentMsg && content && this.openLink) {
      setTimeout(() => {
        window.open(this.linkToOpen,'_blank');
      }, 1500);
      this.openLink = false;
      this.node.parentNode.childNodes.forEach(function(element) {
        if (element.classList.contains('convButton')) {
            element.disabled = true;
        }
      });
    }
  }

  /**
   * @description takes the value from a clicked button or carousel and sends message to server, as if user has typed it. After, all of the buttons are blocked
   * @param {HTMLElement} data - the html element that has been clicked
   */
  sendQuickReply(node, text, dynamicValue) {
    // block buttons or carousel once clicked
    if (node.classList.contains('carousel-container')) {
      node.classList.add('not-active');
    } else {
      const buttonContainer = node.parentNode.childNodes;
      buttonContainer.forEach(function(element) {
        if (element.classList.contains('convButton')) {
            element.disabled = true;
        }
      });
    }
    socketController.sendUserMessageToServer(text, null, dynamicValue);
  }

  /**
   * @description takes the value from a clicked button url
   * @param { String } url - the button url value to be opened in a new tab
  */
  openButtonLink(node, url, uniqueKey) {
    socketController.setLinkInParam(url, uniqueKey);
    this.node = node;
    this.linkToOpen = url;
    this.openLink = true;
  }

  /**
   * @description responsible for maximising the chat window
   */
   maximizeChat() {
    const chatState = this.shadowRootDoc.querySelector('#chat-window').className;
    if (chatState === 'maximize') {
      this.ismaximizeChat = false;
      this.shadowRootDoc.querySelector('#chat-window').className =
      'show';
      this.shadowRootDoc.querySelector('#chat-resize-btn').className = 
      'chat-header-btn  maximize_chat_window';
      this.shadowRootDoc.querySelector('#chat-messages').className =
      'minimize';
      this.shadowRootDoc.querySelector('.user-interaction-bar-maximize').className =
      'user-interaction-bar';
    } else {
      this.ismaximizeChat = true;
      this.shadowRootDoc.querySelector('#chat-window').className =
      'maximize';
      this.shadowRootDoc.querySelector('#chat-resize-btn').className = 
      'chat-header-btn  minimize_chat_window';
      this.shadowRootDoc.querySelector('#chat-messages').className =
      'maximize';
      this.shadowRootDoc.querySelector('.user-interaction-bar').className =
      'user-interaction-bar-maximize'; 
    }
    if (socketController.isCesEscalation && this.isCancelledRequest 
        && !this.cesControllerInstance.isAgentJoined) {
      this.showCESEscalationbtn();
    }
  }

  /**
   * @description removes the form component and sends form response
   * @param {HTMLElement} node - the form element
   * @param text - response message
   */
  sendFormReply(node, text, key) {
    const formContainer = node.parentNode.childNodes[0];

    formContainer.childNodes.forEach((node) => {
      node.childNodes.forEach((element) => {
        element.disabled = true;
        if (
          element.classList &&
          element.classList.contains('checkbox-container')
        ) {
          element.childNodes.forEach((e) => {
            e.childNodes.forEach((ele) => {
              ele.disabled = true;
            });
          });
        } else if (
          element.classList &&
          (element.classList.contains('dropdown-input') ||
            element.classList.contains('form-buttons-container') ||
            element.classList.contains('convButton'))
        ) {
          element.style.pointerEvents = 'none';
        }
      });
    });
    //node.parentNode.removeChild(node); // making the form to display with disable in fields
    socketController.sendUserMessageToServer(text, {
      data: this.activeForm,
      key: key
    });
    this.activeForm = {};
  }

  /**
   * @description adds text as the user input
   * @param text - input message
   */
  setInput(text) {
    document.getElementById('user-input').value = text;
    if (text && text.trim().length !== 0) {
      document.getElementById('chat-input-send').disabled = false;
    }
  }

  /**
   * @description Clears the chat window of messages
   */
  clearMessages() {
    const chatMessageWindow = this.shadowRootDoc.querySelector(
      '#chat-messages'
    );
    chatMessageWindow.innerHTML = '';
  }

  fetchChatbotName() {
    if (
      window &&
      window.chatSettings &&
      window.chatSettings.chatbotName
    ) {
      return window.chatSettings.chatbotName;
    } else {
      return 'Edwin';
    }
  }

  fetchHeaderTitle() {
    if (
      window &&
      window.chatSettings &&
      window.chatSettings.headerTitle
    ) {
      return window.chatSettings.headerTitle;
    } else {
      return 'CAIP';
    }
  }

  /**
   * @description hides the button responsible for opening chat window and shows the chat window
   */
  openChatWindow() {
    const cancelBtn = this.shadowRootDoc.querySelector('#cancelRequest-btn');
    cancelBtn.className = 'cnclbtnhide';
    this.shadowRootDoc.querySelector('#open-converse').className =
      'hide';
    this.shadowRootDoc.querySelector('#chat-window').className =
      'show';
    this.shadowRootDoc.querySelector('#chat-resize-btn').className =
      'chat-header-btn  maximize_chat_window';
  }

  /**
   * @description responsible for opening the chat window and initialising a new socket connection/chat session if one does not already exist
   */
  openConverse() {
    this.resetUnreadMessages();
    const cancelBtn = this.shadowRootDoc.querySelector('#cancelRequest-btn');
    cancelBtn.className = 'cnclbtnhide';
    this.shadowRootDoc = document.getElementById('chat-bot'); // change to element.shadowRoot to actually use shadow DOM
    // initialise socket connection if it hasnt already been done
    if (!socketController.socket) {
      socketController.initSocket();
    }
    this.openChatWindow();
  }

  /**
   * @description responsible to handle cancel request for ces escalation
   */
  cancelCesEscalation() {
    this.isCancelledRequest = false;
    const cancelBtn = this.shadowRootDoc.querySelector('#cancelRequest-btn');
    cancelBtn.innerHTML = `<span class="cancel-request-text">${this.translations.cancel_request}</span>`
    cancelBtn.className = 'cnclbtnhide';
    // socketController.callEndChatCES(true);
    this.isQueueInitialized = false;
    this.isQueueMessageReceived = false; 
    this.cesControllerInstance.handleEndChat(true);
  }

  cesInstance(instance) {
    this.cesControllerInstance = instance;
  }
  /**
   * @description responsible to show the cancel request button to user when CES escalation starts
   */
  showCESEscalationbtn() {
    this.isCancelledRequest = true;
    const cancelBtn = this.shadowRootDoc.querySelector('#cancelRequest-btn');
    cancelBtn.innerHTML =`<span class="cancel-request-text">${this.translations.cancel_request}</span>`
    if (this.ismaximizeChat) {
      cancelBtn.className = 'maximize chat-btn-max can_req';
    } else {
      cancelBtn.className = 'chat-btn cancel_Request';
    }
  }
  /**
   * @description responsible to show the cancel request button to user when CES escalation starts
   */
  hideCESEscalationbtn() {
    this.isCancelledRequest = false;
    const cancelBtn = this.shadowRootDoc.querySelector('#cancelRequest-btn');
    cancelBtn.innerHTML = `<span class="cancel-request-text">${this.translations.cancel_request}</span>`
    cancelBtn.className = 'cnclbtnhide';
  }
  /**
   * @description responsible for minimising the chat window
   */
  closeConverse() {
    this.resetUnreadMessages();
    this.isCancelledRequest = false;
    var chatWindow = this.shadowRootDoc.querySelector(
      '#chat-window'
    );
    if (!chatWindow) {
    this.shadowRootDoc.querySelector(
        '#chat-window-maximize'
      ).id = 'chat-window';
    this.shadowRootDoc.querySelector('#chat-resize-btn').className = 
      'chat-header-btn  maximize_chat_window'
    }
    chatWindow.className = 'hide';
    const openConverseButton = this.shadowRootDoc.querySelector(
      '#open-converse'
    );
    openConverseButton.className = 'show';
    this.shadowRootDoc.querySelector('#chat-messages').className = 
      'minimize';
      if (this.shadowRootDoc.querySelector('.user-interaction-bar-maximize')) {
        this.shadowRootDoc.querySelector('.user-interaction-bar-maximize').className =
        'user-interaction-bar'; 
      }
  }

  /**
   * @description responsible for creating the html for the chat window - this uses the Shadow DOM approach
   */
  initChatWindow() {
    const chatbot = this.createElement('div', { id: 'chat-bot' });
    document.body.appendChild(chatbot);
    const shadowRoot = chatbot; // add .attachShadow({ mode: "open" }); to reapply shaddow DOM

    const chatWindow = this.createElement('div', {
      id: 'chat-window'
    });

    const assetsCss = this.createElement('link', {
      rel: 'stylesheet',
      href: window.chatSettings.assetsBasePath
        ? window.chatSettings.assetsBasePath + 'dist/css/assets.css'
        : 'dist/css/assets.css'
    });
    const styleLink = this.createElement('link', {
      id: 'chatbotStyleLink',
      rel: 'stylesheet',
      href: window.chatSettings.assetsBasePath
        ? window.chatSettings.assetsBasePath +
          'dist/css/' +
          window.chatSettings.theme
        : 'dist/css/defaultChatbot.css'
    });
    const chatHeader = this.createElement('div', {
      className: 'chat-header'
    });
    const headerLabel = this.createElement('div', {
      className: 'chat-header-label bot',
      innerText: this.fetchHeaderTitle(),
      id: 'header-label'
    });

    const minimizeBtn = this.createElement('div', {
      className: 'chat-header-btn close',
      id: 'close-btn'
    });

    const maximizeBtnChatWindow = this.createElement('div', {
      className: 'chat-header-btn  maximize_chat_window',
      id: 'chat-resize-btn'
    });

    chatHeader.appendChild(headerLabel);

    this.addEventListeners();
    
    if (
      window &&
      window.chatSettings &&
      window.chatSettings.voiceEnabled
    ) {
      const audioBtn = this.createElement('div', {
        className: 'chat-header-btn audio',
        id: 'audio-toggle'
      });
      chatHeader.appendChild(audioBtn);
    }
    chatHeader.appendChild(maximizeBtnChatWindow);
    chatHeader.appendChild(minimizeBtn);

    const cancelRequestBtn = this.createElement('button', {
      className: 'chat-btn cancel_Request',
      id: 'cancelRequest-btn',
       innerHTML: '<span class="cancel-request-text">Cancel Request</span>'
    });

    const chatMessageWindow = this.createElement('div', {
      id: 'chat-messages'
    });

    this.typingIndicator = this.createElement('div', {
      id: 'typing-indicator'
    });
    const dot1 = this.createElement('span');
    const dot2 = this.createElement('span');
    const dot3 = this.createElement('span');
    this.typingIndicator.appendChild(dot1);
    this.typingIndicator.appendChild(dot2);
    this.typingIndicator.appendChild(dot3);

    this.agentTypingIndicator = this.createElement('div', {
      id: 'agent-typing-indicator',
      innerHTML: 'Agent is typing'
    });

    const userInteractionWrapper = this.createElement('form', {
      className: 'user-interaction-bar',
      onsubmit: (e) => {
        e.preventDefault();
        if (chatController.datePicker) {
          chatController.datePicker.close();

          var elements = document.querySelectorAll('.' + chatController.dateClass);

          for (var element of elements) {
            element.remove();// or // element.parentNode.removeChild(element);}
          }
        }
        
        // socketController.sendUserMessageToServer("", null);
        socketController.sendUserMessageToServer('', null);
      }
    });

    const voiceBtn = this.createElement('div', {
      className: 'chat-input-btn voice voice-input-btn',
      id: 'voice-toggle'
    });

    const userInputField = this.createElement('input', {
      className: 'user-input-textbox',
      id: 'user-input',
      autocomplete: 'off'
    });

    const submitUserMessageButton = this.createElement('button', {
      className: 'btn-chat-send',
      id: 'chat-input-send',
      innerHTML: 'Send'
    });

    userInputField.setAttribute(
      'placeholder',
      'Type something here...'
    );
    if (
      window &&
      window.chatSettings &&
      window.chatSettings.voiceEnabled
    ) {
      userInteractionWrapper.appendChild(voiceBtn);
    }
    userInteractionWrapper.appendChild(userInputField);
    userInteractionWrapper.appendChild(submitUserMessageButton);

    const openConverseButton = this.createElement('div', {
      id: 'open-converse'
    });

    const unreadMessage = this.createElement('span', {
      id: 'unread-message'
    });

    openConverseButton.appendChild(unreadMessage)

    // finalise the chat window elements
    chatWindow.appendChild(chatHeader);
    chatWindow.appendChild(chatMessageWindow);
    chatWindow.appendChild(cancelRequestBtn);
    chatWindow.appendChild(userInteractionWrapper);
    // add all elements to the shadow root
    shadowRoot.appendChild(openConverseButton);
    shadowRoot.appendChild(chatWindow);
    shadowRoot.appendChild(assetsCss);
    shadowRoot.appendChild(styleLink);

    document.getElementById('open-converse').addEventListener('click', function () {
      chatController.openConverse();
    });

    document.getElementById('close-btn').addEventListener('click', function () {
      chatController.closeConverse();
    });

    document.getElementById('chat-resize-btn').addEventListener('click', function () {
      chatController.maximizeChat();
    });

    document.getElementById('audio-toggle').addEventListener('click', function () {
      chatController.toggleAudio();
    });

    document.getElementById('cancelRequest-btn').addEventListener('click', function () {
      chatController.cancelCesEscalation();
    });

    document.getElementById('voice-toggle').addEventListener('click', function () {
      chatController.toggleVoice();
    });
    // shadow root doc is used elsewhere in the code to query Shadow Root DOM
    this.shadowRootDoc = chatbot; // change to chatbot.shadowRoot to actually use shadow DOM
  }

  /**
   * @description displays error message
   */
  showErrorMessage(message) {
    const chatWindow = this.shadowRootDoc.querySelector(
      '#chat-window'
    );
    const existingError = this.shadowRootDoc.querySelector(
      '#error-overlay'
    );

    if (!existingError) {
      const errorOverlay = this.createElement('div', {
        className: 'error-overlay',
        id: 'error-overlay'
      });
      const errorMessage = this.createElement('div', {
        className: 'error-message',
        innerText: message
      });
      errorOverlay.appendChild(errorMessage);
      chatWindow.appendChild(errorOverlay);

      document.getElementById('error-message').addEventListener('click', function () {
        chatController.hideErrorMessage();
      });
    }
  }

  /**
   * @description removes error message
   */
  hideErrorMessage() {
    const chatWindow = this.shadowRootDoc.querySelector(
      '#chat-window'
    );
    const errorOverlay = this.shadowRootDoc.querySelector(
      '#error-overlay'
    );
    if (errorOverlay) {
      chatWindow.removeChild(errorOverlay);
    }
  }

  // handel incoming message 
  handleIncomingMessage(message) {
    if (!this.defaultLanguage) {
      this.defaultLanguage = message.defaultLanguage;
      this.themeCheck(this.defaultLanguage);
    }
    this.hideTypingIndicator();

    this.agentAvailable = message.agentAvailable;

    if (!this.ismaximizeChat || message) {
      this.incrementUnreadMessages();
    } else {
      this.resetUnreadMessages();
    }

    if (message.converseResponse.linkToOpen) {
      window.open(message.converseResponse.linkToOpen,'_blank');
      this.openLink = false;
    } else {
      this.displayMessageOnChat(true, message.converseResponse);
    }
    // scroll to bottom whenever receiving a message
    this.scrollToBottom();

    if (this.voiceEnabled) {
      const isSSMLMsg = message.converseResponse.responseSsml;
      const botResponse = isSSMLMsg ? isSSMLMsg : message.converseResponse.response;
      voiceController.sendTTSMessage(botResponse);
    }
  }

  /**
   * @description added timestamp function responsible for showing the timestamp on the bot-messages
   * @param messageContainer - container to add new elements to
   * @param sessionTime - used in the condition for adding timestamp
   */
  addTimeStamp(messageContainer, sessionTime) {
    let time = new Date();
    let seconds = time.getSeconds();
    let browserLocale = globalization.getLocale(this.browserLanguage);  
    let localTime = time.toLocaleString(browserLocale ? browserLocale : 'en-US', {
      hour: 'numeric',
      minute: 'numeric',
      hour12: true
    });
    socketController.addTimeToSession(localTime);
        const timeStamp = this.createElement('div', {
          className: 'bot-timeStamp',
          id: 'bot-timeStamp-id',
          innerHTML: localTime
        });
        messageContainer.appendChild(timeStamp);

    setTimeout(function () {
      var botTimeStampClass = document.getElementsByClassName(
        'bot-timeStamp'
      );
      for (let i = 0; i < botTimeStampClass.length; i++) {
        if (botTimeStampClass[i].innerHTML === 'a few seconds ago') {
          var botClassName = botTimeStampClass[i].className.split(
            ' '
          );
          botTimeStampClass[i].innerHTML =
            botClassName[1] + ' ' + botClassName[2];
        }
      }
    }, 1000 * 59);
  }

  getLastResponse() {
    const messages = this.shadowRootDoc.querySelector(
      '#chat-messages'
    ).children;

    let manageResponses = [];
    if(messages.length > 0) {
      // Count backwards to look for last bot messages
      for (let i = messages.length - 1;  i >= 0; i--) { 
        if (messages.item(i).className === 'message-wrapper bot') {
          if (
            messages.item(i).getAttribute('data-ssml')
          ) {
            manageResponses.unshift(
              messages
                .item(i)
                .getAttribute('data-ssml')
            );
          } else {
            manageResponses.unshift(
              messages.item(i).innerText
            );
          }
        } else {
          // Return only last bot responses after last user message
          break;
        }
      }
    }

    const lastResponse = manageResponses.join(' ');
    const messageWithoutTimestamp = RemoveTimeStamp();
    return messageWithoutTimestamp;

    /**
    * @description function to remove the timestamp from the message
    * @param {Array<String>} lastResponse - string containing bot message
    */
    function RemoveTimeStamp()
    {
      const responseTime = lastResponse.replace(/((1[0-2]|0?[1-9]):([0-5][0-9]) ([AaPp][Mm]))/gi, " " );
      const responseSeconds = responseTime.replace(/(a few seconds ago)/gi," ");
      return responseSeconds;
    }     
  }

  toggleAudio() {
    this.audioEnabled = !this.audioEnabled;
    if (this.audioEnabled) {
      this.shadowRootDoc.querySelector('#audio-toggle').classList =
        'chat-header-btn audio active';
      voiceController.sendTTSMessage(this.getLastResponse());
    } else {
      this.shadowRootDoc.querySelector('#audio-toggle').classList =
        'chat-header-btn audio';
      voiceController.stopPlayback();
    }
  }

  disableAudio() {
    this.audioEnabled = false;
    this.shadowRootDoc.querySelector('#audio-toggle').classList =
      'chat-header-btn audio disabled';
  }

  closeAudio() {
    this.audioEnabled = false;
    this.shadowRootDoc.querySelector('#audio-toggle').classList =
      'chat-header-btn audio closed';
  }

  async toggleVoice(newState) {
    this.voiceEnabled =
      newState === undefined ? !this.voiceEnabled : newState;
    if (navigator.mediaDevices) {
      if (this.voiceEnabled) {
        if (await voiceController.initRecording()) {
          // speak now title on
          this.shadowRootDoc.querySelector('#voice-toggle').classList =
            'chat-input-btn voice active';
        }
      } else {
        this.shadowRootDoc.querySelector('#voice-toggle').classList =
          'chat-input-btn voice';
        voiceController.stopRecording();
      }
    } else {
      console.warn(
        `Your browser doesn't have the support for media devices.`,
        `Please upgrade or change the browser to access media devices`
      );
    }
  }

  disableVoice() {
    this.voiceEnabled = false;
    this.shadowRootDoc.querySelector('#voice-toggle').classList =
      'chat-input-btn voice disabled';
  }
  
  /**
   * @description this method is responsible for applying custom GREEK texts for eurobank theme and remove for other themes
   */
  async themeCheck(defaultLanguage = null) {
    var localTheme = localStorage.getItem("theme")
    this.browserLanguage = globalization.getLanguage(defaultLanguage);
    this.browserLocale = globalization.getLocale(this.browserLanguage);
    this.translations = await globalization.fetchTranslations(this.browserLanguage, this.defaultLanguage);

    if (localTheme === 'eurobank') {
      const chatHeaderDiv = this.shadowRootDoc.querySelector(
        '.chat-header'
      );
      const activeChatbot = this.createElement('div', {
        id: 'active-chatbot'
      });
      var activeDot = document.getElementById("active-chatbot");
      if (activeDot === null) {
        chatHeaderDiv.appendChild(activeChatbot);
      }

      this.addChatWindowToolTip();
      
      // =================== CUSTOM GREEK TEXT FOR EUROBANK THEME STARTS ===================

      document.getElementsByClassName('option-login')[0].innerHTML = 'Σύνδεση';
      document.getElementsByClassName('option-register')[0].innerHTML = 'Εγγραφή';
      document.getElementsByClassName('option-manage')[0].innerHTML = 'Διαχείριση';
      document.getElementsByClassName('option-logout')[0].innerHTML = 'Αποσύνδεση';
      document.getElementsByClassName('btn-cancel-login')[0].innerHTML = 'Ακύρωση';
      document.getElementsByClassName('btn-login')[0].innerHTML = 'Σύνδεση';
      document.getElementsByClassName('btn-cancel-register')[0].innerHTML = 'Ακύρωση';
      document.getElementsByClassName('btn-register')[0].innerHTML = 'Εγγραφή';
      document.getElementsByClassName('login-email')[0].innerHTML = 'Username';
      document.getElementsByClassName('firstName')[0].innerHTML = 'Όνομα';
      document.getElementsByClassName('lastName')[0].innerHTML = 'Επώνυμο';
      document.getElementsByClassName('chat-header-label')[0].innerHTML = 'Eurobank VA';
      document.getElementsByClassName('user-input-textbox')[0].placeholder = 'Γράψτε κάτι εδώ...';
      document.getElementsByClassName('btn-chat-send')[0].innerHTML = 'Αποστολή';

      // =================== CUSTOM GREEK TEXT FOR EUROBANK THEME ENDS ===================

    } else if (localTheme === 'dei') {

      // =================== CUSTOM ENGLISH AND GREEK TEXT FOR DEI THEME STARTS ===================
      //in Dei theme, if the user uses the Greek chatbot, relevant UI elements will be in Greek.
      //Otherwise, everything is in English
      const greekMasterBotID = '2a28f32c-6fb6-4bd1-acbf-247585a6e960';
      const isCurrentBotGreek = localStorage.getItem("masterBotID") === greekMasterBotID;

      this.removeChatWindowToolTip();
      document.getElementsByClassName('option-login')[0].innerHTML = 'Log In';
      document.getElementsByClassName('option-register')[0].innerHTML = 'Register';
      document.getElementsByClassName('option-manage')[0].innerHTML = 'Manage account';
      document.getElementsByClassName('option-logout')[0].innerHTML = 'Sign Out';
      document.getElementsByClassName('btn-cancel-login')[0].innerHTML = 'Cancel';
      document.getElementsByClassName('btn-login')[0].innerHTML = 'Log In';
      document.getElementsByClassName('btn-cancel-register')[0].innerHTML = 'Cancel';
      document.getElementsByClassName('btn-register')[0].innerHTML = 'Register';
      document.getElementsByClassName('login-email')[0].innerHTML = 'Email';
      document.getElementsByClassName('firstName')[0].innerHTML = 'First Name';
      document.getElementsByClassName('lastName')[0].innerHTML = 'Last Name';
      document.getElementsByClassName('chat-header-label')[0].innerHTML = isCurrentBotGreek ? 'ΔΕΗ Ψηφιακή Βοηθός' : 'PPC Virtual Assistant';
      document.getElementsByClassName('user-input-textbox')[0].placeholder = isCurrentBotGreek ? 'Στείλε την ερώτηση σου...' : 'Send your question...';
      document.getElementsByClassName('btn-chat-send')[0].innerHTML = 'Send';

      // =================== CUSTOM ENGLISH AND GREEK TEXT FOR DEI THEME ENDS ===================

    } else {
      this.removeChatWindowToolTip();
      document.getElementsByClassName('option-login')[0].innerHTML = 'Log In';
      document.getElementsByClassName('option-register')[0].innerHTML = 'Register';
      document.getElementsByClassName('option-manage')[0].innerHTML = 'Manage account';
      document.getElementsByClassName('option-logout')[0].innerHTML = 'Sign Out';
      document.getElementsByClassName('btn-cancel-login')[0].innerHTML = 'Cancel';
      document.getElementsByClassName('btn-login')[0].innerHTML = 'Log In';
      document.getElementsByClassName('btn-cancel-register')[0].innerHTML = 'Cancel';
      document.getElementsByClassName('btn-register')[0].innerHTML = 'Register';
      document.getElementsByClassName('login-email')[0].innerHTML = 'Email';
      document.getElementsByClassName('firstName')[0].innerHTML = 'First Name';
      document.getElementsByClassName('lastName')[0].innerHTML = 'Last Name';
      document.getElementsByClassName('chat-header-label')[0].innerHTML = 'CAIP';
      document.getElementsByClassName('user-input-textbox')[0].placeholder = this.translations.type_something;
      document.getElementsByClassName('btn-chat-send')[0].innerHTML = '';

    // =================== CUSTOM GREEK TEXT FOR EUROBANK THEME ENDS ===================
    }
  }

  /**
   * @description this method is responsible for adding tooltip on hover over open-chatbot icon for eurobank theme
   */
  addChatWindowToolTip() {
    const openConverseButton = this.shadowRootDoc.querySelector(
      '#open-converse'
    );
    const openConverseToolTip = this.createElement('span', {
      id: 'open-converse-tooltip',
      innerHTML: 'Είμαι ο ψηφιακός βοηθός της Eurobank. Πώς μπορώ να σας βοηθήσω;' + ' &#128512'
    });
    openConverseButton.appendChild(openConverseToolTip);

    function tooltipShow() {
      document.getElementById('open-converse-tooltip').classList.add('tooltip-show')
    }
   
    function tooltipHide() {
      document.getElementById('open-converse-tooltip').classList.remove('tooltip-show')
    }

    setTimeout(tooltipShow, 3000);
    setTimeout(tooltipHide, 13000);
  }

  removeChatWindowToolTip() {
    const openConverseButton = this.shadowRootDoc.querySelector(
      '#open-converse'
    );
    const openConverseToolTip = this.shadowRootDoc.querySelector(
      '#open-converse-tooltip'
    );

    if (openConverseToolTip !== null) {
      openConverseButton.removeChild(openConverseToolTip);
    }
  }

  /**
   * @description Shows the 'Agent is typing...' message during escalation.
   */
  showAgentTypingIndicator() {
    const chatMessageWindow = this.shadowRootDoc.querySelector(
      '#chat-messages'
    );
    this.agentTypingIndicator.innerHTML = this.translations.agent_typing;
    chatMessageWindow.appendChild(this.agentTypingIndicator);
    
    setTimeout(this.hideAgentTypingIndicator, 4000);
  }

  /**
   * @description Adding event listeners for all the inline events
   */
  addEventListeners() {
    document.getElementById('option-login')?.addEventListener('click', function () {
      openLoginForm();
    });

    document.getElementById('option-register')?.addEventListener('click', function () {
      openRegisterForm();
    });

    document.getElementById('option-logout')?.addEventListener('click', function () {
      signOut();
    });

    document.getElementById('option-manage')?.addEventListener('click', function () {
      openTabManager();
    });

    document.getElementById('sidebar-button')?.addEventListener('click', function () {
      toggleSidebar();
    });

    document.getElementById('start-proactive')?.addEventListener('click', function () {
      startProactiveConversation();
    });

    document.getElementById('channelAdaptorPath')?.addEventListener('focusout', function () {
      updateValue('channelAdaptorPath', this.value);
    });

    document.getElementById('reset-btn-channel-adaptor')?.addEventListener('click', function () {
      resetInput('channelAdaptorPath');
    });

    document.getElementById('reset-btn-endpoint')?.addEventListener('click', function () {
      resetInput('endpoint');
    });

    document.getElementById('endpoint')?.addEventListener('focusout', function () {
      updateValue('endpoint', this.value)
    });
    
    document.getElementById('selectThemeDropdown')?.addEventListener('change', function (event) {
      selectTheme(event, true);
    });

    document.getElementById('reset-btn-path')?.addEventListener('click', function () {
      resetInput('path');
    });

    document.getElementById('path')?.addEventListener('focusout', function () {
      updateValue('path', this.value)
    });

    document.getElementById('reset-btn-masterBotID')?.addEventListener('click', function () {
      resetInput('masterBotID');
    });

    document.getElementById('masterBotID')?.addEventListener('focusout', function () {
      updateValue('masterBotID', this.value, true);
    });

    document.getElementById('reset-btn-userAuthPath')?.addEventListener('click', function () {
      resetInput('userAuthPath');
    });

    document.getElementById('userAuthPath')?.addEventListener('focusout', function () {
      updateValue('userAuthPath', this.value)
    });

    document.getElementById('reset-btn-userManagementPath')?.addEventListener('click', function () {
      resetInput('userManagementPath');
    });

    document.getElementById('userManagementPath')?.addEventListener('focusout', function () {
      updateValue('userManagementPath', this.value)
    });

    document.getElementById('reset-btn-voiceBiometricsPath')?.addEventListener('click', function () {
      resetInput('voiceBiometricsPath');
    });

    document.getElementById('voiceBiometricsPath')?.addEventListener('focusout', function () {
      updateValue('voiceBiometricsPath', this.value)
    });

    document.getElementById('reset-btn-chatbotName')?.addEventListener('click', function () {
      resetInput('chatbotName');
    });

    document.getElementById('chatbotName')?.addEventListener('focusout', function () {
      updateValue('chatbotName', this.value)
    });

    document.getElementById('reset-btn-headerTitle')?.addEventListener('click', function () {
      resetInput('headerTitle');
    });

    document.getElementById('headerTitle')?.addEventListener('focusout', function () {
      updateValue('headerTitle', this.value)
    });

    document.getElementById('overlay')?.addEventListener('click', function () {
      hideWindows();
    });

    document.getElementById('cancel-button-login')?.addEventListener('click', function () {
      hideWindows();
    });

    document.getElementById('cancel-button-register')?.addEventListener('click', function () {
      hideWindows();
    });

    document.getElementById('account-tab')?.addEventListener('click', function () {
      openManageAccountForm();
    });

    document.getElementById('biometrics-tab')?.addEventListener('click', function () {
      openBiometricsForm();
    });

    document.getElementById('cancel-button-manage-account')?.addEventListener('click', function () {
      hideWindows();
    });

    document.getElementById('delete-button-manage-account')?.addEventListener('click', function (event) {
      deleteUser();
      event.preventDefault();
    });

    document.getElementById('cancel-button-enroll')?.addEventListener('click', function () {
      hideWindows();
    });
  }

  generateRandomId() {
    const array = new Uint8Array(8);
    window.crypto.getRandomValues(array);
    return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');
  }
}

const chatController = new ChatController();

const bufferSize = 8192;
const sampleRateHertz = 16000;
const IS_LISTENING_TIMEOUT = 5000;
const sttFormat = {
  google: {
    encoding: 'LINEAR16',
    sampleRateHertz,
    model: 'default'
  },
  dialogflowSTT: {
    encoding: 'AUDIO_ENCODING_LINEAR_16',
    sampleRateHertz: sampleRateHertz
  },
  watson: {
    content: `audio/l16;rate=${sampleRateHertz}`
  },
  transcribe: {
    sampleRate: sampleRateHertz
  }
};

const constraints = {
  audio: true,
  video: false
};

const TheAudioContext =
  window.AudioContext || // Default
  window.webkitAudioContext || // Safari and old versions of Chrome
  false;

//Code written to fix Chrome on iPhone issue (Issue: Chatclient not working in Chrome in iPhones)

if (!navigator.mediaDevices) {
  console.warn(
    `Your browser doesn't have the support for media devices.`,
    `Please upgrade or change the browser to access media devices`
  );
} else if (!(navigator.userAgent.match('CriOS'))){
  // computes the correct navigator
  navigator.mediaDevices.getUserMedia =
  navigator.mediaDevices.getUserMedia ||
  navigator.mediaDevices.webkitGetUserMedia ||
  navigator.mediaDevices.mozGetUserMedia;
}

class VoiceController {
  constructor() {
    this.recordingEnabled = false;

    this.context = null;
    this.processor = null;
    this.input = null;
    this.globalStream = null;

    this.playingAudio = false;
    this.playbackArray = [];

    this.sttClient = null;
    this.ttsClient = null;

    this.SESSION_ENUM = {
      DETECTED_LANGUAGE: 'detectedLanguage'
    };
  }

  init() {
    this.masterBotId = window.chatSettings.masterBotID;

    // workout the stt and tts endpoint
    if (window.location.hostname === 'localhost') {
      this.sttEndpoint = 'ws://localhost:8082';
      this.ttsEndpoint = 'ws://localhost:8083';
    } else {
      this.sttEndpoint = `wss://${window.location.hostname}/backend-stt`;
      this.ttsEndpoint = `wss://${window.location.hostname}/backend-tts`;
    }

    // create a context which will be used by stt and tts
    this.context = new TheAudioContext({
      latencyHint: 'interactive'
    });
  }

  setupAudioProcessor() {
    // setup the audio processor
    this.processor = this.context.createScriptProcessor(
      bufferSize,
      1,
      1
    );

    this.processor.onaudioprocess = e => {
      const buffer = e.inputBuffer.getChannelData(0);

      const pcmBuffer = downsampleBuffer(
        buffer,
        44100,
        sampleRateHertz
      );

      this.sendToSTT(pcmBuffer);
    };

    // connect the processor to the context
    this.processor.connect(this.context.destination);
  }

  isSttListening() {
    const self = this;
    return new Promise((resolve, reject) => {
      const timeout = setTimeout(() => {
        reject(
          `STT Service did not start listening in ${IS_LISTENING_TIMEOUT}`
        );
      }, IS_LISTENING_TIMEOUT);

      console.log(`waiting for listening message`);
      self.sttClient.onmessage = function isListening(message) {
        const data = JSON.parse(message.data);
        if (data.state === 'listening') {
          timeout && clearTimeout(timeout);
          console.log(`stt is listening`);
          resolve();
        }
      };
    });
  }

  async startSTTClient() {
    const self = this;
    this.sttClient =
      this.sttClient ||
      (await setupWsClient(this.sttEndpoint));

    this.sttClient.onclose = function({ code, reason }) {
      const closedOnError = code !== 1000 && code !== 1006;

      self.resetSttClient(
        `STT closed with code: ${code}, reason: ${reason}`,
        closedOnError
      );
    };

    this.sttClient.onerror = function(error) {
      self.resetSttClient(error, true);
    };

    const initialMessage = {
      action: 'start',
      origin: 'web-chat',
      masterBotId: this.masterBotId,
      ...sttFormat
    };

    this.sendToSTT(JSON.stringify(initialMessage));
    await this.isSttListening();
    // setup socket listeners
    this.sttClient.onmessage = function(message) {
      const obj = JSON.parse(message.data);

      if (obj.results !== undefined) {
        const input = obj.results[0].alternatives[0].transcript;
        if (obj.results[0].final) {
          // stop recording and close the stream
          chatController.setInput(input);
          chatController.toggleVoice(false);
        } else {
          // add user non final message to chat window
          chatController.setInput(input);
        }
      }
    };
  }

  resetSttClient(reason, disable) {
    this.sttClient = undefined;
    console.log(reason);

    if (disable) {
      chatController.disableVoice();
      this.stopRecording();
      showMessage({
        type: 'error',
        message:
          'Failed to start recording!\nCheck console for errors'
      });
    }
  }

  sendToSTT(data) {
    this.sttClient &&
      this.sttClient.readyState == 1 &&
      this.recordingEnabled &&
      this.sttClient.send(data);
  }

  async initRecording() {
    if (this.recordingEnabled) {
      return;
    }

    this.recordingEnabled = true;

    try {
      // start stt if it's not active
      !this.sttClient && (await this.startSTTClient());
      // setup audio processor if it isn't set up
      !this.processor && this.setupAudioProcessor();

      if (this.context.state === 'suspended') {
        this.context.resume();
      }

      // create a reference to the stream so we can close it after
      this.globalStream = await navigator.mediaDevices.getUserMedia(
        constraints
      );

      // setup an input from the stream and connect it to the processor
      this.input = this.context.createMediaStreamSource(
        this.globalStream
      );
      this.input.connect(this.processor);

      return true;
    } catch (err) {
      this.resetSttClient(
        `error occurred when recording: ${err}`,
        true
      );
    }
  }

  stopRecording() {
    if (!this.globalStream) {
      return;
    }

    this.recordingEnabled = false;

    // request to stop recognition
    this.globalStream.getTracks()[0].stop();
    this.globalStream = null;

    // input needs to be created from the global stream which may change so we can disconnect the last input
    this.input.disconnect(this.processor);
    this.input = null;

    // disconnect the processor so there's nothing happening in h
    this.processor.disconnect(this.context.destination);
    this.processor = null;
  }

  /*#########################################################################################*/

  async startTTSClient(text) {
    const self = this;


    this.ttsClient = await setupWsClient(this.ttsEndpoint);
    //fetch the detected language as the value that has been set from the socket controller
    if (this.storageType && this.storageType === 'sessionStorage') {
      this.detectedLanguage = sessionStorage.getItem(
        this.SESSION_ENUM.DETECTED_LANGUAGE
      );
    } else {
      this.detectedLanguage = localStorage.getItem(
        this.SESSION_ENUM.DETECTED_LANGUAGE
      );
    }
   

    const initialMessage = {
      action: 'start',
      origin: 'web-chat',
      masterBotId: this.masterBotId,
      text,
      language: this.detectedLanguage
    };

    // setup socket listeners
    this.ttsClient.onclose = function({ code, reason }) {
      self.resetTtsClient(
        `TTS service cannot play text. closed early with code ${code}, reason: ${reason}`,
        true
      );
    };

    this.ttsClient.onerror = function(error) {
      self.resetTtsClient(error, true);
    };

    this.sendToTTS(JSON.stringify(initialMessage));
  }

  sendToTTS(data) {
    if (this.ttsClient.readyState == 1) this.ttsClient.send(data);
  }

  resetTtsClient(reason, disable) {
    this.ttsClient = undefined;
    console.log('SOCKET CLOSED: ', reason);

    if (disable) {
      chatController.disableAudio();
      this.playingAudio = false;
      showMessage({
        type: 'error',
        message: 'Failed to playback audio!\nCheck console for errors'
      });
    }
  }

  async sendTTSMessage(text) {
    if (!chatController.audioEnabled) {
      return;
    }

    if (this.playingAudio) {
      // if audio is already playing, then add it to the array so it can be played when audio finishes playing
      this.playbackArray.push(text);
      return;
    }

    this.playingAudio = true;
    return this.handleAudioPlayback(text);
  }

  async handleAudioPlayback(text) {
    const self = this;
    if (!this.ttsClient) {
      try {
        await this.startTTSClient(text);
      } catch (err) {
        self.resetTtsClient(
          `Cannot connect to TTS service. Error: ${JSON.stringify(
            err
          )}`,
          true
        );
        return;
      }
    }

    const audioChunks = [];
    this.ttsClient.onmessage = function(message) {
      audioChunks.push(message.data);
    };

    // TODO - check close code is valid
    this.ttsClient.onclose = async function({ code, reason }) {
      // code is 1000 for successful stream
      if (code !== 1000 && code !==1006) {
        self.stopPlayback();
        self.resetTtsClient(
          `TTS service cannot play text. closed with code ${code}, reason: ${reason}`,
          true
        );
        return;
      }

      // play collected audio now
      self.playAudioFromBuffer(audioChunks);
      self.resetTtsClient(`Starting audio playback`);
    };
  }

  async playAudioFromBuffer(audioChunks) {
    const audioBlob = new Blob(audioChunks);
    const arrayBuffer = await getArrayBufferFromBlob(audioBlob);

    this.context.decodeAudioData(
      withWaveHeader(arrayBuffer, 1, 8000),
      audioBuffer => {
        this.source = this.context.createBufferSource();
        this.source.buffer = audioBuffer;
        this.source.connect(this.context.destination);
        this.source.start(0);
        this.source.onended = () => this.stopPlayback(true);
      }
    );
  }

  stopPlayback(playNext = false) {
    this.source && this.source.stop(0);
    this.playingAudio = false;

    // need to play the next messages
    if (playNext && this.playbackArray.length > 0) {
      const message = this.playbackArray.shift();
      this.sendTTSMessage(message);
    }
    chatController.closeAudio();
  }
}

const voiceController = new VoiceController();

const AGENT_TYPING_EVENT_MESSAGE = 'AGENT_TYPING_EVENT';
const MODULE_NAME = 'Socket Controller';

/**
 * @description Handles actions interacting with the socket connection and session. Holds session-related values
 */
class SocketController {

  isCesEscalation = false;  // Initiate ces escalation indicator
  cesAgentTyping = false;
  isRefreshed = false;

  constants = {
    cesEventsDisplayedOnChat: [
      'onAboutToTimeout',
      'onChatClosed',
      'onChatEnded',
      'onEscalationCancelled',
      'onMessageReceived',
      'onParticipantJoined',
      'onParticipantLeft',
      'onTimedOut',
      'onTransferSucceeded',
      'onTransferFailed',
      'onUnknownMessage'
    ],
    eventNames: {
      onEventTyping: 'onEventTyping'
    },
    sendersUsingMessageField: [
      'bot', 'agent', 'AGENT', 'SYSTEM'
    ]
  };

  constructor() {
    this.SESSION_ENUM = {
      MESSAGES: 'converseMessages',
      CONVERSE_SESSION: 'converseSession',
      DETECTED_LANGUAGE: 'detectedLanguage'
    };
    this.delayFlag = Boolean;
  }

  /**
   * @description Initialises a socket connection between converse and the browser.
   * Also contains logic as to what should happen on socket events
   * @param event (optional) - if passed, then start a proactive conversation based on the event
   */
  async initSocket(event, resetChat = false, callValidateLogin = true) {
    const urlParams = new URLSearchParams(window.location.search);
    let converseSession;
    voiceController.init();

    if (
      window &&
      window.chatSettings &&
      window.chatSettings.endpoint
    ) {
      this.endpoint = window.chatSettings.endpoint;
    }

    if (window && window.chatSettings && window.chatSettings.path) {
      this.path = window.chatSettings.path;
    }

    if (
      window &&
      window.chatSettings &&
      window.chatSettings.masterBotID
    ) {
      this.masterBotID = window.chatSettings.masterBotID;
    }

    if (
      window &&
      window.chatSettings &&
      window.chatSettings.hasOwnProperty('checkValidateLogin')
    ) {
      this.checkValidateLogin = window.chatSettings.checkValidateLogin;
    } else {
      this.checkValidateLogin = true;
    }

    if (
      window &&
      window.chatSettings &&
      window.chatSettings.storageType
    ) {
      this.storageType = window.chatSettings.storageType;
    }

    if (urlParams.get('tokenId')) {
      this.token = urlParams.get('tokenId');
    }

    if (urlParams.get('sessionToken')) {
      this.sessionToken = urlParams.get('sessionToken');
      chatController.clearMessages();
      if (resetChat) {
        delete this.sessionToken;
      }
    }

    // make call to handleSession endpoint to set up session id in httpOnly cookies.
    // don't make the call if session id is provided in query params
    // flag to check if the greeting message has been sent to the user on web socket connection
    let getGreetings = true;
    if (!resetChat) {
      if (this.storageType && (this.storageType === 'sessionStorage')) {
        converseSession = sessionStorage.getItem(
          this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId
        );
      } else {
        converseSession = localStorage.getItem(
          this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId
        );
      }
    }
    if (converseSession) {
      converseSession = JSON.parse(converseSession);
      this.sessionToken = this.sessionToken || converseSession.sessionToken;
    }
    try {
      if (callValidateLogin && this.checkValidateLogin) {
        await validateLogin(this.token, this.sessionToken); // validate with the new session ID
      }
    } catch (e) {
      showMessage({
        type: 'error',
        message: 'Something went wrong. Please try again later.'
      });
      return;
    }
    this.socket = io(this.endpoint, {
      path: this.path,
      transports: ['websocket']
    });

    // init socket connection
    // will set a session
    this.socket.on('connect', () => {
      chatController.hideErrorMessage();

      const browserLangauge = globalization.getLanguage();
      const browserLocale = globalization.getLocale(browserLangauge);
      // socket connected
      const params = {
        input: 'welcome',
        masterBotId: this.masterBotID,
        token: this.token,
        channelLanguage : browserLangauge,
        channelLocale : browserLocale,
        sessionToken: this.sessionToken,
        messageFromClient: resetChat
      };
      try {
        if (converseSession) {
          params.reconnecting = this.sessionToken === converseSession.sessionToken;
          params.sessionToken = this.sessionToken || converseSession.sessionToken;
        }

      } catch (err) { }

      if (event) {
        // start proactive conversation if event has been passed
        params.input = event;
        params.proactive = true;
      }
      /**
       * if the greeting has not yet been sent to the client then send the welcome message when
       * socket is connected
       */
      if (getGreetings) {
        getGreetings = false;
        this.sendMessageToServer(JSON.stringify(params));
      }
    });

    this.socket.on('disconnect', () => {
      console.log(`-- socket disconnect event ...`);
      if (this.socketResetting) {
        this.socketResetting = false;
      } else {
        chatController.showErrorMessage(
          'Internet connectivity issue, reconnecting to the server'
        );
      }
    });

    this.socket.on('connect_error', (err) => { });

    // listen for incoming messages
    this.socket.on('webOut', (message) => {
      // added logic to handle escalation and variable processing during webIn processing 
      if (message.liveChat || message.processingVariable) {
        // processing is on-going if transferring to agent or there's variable decision being executed
        this.webInprocessing = true;

        // if successfully connected to an agent, may now accept new webIn mesasges
        if (message.liveChat && message.converseResponse.agentName !== 'Live Agent') {
          this.liveAgentName =  message.converseResponse.agentName;
          this.webInprocessing = false;
        }
      } else {
        // indicates that webIn processing is done in BE and can now accept new webIn mesasges
        this.webInprocessing = false;
      }

        if (
          chatController.agentAvailable !==
          message.converseResponse.agentAvailable
        ) {
          chatController.agentAvailable =
            message.converseResponse.agentAvailable;  
        }
        if (this.storageType && this.storageType === 'sessionStorage') {
          sessionStorage.setItem(
            this.SESSION_ENUM.DETECTED_LANGUAGE,
            message.converseResponse.detectedLanguage
          );
        } else {
          localStorage.setItem(
            this.SESSION_ENUM.DETECTED_LANGUAGE,
            message.detectedLanguage
          );
        }
  
        /**
         * If an incoming message is received then set the flag used for recording if greeting
         * is needed to false - useful in case of any connection issues
         * with the web socket to determine if the greeting is to be sent again
         */
        getGreetings = false;
  
        var localTheme = localStorage.getItem("theme");
        if (localTheme === 'eurobank') {
          chatController.showTypingIndicator();
          if (this.delayFlag) {
            setTimeout(() => {
              chatController.handleIncomingMessage(message);
            }, 4000);
            this.delayFlag = true;
          } else {
            chatController.handleIncomingMessage(message);
            this.delayFlag = true;
          }
        } else {
          chatController.handleIncomingMessage(message);
        }
  
        if (sessionStorage.getItem('tokenExpiry') && this.checkValidateLogin) {
          // authenticate user whenever message arrives
          validateLogin(this.token);
        }
  
        if (event) {
          // open chat window if event has been passed
          chatController.openChatWindow();
        }
    });

    this.socket.on('updateSessionToken', (sessionTokenDetails) => {
      try {
        this.sessionId = sessionTokenDetails.sessionId;
        if (this.storageType && this.storageType === 'sessionStorage') {
          sessionStorage.setItem(
            this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId,
            JSON.stringify(sessionTokenDetails)
          );
        } else {
          localStorage.setItem(
            this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId,
            JSON.stringify(sessionTokenDetails)
          );
        }
      } catch (err) { }
    });

    // Listen for event initiating CES escalation
    this.socket.on('escalationStart', (event) => {
      this.isCesEscalation = true;
      this.cesControllerInstance = new cesConnectController(event, this);

      chatController.cesInstance(this.cesControllerInstance);
      if (!this.cesControllerInstance.isAgentJoined && this.cesControllerInstance.isCustomerJoined
        && !this.isRefreshed) {
        chatController.showCESEscalationbtn();
      }
    });

    const input = document.querySelector('#user-input');
    input.addEventListener('keyup', (e) => {
      if (e.currentTarget.value.trim().length === 0) {
        document.getElementById('chat-input-send').disabled = true;
      } else {
        document.getElementById('chat-input-send').disabled = false;
      }
    });

    let typingTimer;
    input.addEventListener('keypress', (event) => {
      if (this.isCesEscalation) {
        this.typingTimer = setTimeout(() => {
          this.cesControllerInstance.sendMessage('USER_TYPING_EVENT');
        }, 500);
      }
    });

  }

  /**
   * @description Adding delay to terminate the connection to CES
   */
  sleep(delayInMS) { 
    const start = new Date().getTime(); 
    while (new Date().getTime() < start + delayInMS); 
  }

  /**
   * @description Emits the EscalationEnd event to terminate the connection to CES
   */
  disconnectionEvent() {
    this.isCesEscalation = false;
    this.cesControllerInstance = null;
    this.isRefreshed = false;

    chatController.hideCESEscalationbtn();

    // Emit EscalationEnd, and get session token from WebStorage
    this.socket.emit('EscalationEnd', {
      masterBotId: this.masterBotID,
      sessionToken: this.getSessionToken()
    });

    // will now accept webIn emits after ces disconnects
    this.webInprocessing = false;
  }

  /**
   * Sends message to server
   * @param {Object} message
   */
  sendMessageToServer(message) {
    // only allow webIn processes if there's no active processing or an agent is actively connected
    if (!this.webInprocessing || this.liveAgentName) {
      this.delayFlag = false;
      this.socket.emit('webIn', {
        message: message,
        sourceField: window.location.href
      });
      this.webInprocessing = true;
      // scroll to bottom whenever sending a message
      chatController.scrollToBottom();
    }
  }

  /**
  * Sends open btn link to server
  */
  setLinkInParam(link, uniqueKey = '') {
    let converseSession;
    const params = {
      input: link,
      masterBotId: this.masterBotID,
      token: this.token,
      sessionToken: this.sessionToken,
      messageFromClient: true,
      stepType: 'openLink',
      uniqueKey: uniqueKey
    };
    try {
      if (this.storageType && this.storageType === 'sessionStorage') {
        converseSession = sessionStorage.getItem(
          this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId,
        );
      } else {
        converseSession = localStorage.getItem(
          this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId
        );
      }
    } catch (err) { }

    if (converseSession) {
      converseSession = JSON.parse(converseSession);
      params.sessionToken = converseSession.sessionToken;
    }
    this.sendMessageToServer(JSON.stringify(params));
  };

  /**
   * Sends the users input to the chat server
   * @param {String} text
   * @param form submitted form data
   */
  sendUserMessageToServer(text, form, dynamicValue) {
    let userMsg;
    let converseSession;
    var localTheme = localStorage.getItem("theme");
    if (!text) {
      userMsg = chatController.shadowRootDoc.querySelector(
        '#user-input'
      ).value;
      chatController.shadowRootDoc.querySelector(
        '#user-input'
      ).value = '';

      if (localTheme === 'eurobank') {
        // regex pattern to identify whiteSpace-only input by user and replace it by empty string
        userMsg = userMsg.replace(/^\s+/, '').replace(/\s+$/, '');
      }
    } else {
      userMsg = text;
    }

    if (userMsg) {
      // if user message was added by datepicker, then remove it from messages container
      const datepicker = chatController.shadowRootDoc.querySelector(
        '#datepicker'
      );
      if (datepicker) datepicker.parentNode.removeChild(datepicker);

      chatController.displayMessageOnChat(
        false,
        userMsg.name || userMsg
      );

      // Show typing ellipsis only if not CES Escalation. CES has its own indicator.
      if (!this.isCesEscalation) chatController.showTypingIndicator();

      const browserLangauge = globalization.getLanguage();
      const browserLocale = globalization.getLocale(browserLangauge);
      const params = {
        input: userMsg.value || userMsg,
        masterBotId: this.masterBotID,
        token: this.token,
        channelLanguage : browserLangauge,
        channelLocale : browserLocale,
        sessionToken: this.sessionToken,
        messageFromClient: true
      };
      if (dynamicValue) {
        params.input = dynamicValue;
      }
      try {
        if (this.storageType && this.storageType === 'sessionStorage') {
          converseSession = sessionStorage.getItem(
            this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId,
          );
        } else {
          converseSession = localStorage.getItem(
            this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId
          );
        }
      } catch (err) { }

      if (converseSession) {
        converseSession = JSON.parse(converseSession);
        params.sessionToken = converseSession.sessionToken;
        params.sessionId = this.sessionId;
      }

      if (form) params.form = form;

      if (this.isCesEscalation) {
        this.cesControllerInstance.sendMessage(params.input);
      } else {
        this.sendMessageToServer(JSON.stringify(params));
      }
    }
  }

  /**
   * @description responsible for resetting the socket connection
   * @param data (optional) - contains optional parameters to initiate new socket connection
   */
  async resetConversation(data = {}) {
    this.webInprocessing = false;
    this.liveAgentName = undefined;
    const previousSessionId = localStorage.getItem('previousSessionId');
    chatController.hideCESEscalationbtn();
    chatController.clearMessages();

    if (this.isCesEscalation) {
      this.isRefreshed = true;
      this.cesControllerInstance.handleEndChat();
    }

    if (this.storageType && this.storageType === 'sessionStorage') {
      sessionStorage.removeItem(this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId);
      sessionStorage.removeItem(this.SESSION_ENUM.MESSAGES);
    } else {
      const sessionId = this.sessionId ? this.sessionId : previousSessionId;
      localStorage.removeItem('previousSessionId');
      localStorage.removeItem(this.SESSION_ENUM.CONVERSE_SESSION+sessionId);
      localStorage.removeItem(this.SESSION_ENUM.MESSAGES);
    }
    this.sessionToken = undefined;
    if (!this.isResettingConversion) {
      this.isResettingConversion = true;
      if (data.resetChat === undefined) data.resetChat = true;

      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.get('sessionToken') && !data.resetButtonClicked) {
        data.resetChat = false;
      }

      this.socketResetting = true;
      if (this.socket) await this.socket.disconnect();
      await this.initSocket(data.event, data.resetChat);
      this.isResettingConversion = false;
    }
  }

  /**
   * @description responsible for adding time to session for bot message timestamp
   * @param time - contains parameter to handle session time
   */
  addTimeToSession(time) {
    let sessionMessages;
    try {
      if (this.storageType && this.storageType === 'sessionStorage') {
        sessionMessages = JSON.parse(
          sessionStorage.getItem(this.SESSION_ENUM.MESSAGES)
        );
      } else {
        sessionMessages = JSON.parse(
          localStorage.getItem(this.SESSION_ENUM.MESSAGES)
        );
      }
    } catch (err) { }

    try {
      if (sessionMessages) {
        for (var i = 0; i < sessionMessages.length; i++) {
          if (sessionMessages[i].isAgentMsg === true) {
            if (sessionMessages[i].hasOwnProperty('time')) {
              //do nothing
            } else {
              if (
                sessionMessages[i].content.response[0] ===
                'Was your experience today helpful?'
              ) {
                //do nothing
              } else {
                sessionMessages[i].time = time;
              }
            }
          }
        }

        // update session
        if (this.storageType && this.storageType === 'sessionStorage') {
          sessionStorage.setItem(
            this.SESSION_ENUM.MESSAGES,
            JSON.stringify(sessionMessages)
          );
        } else {
          localStorage.setItem(
            this.SESSION_ENUM.MESSAGES,
            JSON.stringify(sessionMessages)
          );
        }
      } else {
        // first message when session has been created
        // create new array of converseMessages in the session
        if (this.storageType && this.storageType === 'sessionStorage') {
          sessionStorage.setItem(
            this.SESSION_ENUM.MESSAGES,
            JSON.stringify([message])
          );
        } else {
          localStorage.setItem(
            this.SESSION_ENUM.MESSAGES,
            JSON.stringify([message])
          );
        }
      }
    } catch (err) { }
  }

  /**
   * functions checks if the escalation provider is CES
   * @returns true if escalation provider is CES
   */
  checkCesEscalation() {
    return this.isCesEscalation;
  }

  /**
   * functions checks if the escalation is refreshed
   * @returns true if escalation is refreshed
   */
  checkIsRefreshed() {
    return this.isRefreshed;
  }

  /**
   * @description - Function that will display CES related messages
   * @param {String} messageSender - the sender of the message
   * @param {String} message - the message to be displayed
   * @param {Boolean} isTyping - is agent typing or not
   * @param {String} agentName - display name for agent
   * @param {String} role - participant role
   * @param {String} triggeringEvent = String indicating which socket event from CES triggered the function
   */
  async displayCeRelatedMessages(messageSender, message, agentName = '', role = '', content = '', eventName = '') {
    const userMessage = messageSender === 'user' ? message : undefined;
    console.log('displayCeRelatedMessages arguments: ', arguments);   // DEBUG: display args

    // scroll to bottom whenever sending a message
    chatController.scrollToBottom();
    chatController.hideAgentTypingIndicator();

    if (eventName === this.constants.eventNames.onEventTyping) {
      return chatController.showAgentTypingIndicator();
    }

    if (this.cesControllerInstance) {
      if (this.cesControllerInstance.isAgentJoined) {
        chatController.hideCESEscalationbtn();
      }
  
      if (!this.cesControllerInstance.isAgentJoined && this.cesControllerInstance.isCustomerJoined
        && !this.isRefreshed) {
        chatController.showCESEscalationbtn();
      }
    }

    if (role !== 'CUSTOMER' && this.constants.cesEventsDisplayedOnChat.includes(eventName) && !this.isRefreshed) {
      let isAgentMsg = /agent/.test(messageSender);

      this.cesAgentTyping = message === AGENT_TYPING_EVENT_MESSAGE ? true : false;
      chatController.agentAvailable = this.cesAgentTyping;

      // Initialize response object.
      const responseObject = {
        converseResponse: {
          response: [],
          responseConfig: {}
        }
      };

      // Handle messages according to the messageSender.
      let chatMessage = this.constants.sendersUsingMessageField.includes(messageSender) ? message : content;
      if (typeof chatMessage === 'string') {
        message = this.formatMessage(chatMessage, agentName, role, content);
        responseObject.converseResponse.response.push(message);
      } else if (chatMessage instanceof Array) {
        chatMessage.forEach(async (msg) => {
          message = this.formatMessage(msg, agentName, role);
          responseObject.converseResponse.response.push(message);
        });
      }

      // Display response node only if there's a response.
      if (responseObject.converseResponse.response.length > 0)
        chatController.handleIncomingMessage(responseObject);

      // Emit EscalationLog and get sessionToken from WebStorage
      await this.socket.emit('EscalationLog', {
        sender: {
          Type: messageSender,
          Name: agentName ? agentName : undefined
        },
        message: message,
        masterBotId: this.masterBotID,
        sessionToken: this.getSessionToken()
      });
    }

    if (messageSender === 'user') {
      // Emit EscalationLog and get sessionToken from WebStorage
      await this.socket.emit('EscalationLog', {
        sender: {
          Type: messageSender,
          Name: agentName ? agentName : undefined
        },
        message: userMessage,
        masterBotId: this.masterBotID,
        sessionToken: this.getSessionToken()
      });
    }
  }

  /**
   * @description - Formats a given string by replacing {0}, {1}, etc patterns within a given string response.
   * @param {String} responseString The response text to be formatted, then returned to chat UI.
   * @param  {...any} args Replacement values to be inserted into responseString.
   * @returns Returns the formatted string, ready to be passed to displaying functions.
   */
  formatMessage(responseString, ...args) {
    try {
      let formattedResponse = '';

      if (args instanceof Array) {
        args.forEach((item, index) => {
          let pattern = new RegExp(`\\{${index}\\}`, 'g');
          formattedResponse = responseString.replace(pattern, item);
          responseString = formattedResponse;
        });
      } else {
        formattedResponse = responseString.replace(/\{0\}/g, args);
      }

      return formattedResponse;
    } catch (error) {
      chatController.showErrorMessage(`Error encountered while formatting message... ${JSON.stringify(error)}`);
    }
  }

  /**
   * @description getSessionToken gets the session token for the current conversation stored in the WebStorage.
   * @returns Returns the session token
   */
  getSessionToken() {
    let converseSession;

    if (this.storageType && (this.storageType === 'sessionStorage')) {
      converseSession = sessionStorage.getItem(
        this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId
      );
    } else {
      converseSession = localStorage.getItem(
        this.SESSION_ENUM.CONVERSE_SESSION+this.sessionId
      );
    }

    converseSession = JSON.parse(converseSession);

    return converseSession.sessionToken;
  }
}

const socketController = new SocketController();

/**
 * @description Handles getting the browser locale and language.
 */

class Globalization {
  list = ['ar', 'de', 'el', 'en', 'es', 'fr', 'it', 'ja', 'pt','zh-CN'];
  constructor() {}

  /**
  * @description returns the browser locale.
  */
  getLocale(browserLanguage) {
    let locales = navigator.languages.map((locale) =>
      locale,
    );
    for (let i = 0; i < locales.length; i++) {
      if (locales[i].startsWith(browserLanguage + '-')) {
          return locales[i];
      }
    }
    return null; // or undefined
  }
  

  /**
  * @description return the browser language.
  */
  getLanguage(defaultLanguage = null) {
    let localeLanguage;
    localeLanguage = navigator.languages.map((locale) =>{
      if (locale === 'zh-CN') {
        return locale;
      } else {
        return locale.split("-")[0]
      }
    }
     

    );
    for (let i = 0; i < localeLanguage.length; i++) {
      if (!this.list.includes(localeLanguage[i])) {
        if (defaultLanguage)
          return defaultLanguage;
        return null;
      } else {
        return localeLanguage[i];
      }
    }
    return 'en';
  }

  /**
   * @description responsible for fetching the translations of the labels
   */
  async fetchTranslations(browserLanguage, defaultLanguage) {
    let response;
    let res = {};
    try {
      const localBaseUrl = window.location.href.split('?')[0].replace(/\/?$/, '/');
      response = await fetch(`${localBaseUrl}assets/i18n/${browserLanguage}.json`);
      res = await response.json();
      return res;
    } catch (error) { // No language found hence fetching the default language
      defaultLanguage = defaultLanguage ? defaultLanguage : 'en';
      response = await fetch(`${localBaseUrl}assets/i18n/${defaultLanguage}.json`);
      res = await response.json();
      return res;
    }
  }
  
}

const globalization = new Globalization();
(function(window) {
  // internal: same as jQuery.extend(true, args...)
  var extend = function() {
    var target = arguments[0],
      sources = [].slice.call(arguments, 1);
    for (var i = 0; i < sources.length; ++i) {
      var src = sources[i];
      
      for (let key in src) {
        var val = src[key];
        target[key] =
          typeof val === 'object'
            ? extend(
                typeof target[key] === 'object' ? target[key] : {},
                val
              )
            : val;
      }
    }
    return target;
  };

  var WORKER_FILE = {
    wav: 'WebAudioRecorderWav.min.js'
  };

  // default configs
  var CONFIGS = {
    workerDir: '/', // worker scripts dir (end with /)
    numChannels: 2, // number of channels
    encoding: 'wav', // encoding (can be changed at runtime)

    // runtime options
    options: {
      timeLimit: 300, // recording time limit (sec)
      encodeAfterRecord: false, // process encoding after recording
      progressInterval: 1000, // encoding progress report interval (millisec)
      bufferSize: undefined, // buffer size (use browser default)

      // encoding-specific options
      wav: {
        mimeType: 'audio/wav'
      },
      ogg: {
        mimeType: 'audio/ogg',
        quality: 0.5 // (VBR only): quality = [-0.1 .. 1]
      },
      mp3: {
        mimeType: 'audio/mpeg',
        bitRate: 160 // (CBR only): bit rate = [64 .. 320]
      }
    }
  };

  // constructor
  var WebAudioRecorder = function(sourceNode, configs) {
    extend(this, CONFIGS, configs || {});
    this.context = sourceNode.context;
    if (this.context.createScriptProcessor == null)
      this.context.createScriptProcessor = this.context.createJavaScriptNode;
    this.input = this.context.createGain();
    sourceNode.connect(this.input);
    this.buffer = [];
    this.initWorker();
  };

  // instance methods
  extend(WebAudioRecorder.prototype, {
    isRecording: function() {
      return this.processor != null;
    },

    setEncoding: function(encoding) {
      if (this.isRecording())
        this.error(
          'setEncoding: cannot set encoding during recording'
        );
      else if (this.encoding !== encoding) {
        this.encoding = encoding;
        this.initWorker();
      }
    },

    setOptions: function(options) {
      if (this.isRecording())
        this.error('setOptions: cannot set options during recording');
      else {
        extend(this.options, options);
        this.worker.postMessage({
          command: 'options',
          options: this.options
        });
      }
    },

    startRecording: function() {
      if (this.isRecording())
        this.error('startRecording: previous recording is running');
      else {
        var numChannels = this.numChannels,
          buffer = this.buffer,
          worker = this.worker;
        this.processor = this.context.createScriptProcessor(
          this.options.bufferSize,
          this.numChannels,
          this.numChannels
        );
        this.input.connect(this.processor);
        this.processor.connect(this.context.destination);
        this.processor.onaudioprocess = function(event) {
          for (var ch = 0; ch < numChannels; ++ch)
            buffer[ch] = event.inputBuffer.getChannelData(ch);
          worker.postMessage({ command: 'record', buffer: buffer });
        };
        this.worker.postMessage({
          command: 'start',
          bufferSize: this.processor.bufferSize
        });
        this.startTime = Date.now();
      }
    },

    recordingTime: function() {
      return this.isRecording()
        ? (Date.now() - this.startTime) * 0.001
        : null;
    },

    cancelRecording: function() {
      if (this.isRecording()) {
        this.input.disconnect();
        this.processor.disconnect();
        delete this.processor;
        this.worker.postMessage({ command: 'cancel' });
      } else this.error('cancelRecording: no recording is running');
    },

    finishRecording: function() {
      if (this.isRecording()) {
        this.input.disconnect();
        this.processor.disconnect();
        delete this.processor;
        this.worker.postMessage({ command: 'finish' });
      } else this.error('finishRecording: no recording is running');
    },

    cancelEncoding: function() {
      if (this.options.encodeAfterRecord)
        if (this.isRecording())
          this.error('cancelEncoding: recording is not finished');
        else {
          this.onEncodingCanceled(this);
          this.initWorker();
        }
      else this.error('cancelEncoding: invalid method call');
    },

    initWorker: function() {
      if (this.worker != null) this.worker.terminate();
      this.onEncoderLoading(this, this.encoding);
      this.worker = new Worker(
        this.workerDir + WORKER_FILE[this.encoding]
      );
      var _this = this;
      this.worker.onmessage = function(event) {
        var data = event.data;
        switch (data.command) {
          case 'loaded':
            _this.onEncoderLoaded(_this, _this.encoding);
            break;
          case 'timeout':
            _this.onTimeout(_this);
            break;
          case 'progress':
            _this.onEncodingProgress(_this, data.progress);
            break;
          case 'complete':
            _this.onComplete(_this, data.blob);
            break;
          case 'error':
            _this.error(data.message);
        }
      };
      this.worker.postMessage({
        command: 'init',
        config: {
          sampleRate: this.context.sampleRate,
          numChannels: this.numChannels
        },
        options: this.options
      });
    },

    error: function(message) {
      this.onError(this, 'WebAudioRecorder.js:' + message);
    },

    // event handlers
    onEncoderLoading: function(recorder, encoding) {},
    onEncoderLoaded: function(recorder, encoding) {},
    onTimeout: function(recorder) {
      recorder.finishRecording();
    },
    onEncodingProgress: function(recorder, progress) {},
    onEncodingCanceled: function(recorder) {},
    onComplete: function(recorder, blob) {
      recorder.onError(
        recorder,
        'WebAudioRecorder.js: You must override .onComplete event'
      );
    },
    onError: function(recorder, message) {
      console.log(message);
    }
  });

  window.WebAudioRecorder = WebAudioRecorder;
})(window);

/**
 * Browser Shims
 */
URL = window.URL || window.webkitURL;
const BrowserAudioContext =
  window.AudioContext || window.webkitAudioContext;

/**
 * Configurations
 */
const recordingConstraints = { audio: true, video: false };
const numOfChannels = 1;
const encodingType = 'wav'; // we need the audio to be in wav format
const sampleRate = 16000; // the sample rate should be 16000

/**
 * recording variables
 * recordStream: will hold the stream from getUserMedia()
 * recorder: this will hold WebAudioRecorder object
 * inputStream: MediaStreamAudioSourceNode
 */
var audioContext;
var recordStream;
var recorder;
var inputStream;

// add an event to the record button
const recordButton = document.getElementById('recordButton');
if (recordButton && navigator.mediaDevices) {
  recordButton.addEventListener('click', startRecording);
} else if (!navigator.mediaDevices) {
  console.warn(
    `Your browser doesn't have the support for media devices.`,
    `Please upgrade or change the browser to access media devices`
  );
}

// add an event to the stop button
const stopButton = document.getElementById('stopButton');
if (stopButton) stopButton.addEventListener('click', stopRecording);

/**
 * This function is called when we want to initiate a recording. It will get the user audio stream and process it as required
 */
function startRecording() {
  console.log('startRecording() called');

  navigator.mediaDevices
    .getUserMedia(recordingConstraints)
    .then(function (stream) {
      console.log('able to successfully get the user media stream.');

      /*
       * create an audio context for processing the audio
       */
      audioContext = new BrowserAudioContext({
        sampleRate
      });

      // log the format
      console.log(
        `Format: ${numOfChannels} channel ${encodingType}@${
          audioContext.sampleRate / 1000
        }kHz`
      );

      // assign to recordStream for later use
      recordStream = stream;

      /* use the stream */
      inputStream = audioContext.createMediaStreamSource(stream);

      recorder = new WebAudioRecorder(inputStream, {
        workerDir: 'dist/js/', // must end with slash. This is the base location of the file
        encoding: encodingType,
        numChannels: numOfChannels,
        onEncoderLoading: function (recorder, encoding) {
          console.log('Loading ' + encoding + ' encoder...');
        },
        onEncoderLoaded: function (recorder, encoding) {
          console.log(encoding + ' encoder loaded');
        }
      });

      recorder.onComplete = function (recorder, blob) {
        console.log('Encoding complete');
        stopRecording();
        updateAudioElement(blob);
      };

      recorder.setOptions({
        timeLimit: 5, // we need the audio to be max 5 seconds
        encodeAfterRecord: true
      });

      // start the recording process
      recorder.startRecording();

      console.log('Recording started');
    })
    .catch(function (err) {
      console.log(err);
      // enable the record button if getUSerMedia() fails
      recordButton.disabled = false;
      stopButton.disabled = true;
    });

  // disable the record button
  recordButton.disabled = true;
  stopButton.disabled = false;
}

/**
 * @description The function stops the audio recording and cleans up
 */
function stopRecording() {
  console.log('stopRecording() called');

  // stop microphone access
  recordStream.getAudioTracks()[0].stop();

  // disable the stop button
  stopButton.disabled = true;
  recordButton.disabled = false;

  if (recorder.isRecording()) {
    // tell the recorder to finish the recording (stop recording + encode the recorded audio)
    recorder.finishRecording();
  }

  console.log('Recording stopped');
}

/**
 * @description The function updates the audio player with the recorded audio and displays it so the user can listen to the audio before enrolling
 * @param {audioBlob} blob
 */
function updateAudioElement(blob) {
  var url = URL.createObjectURL(blob);
  var au = document.getElementById('player');

  // add controls to the <audio> element and update the url
  au.controls = true;
  // attach blob to au object so it can be retrieved later
  au.blob = blob;
  au.src = url;
  // display the audio element
  au.className = '';
}

/**
 * @description the function resets the enrollment controls section. Hiding the audio element and removing the blob
 */
function resetEnrollmentControls() {
  const au = document.getElementById('player');

  au.controls = false;
  // remove blob from au object
  au.blob = undefined;
  // hide the audio element
  au.className = 'hidden';
}



// pure base URL with trailing slash at the end and without query params
const localBaseUrl = window.location.href
  .split('?')[0]
  .replace(/\/?$/, '/');
const localEndpoints = {
  register: localBaseUrl.replace('3000', '3040') + 'register',
  login: localBaseUrl.replace('3000', '3040') + 'login',
  getUser: localBaseUrl.replace('3000', '3040') + 'getUser',
  logout: localBaseUrl.replace('3000', '3040') + 'logout',
  validateLogin:
    localBaseUrl.replace('3000', '3040') + 'validateLogin',
  extendUserToken:
    localBaseUrl.replace('3000', '3040') + 'extendUserToken',
  updateUser: localBaseUrl.replace('3000', '3040') + 'updateUser',
  addPhoneNumber:
    localBaseUrl.replace('3000', '3040') + 'addPhoneNumber',
  deleteUser: localBaseUrl.replace('3000', '3040') + 'deleteUser',
  createVoiceBiometricsProfile:
    localBaseUrl.replace('3000', '3040') +
    'createVoiceBiometricsProfile',
  createVoiceBiometricsEnrollment:
    localBaseUrl.replace('3000', '3040') +
    'form/createVoiceBiometricsEnrollment',
    healthCheck: localBaseUrl.replace('3000', '3040') + 'healthcheck',
};

// const urlParams = new URLSearchParams(window.location.search);
const requestsInProgressObj = {};
const requestsInProgressProxyHandler = {
  set: function (target, key, value) {
    target[key] = value;
    if (key !== 'extendSession' && value === true) {
      document.getElementById('loading-overlay').className = '';
    } else if (
      value === false &&
      !Object.values(target).includes(true)
    ) {
      document.getElementById('loading-overlay').className = 'hidden';
    }
    return true;
  }
};
const requestsInProgress = new Proxy(
  requestsInProgressObj,
  requestsInProgressProxyHandler
);

const SESSION_ENUM = {
  MESSAGES: 'converseMessages',
  CONVERSE_SESSION: 'converseSession',
  X_CSRF_TOKEN: 'x-csrf-token'
};

const messageQueue = [];
let isMessageActive = false;
let expiryTimerActive = false;
let userData = {};
let storageType;

if (
  window &&
  window.chatSettings &&
  window.chatSettings.storageType
) {
  storageType = window.chatSettings.storageType;
}
//ends here, custom theming


/**
 * Toggles sidebar
 */
function toggleSidebar() {
  const elem = document.getElementById('sidebar');
  elem.classList = elem.classList.value === '' ? 'active' : '';
  let sidebarBtn = document.getElementById('sidebar-button');
  sidebarBtn.classList =
    sidebarBtn.classList.value === '' ? 'active' : '';
}

/**
 * hides overlay and all windows
 */
function hideWindows() {
  document.getElementById('overlay').className = 'hidden';
  document.getElementById('login-form').className = 'hidden';
  document.getElementById('register-form').className = 'hidden';
  document.getElementById('manage-account-form').className = 'hidden';
  document.getElementById('manage-biometrics-form').className =
    'hidden';
  document.getElementById('tab-window').className = 'hidden';
  clearInputFields();
}

/**
 * Clears in put fields in forms
 */
function clearInputFields() {
  document
    .getElementById('login-form')
    .querySelectorAll('input')
    .forEach((field) => (field.value = ''));
  document
    .getElementById('register-form')
    .querySelectorAll('input')
    .forEach((field) => (field.value = ''));
}

/**
 * handles the click on the button responsible for starting proactive conversation
 */
function startProactiveConversation() {
  // get the selected event
  const eventDropdown = document.getElementById(
    'selectEventDropdown'
  );
  const selectedEvent =
    eventDropdown.options[eventDropdown.selectedIndex].value;
  // reset the already existing conversation if it exists and start the proactive conversation based on the selected event
  socketController.resetConversation({ event: selectedEvent });
}

/**
 * opens overlay and login form
 */
function openLoginForm() {
  document.getElementById('overlay').className = '';
  document.getElementById('login-form').className = '';
}

/**
 * Handles login request
 * @param e - click event
 */
function handleLogin(e) {
  if (e.preventDefault) e.preventDefault();
  let converseSession;
  if (storageType && (storageType === 'sessionStorage')) {
    converseSession = sessionStorage.getItem(
      SESSION_ENUM.CONVERSE_SESSION+socketController.sessionId
    );
  } else {
    converseSession = localStorage.getItem(
      SESSION_ENUM.CONVERSE_SESSION+socketController.sessionId
    );
  }
  converseSession = JSON.parse(converseSession);
  const formData = {
    userEmail: e.target.querySelector('#login-email').value,
    userPassword: e.target.querySelector('#login-password').value,
    sessionToken: converseSession
      ? converseSession.sessionToken
      : null
  };
  let emailIdPattern = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
  if (!formData.userEmail.match(emailIdPattern)) {
    showMessage({
      type: 'error',
      message: 'Invalid Email ID'
    });
  } else {
    requestsInProgress.login = true;
    // calling healthcheck url to get csrf token from response header
    var tryout = new XMLHttpRequest();
    tryout.open("GET", localEndpoints.healthCheck, true);
    tryout.withCredentials = true;
    tryout.setRequestHeader("x-csrf-token", "fetch");
    tryout.send(null);
    tryout.onreadystatechange = function () {
    if(tryout.readyState === 4) {
      var csrfToken = tryout.getResponseHeader("x-csrf-token");
      sessionStorage.setItem(SESSION_ENUM.X_CSRF_TOKEN, csrfToken);
      const xhr = new XMLHttpRequest();
      xhr.open('POST', localEndpoints.login, true);
      xhr.withCredentials = true;
      xhr.setRequestHeader('Content-Type', 'application/json');
      xhr.setRequestHeader('x-csrf-token', csrfToken);
      xhr.onreadystatechange = function () {
      if (xhr.readyState === 4) {
        requestsInProgress.login = false;
        const response = JSON.parse(xhr.response);
        if (response.status === 200) {
          hideWindows();
          showMessage({
            type: 'success',
            message: 'User authenticated successfully'
          });
          sessionStorage.setItem('tokenExpiry', response.tokenExpiry);
          sessionStorage.setItem(
            'userFirstName',
            response.userFirstName
          );
          socketController.token = response.token;
          checkUserAuthentication();
        } else {
          showMessage({
            type: 'error',
            message: 'Failed to authenticate!\nCheck console for errors'
          });
        }
      }
    };
    xhr.send(
      JSON.stringify({
        path: document.getElementById('userAuthPath').value,
        data: formData
      })
    );
    }
  }
 }
}

/**
 * opens overlay and register form
 */
function openRegisterForm() {
  document.getElementById('overlay').className = '';
  document.getElementById('register-form').className = '';
}

/**
 * Handles register request
 * @param e - click event
 */
function handleRegister(e) {
  if (e.preventDefault) e.preventDefault();

  const formData = {
    userFirstName: e.target.querySelector('#firstName').value,
    userLastName: e.target.querySelector('#lastName').value,
    userEmail: e.target.querySelector('#register-email').value,
    userPassword: e.target.querySelector('#register-password').value,
    userPin: e.target.querySelector('#pin').value
  };

  //client side validation
  const registerForm = document.getElementById('register-form');
  var inputFields = registerForm.getElementsByTagName('input');
  var toArray = function (c) {
    return Array.prototype.slice.call(c);
  };
  var inputFieldsArr = toArray(inputFields);
  const errorMsgsCollection = [];
  inputFieldsArr.forEach((input) => {
    if (input.value == '' || input.value == null) {
      let str =
        'Please enter your ' +
        input.previousElementSibling.textContent +
        '.';
      errorMsgsCollection.push(str);
    } else if (input.type == 'email') {
      let emailIdPattern = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
      let emailInput = input.value;
      if (!emailInput.match(emailIdPattern))
        errorMsgsCollection.push('The Email Id is invalid');
    } else if (input.type == 'text') {
        let textPattern = /^[a-zA-Z ]+$/;
        if (!input.value.match(textPattern))
          errorMsgsCollection.push('Only Alphabet are allowed for name field');
    } else if (input.type == 'number') {
      let pinPattern = /^[0-9]+$/;
      if (!input.value.match(pinPattern))
        errorMsgsCollection.push('Only numbers are allowed for pin field');
      }
  });
  if (errorMsgsCollection.length) {
    errorMsgsCollection.join(',');
    showMessage({
      type: 'error',
      message: errorMsgsCollection
    });
  } else {
    requestsInProgress.register = true;
    // calling healthcheck url to get csrf token from response header
    var tryout = new XMLHttpRequest();
    tryout.open("GET", localEndpoints.healthCheck, true);
    tryout.withCredentials = true;
    tryout.setRequestHeader("x-csrf-token", "fetch");
    tryout.send(null);
    tryout.onreadystatechange = function () {
    if(tryout.readyState === 4) {
      var csrfToken = tryout.getResponseHeader("x-csrf-token");
      sessionStorage.setItem(SESSION_ENUM.X_CSRF_TOKEN, csrfToken);
      const xhr = new XMLHttpRequest();
      xhr.open('POST', localEndpoints.register, true);
      xhr.withCredentials = true;
      xhr.setRequestHeader('Content-Type', 'application/json');
      xhr.setRequestHeader('x-csrf-token', csrfToken);
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          requestsInProgress.register = false;
          const response = JSON.parse(xhr.response);          

          if (response.userId) {
            hideWindows();
            showMessage({
              type: 'success',
              message: 'User registered successfully'
            });
          } else {
            showMessage({
              type: 'error',
              message:
                'Failed to create user!\nCheck console for errors'
            });
          }
        }
      };
      xhr.send(
        JSON.stringify({
          path: document.getElementById('userManagementPath').value,
          data: formData
        })
      );
    }
  }
  }
}

/**
 * Handles user sign out request
 */
function signOut() {
  requestsInProgress.login = true;
  let converseSession;
  if (storageType && (storageType === 'sessionStorage')) {
    converseSession = sessionStorage.getItem(
      SESSION_ENUM.CONVERSE_SESSION+socketController.sessionId
    );
  } else {
    converseSession = localStorage.getItem(
      SESSION_ENUM.CONVERSE_SESSION+socketController.sessionId
    );
  }
  converseSession = JSON.parse(converseSession);
  const formData = {
    sessionToken: converseSession
      ? converseSession.sessionToken
      : null
  };
  const xhr = new XMLHttpRequest();
  xhr.open('POST', localEndpoints.logout, true);
  xhr.withCredentials = true;
  xhr.setRequestHeader('Content-Type', 'application/json');
  var csrfToken = sessionStorage.getItem(SESSION_ENUM.X_CSRF_TOKEN);
  xhr.setRequestHeader('x-csrf-token', csrfToken);
  xhr.onreadystatechange = function () {
    if (xhr.readyState === 4) {
      requestsInProgress.login = false;
      // Clear session storage, converse Session and message history
      clearLoginAndMessages();
      socketController.token = undefined;
      showMessage({
        type: 'success',
        message: 'User Logged out'
      });
    }
  };
  xhr.send(
    JSON.stringify({
      path: document.getElementById('userAuthPath').value,
      data: formData
    })
  );
}

/**
 * Handles login validations
 */
async function validateLogin(token, sessionToken) {
  try {
    var tryout = new XMLHttpRequest();
    tryout.open("GET", localEndpoints.healthCheck, true);
    tryout.withCredentials = true;
    tryout.setRequestHeader("x-csrf-token", "fetch");
    tryout.send(null);
    tryout.onreadystatechange = async function () {
      if(tryout.readyState === 4) {
        var csrfToken = tryout.getResponseHeader("x-csrf-token");
        sessionStorage.setItem(SESSION_ENUM.X_CSRF_TOKEN, csrfToken);
        var userauthPath = document.getElementById('userAuthPath')
          ? document.getElementById('userAuthPath').value
          : window.chatSettings.userAuthPath;
        const response = await fetch(localEndpoints.validateLogin, {
          method: 'POST',
          credentials: 'include',
          headers: {
            'Content-Type': 'application/json',
            'x-csrf-token': csrfToken
          },
          body: JSON.stringify({
            path: userauthPath,
            data: {
              token,
              sessionToken
            }
          })
        });
        if (response.status === 200) {
          // const data = await response.json();
          checkUserAuthentication();
        } else if (response.status === 401) {
          // Clear session storage, converse Session and message history
          clearLoginAndMessages(false);
          showMessage({
            type: 'error',
            message: 'Your session has expired'
          });
        } else if (response.status === 204) {
          // user is not logged in - no change
        } else {
          clearLoginAndMessages(false);
        }
      }
    }
  } catch (error) {
    console.log(error);
  }
}

/**
 * Clears session storage containing login details, also clears messages
 */
function clearLoginAndMessages(callValidateLogin = true) {
  if (storageType && (storageType === 'sessionStorage')) {
    sessionStorage.removeItem(SESSION_ENUM.CONVERSE_SESSION+socketController.sessionId);
    sessionStorage.removeItem(SESSION_ENUM.MESSAGES);
  } else {
    localStorage.removeItem(SESSION_ENUM.CONVERSE_SESSION+socketController.sessionId);
    localStorage.removeItem(SESSION_ENUM.MESSAGES);
  }
  // Clear session storage
  sessionStorage.clear();
  if (socketController.socket) {
    socketController.socketResetting = true;
    socketController.socket.disconnect();
    socketController.initSocket(
      undefined,
      undefined,
      callValidateLogin
    );
  }
  chatController.clearMessages();
  const welcomeMsg = document.getElementById('welcome-msg');
  if (welcomeMsg) {
    welcomeMsg.innerText = '';
    welcomeMsg.className = 'hidden';
  }
  if (document.querySelector('.options-dropdown.not-authorised')) {
    document
    .querySelector('.options-dropdown.not-authorised')
    .classList.remove('hidden');
  }
  if (document
    .querySelector('.options-dropdown.authorised')) {
      document
      .querySelector('.options-dropdown.authorised')
      .classList.add('hidden');
    }
}

var form = document.getElementById('login-form');
if (form) {
  if (form.attachEvent) {
    form.attachEvent('submit', handleLogin);
  } else {
    form.addEventListener('submit', handleLogin);
  }
}

var form = document.getElementById('register-form');
if (form) {
  if (form.attachEvent) {
    form.attachEvent('submit', handleRegister);
  } else {
    form.addEventListener('submit', handleRegister);
  }
}

var form = document.getElementById('manage-account-form');
if (form) {
  if (form.attachEvent) {
    form.attachEvent('submit', handleUpdateUser);
  } else {
    form.addEventListener('submit', handleUpdateUser);
  }
}

var form = document.getElementById('manage-biometrics-form');
if (form) {
  if (form.attachEvent) {
    form.attachEvent('submit', handleBiometricsForm);
  } else {
    form.addEventListener('submit', handleBiometricsForm);
  }
}

/**
 * validating sidebar config value
 * @param key - config key
 * @param value - config value
 */
function validateInputs(key,value)
{
  const regexId = /^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$/;
  const regexStr = /^[a-zA-Z ]+$/;
  const regexSocket = /^[\/a-zA-Z0-9.-]+$/;
  const regexUrl = /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}[\.]{0,1}[a-zA-Z0-9()]{0,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)$/;
  var valid = true;
  if( value.length > 10000) {
    valid = false;
  } else {
    switch (key)  {
      case 'channelAdaptorPath': valid = regexUrl.test(value); break;
      case 'endpoint': valid = regexUrl.test(value); break;
      case 'path': valid = regexSocket.test(value); break;
      case 'masterBotID': valid = regexId.test(value); break;
      case 'userAuthPath': valid = regexUrl.test(value); break;
      case 'userManagementPath': valid = regexUrl.test(value); break;
      case 'voiceBiometricsPath': valid = regexUrl.test(value); break;
      case 'chatbotName': valid = regexStr.test(value); break;
      case 'headerTitle': valid = regexStr.test(value); break;
      default: valid = false; break;
    }
  }
  return valid;
}

/**
 * updates sidebar config value
 * @param key - config key
 * @param value - config value
 * @param reload - reloads the browser when value is changed
 */
function updateValue(key, value, reload = false) {
  if (validateInputs(key, value)) {
    window.chatSettings[key] = value;
    if (storageType && (storageType === 'sessionStorage')) {
      sessionStorage.setItem(key, value);
    } else {
      localStorage.setItem(key, value);
    }
    if (key === 'chatbotName') {
      let items = document.getElementsByClassName('chat-message-botname');
      for (let i = 0; i < items.length; ++i) {
          const chatbotName = items[i];
          chatbotName.innerHTML = value;
          chatbotName.innerText = value;
      }
    }
    if (key === 'headerTitle')
      document.getElementById('header-label').textContent = value;
    if (key === 'masterBotID' && reload ) {
      const url = window.location.href
      var getUrlParameter = function getUrlParameter(sParam) {
        sPageURL = window.location.search.substring(1);
          var sURLVariables = sPageURL.split('&'),
          sParameterName,
          i;
        for (i = 0; i < sURLVariables.length; i++) {
          sParameterName = sURLVariables[i].split('=');

          if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined
              ? true
              : decodeURIComponent(sParameterName[1]);
          }
        }
      };
      window.location.assign(url.replace(getUrlParameter('masterBotId'),value ))
    }
  } else {
      const errorMessage = "Invalid "+key;
      showMessage({
      type: 'error',
      message: errorMessage
      });
  }
}


/**
 * resets sidebar config value
 * @param key - config key
 */
function resetInput(key) {
  window.chatSettings[key] = defaultParams[key];
  if (storageType && (storageType === 'sessionStorage')) {
    sessionStorage.setItem(key, defaultParams[key]);
  } else {
    localStorage.setItem(key, defaultParams[key]);
  }
  document.getElementById(key).value = defaultParams[key];
}

/**
 * Handles toast message queue. Call this function with { type: "success" or "error", message: "example message" } as a parameter to add a message to the queue
 * @param messageObj - new message object. If null, it will take from the queue
 */
function showMessage(messageObj) {
  messageQueue;
  isMessageActive;

  if (!isMessageActive) {
    if (!messageObj) {
      messageObj = messageQueue.shift();
    }

    if (messageObj) {
      isMessageActive = true;

      const messageContainer = document.createElement('div');
      messageContainer.className = 'toast-message ' + messageObj.type;
      if (messageObj.message.constructor === Array) {
        messageObj.message.forEach((message) => {
          let msgElem = document.createElement('div');
          msgElem.innerText = message;
          messageContainer.append(msgElem);
        });
      } else {
        messageContainer.innerText = messageObj.message;
      }
      messageContainer.onclick = () => {
        removeMessage(messageContainer);
      };
      document.body.appendChild(messageContainer);

      // add 'active' class for entry animation
      setTimeout(() => {
        messageContainer.classList.add('active');
      }, 10);

      //remove message after 2s
      setTimeout(() => {
        removeMessage(messageContainer);
      }, 5000);
    }
  } else {
    messageQueue.push(messageObj);
  }
}

/**
 * removes toast message
 * @param element the message element to be removed
 */
function removeMessage(element) {
  element.classList.remove('active');
  setTimeout(() => {
    if (element.parentNode === document.body) {
      document.body.removeChild(element);
      isMessageActive = false;
      showMessage(null);
    }
  }, 350);
}

/**
 * handles user authentication by checking token expiration time every 20 seconds and replacing menu buttons when user is authenticated
 */
function checkUserAuthentication() {
  const expiry = sessionStorage.getItem('tokenExpiry');
  if (expiry && expiry > new Date().getTime()) {
    // show welcome message on the header of the page
    const userFirstName = sessionStorage.getItem('userFirstName');
    const welcomeMsg = document.getElementById('welcome-msg');
    welcomeMsg.innerText = 'Welcome back, ' + userFirstName;
    welcomeMsg.className = '';

    // hide buttons designed for not authorised user and show authorised user buttons instead
    document
      .querySelector('.options-dropdown.not-authorised')
      .classList.add('hidden');
    document
      .querySelector('.options-dropdown.authorised')
      .classList.remove('hidden');

    // set interval to check expiry every 20 seconds. Extend if token has less than a minute until expiration
    setInterval(() => {
      const expiry = sessionStorage.getItem('tokenExpiry');
      if (expiry && expiry - 60000 <= new Date().getTime()) {
        extendSession();
      }
    }, 20000);
  }
}

/**
 * extends token expiration time when it is about to end
 */
function extendSession() {
  requestsInProgress.extendSession = true;
  const xhr = new XMLHttpRequest();
  xhr.open('POST', localEndpoints.extendUserToken, true);
  xhr.withCredentials = true;
  xhr.setRequestHeader('Content-Type', 'application/json');
  var csrfToken = sessionStorage.getItem(SESSION_ENUM.X_CSRF_TOKEN);
  xhr.setRequestHeader('x-csrf-token', csrfToken);
  xhr.onreadystatechange = function () {
    if (xhr.readyState === 4) {
      requestsInProgress.extendSession = false;
      const response = JSON.parse(xhr.response);
      if (response.status === 200) {
        sessionStorage.setItem('tokenExpiry', response.tokenExpiry);
      } else {
        signOut();
      }
    }
  };
  xhr.send(
    JSON.stringify({
      path: document.getElementById('userAuthPath').value
    })
  );
}

/**
 * opens overlay and form for updating user information
 */
function openManageAccountForm() {
  // hide biometrics form
  document.getElementById('manage-biometrics-form').className =
    'hidden';
  document.getElementById('account-tab').className = 'active';
  document.getElementById('biometrics-tab').className = '';

  requestsInProgress.getUser = true;
  const xhr = new XMLHttpRequest();
  xhr.open('POST', localEndpoints.getUser, true);
  xhr.withCredentials = true;
  xhr.setRequestHeader('Content-Type', 'application/json');
  var csrfToken = sessionStorage.getItem(SESSION_ENUM.X_CSRF_TOKEN);
  xhr.setRequestHeader('x-csrf-token', csrfToken);
  xhr.onreadystatechange = function () {
    if (xhr.readyState === 4) {
      requestsInProgress.getUser = false;
      userData = JSON.parse(xhr.response);
      if (userData.userId) {
        // open manage account form
        document.getElementById('overlay').className = '';
        document.getElementById('manage-account-form').className = '';
        // fill form with values retrieved from the call
        document.getElementById('manage-first-name').value =
          userData.firstName;
        document.getElementById('manage-last-name').value =
          userData.lastName;
        document.getElementById('manage-email').value =
          userData.email;
        if (userData.sms.userPhoneNumber) {
          document.getElementById('manage-phone').value =
            userData.sms.userPhoneNumber;
          document.getElementById('whatsapp-checkbox').checked =
            userData.whatsapp.userOptIn;
          document.getElementById('sms-checkbox').checked =
            userData.sms.userOptIn;
        }
      } else {
        showMessage({
          type: 'error',
          message:
            'Failed to get user data!\nCheck console for errors'
        });
      }
    }
  };
  xhr.send(
    JSON.stringify({
      path: document.getElementById('userManagementPath').value
    })
  );
}

/**
 * Creates a profile for a user if one doesn't exist
 */
function createBiometricsProfile(e) {
  // create user profile
  const formData = {
    masterBotId: document.getElementById('masterBotID').value
  };

  requestsInProgress.createVoiceBiometricsProfile = true;
  let tryout = new XMLHttpRequest();
  tryout.open("GET", localEndpoints.healthCheck, true);
  tryout.withCredentials = true;
  tryout.setRequestHeader("x-csrf-token", "fetch");
  tryout.send(null);
  tryout.onreadystatechange = function () {
    if (tryout.readyState === 4) {
      var csrfToken = tryout.getResponseHeader("x-csrf-token");
      sessionStorage.setItem(SESSION_ENUM.X_CSRF_TOKEN, csrfToken);

      fetch(localEndpoints.createVoiceBiometricsProfile, {
        method: 'POST',
        credentials: 'include',
        headers: { 'Content-Type': 'application/json', 'x-csrf-token': csrfToken },
        body: JSON.stringify({
          path: document.getElementById('voiceBiometricsPath').value,
          data: formData
        })
      }).then(async (res) => {
        requestsInProgress.createVoiceBiometricsProfile = false;
        const body = await res.json();
        if (res.status === 200 && body.profileId) {
          openBiometricsForm();
          showMessage({
            type: 'success',
            message: 'Voice Profile ID has been successfully created'
          });
        } else {
          showMessage({
            type: 'error',
            message:
              'Failed to Create Biometrics Profile!\nCheck console for errors'
          });
          console.log(body);
        }
      });
    }
  }
}

/**
 * Creates an enrolment for a user with existing profile id
 */
function createBiometricsEnrolment(audioBuffer) {
  const formData = new FormData();

  // Audio Blob
  formData.append('audioBuffer', audioBuffer);
  // add other data
  formData.append(
    'masterBotId',
    document.getElementById('masterBotID').value
  );
  formData.append(
    'path',
    document.getElementById('voiceBiometricsPath').value
  );

  requestsInProgress.createVoiceBiometricsEnrollment = true;
  // calling healthcheck url to get csrf token from response header
  let tryout = new XMLHttpRequest();
  tryout.open("GET", localEndpoints.healthCheck, true);
  tryout.withCredentials = true;
  tryout.setRequestHeader("x-csrf-token", "fetch");
  tryout.send(null);
  tryout.onreadystatechange = function () {
    if (tryout.readyState === 4) {
      var csrfToken = tryout.getResponseHeader("x-csrf-token");
      sessionStorage.setItem(SESSION_ENUM.X_CSRF_TOKEN, csrfToken);

      fetch(localEndpoints.createVoiceBiometricsEnrollment, {
        method: 'POST',
        credentials: 'include',
        headers: { 'x-csrf-token': csrfToken },
        body: formData
      }).then(async (res) => {
        requestsInProgress.createVoiceBiometricsEnrollment = false;
        if (res.status === 200) {
          resetEnrollmentControls();
          openBiometricsForm();
          showMessage({
            type: 'success',
            message: 'Enrollment successful'
          });
        } else {
          showMessage({
            type: 'error',
            message:
              'Failed to Create Biometrics Enrollment!\nCheck console for errors'
          });
          const body = await res.json();
          console.log(body);
        }
      });
    }
  }
}

/**
 * Decides if a profile is being created or user is enrolling
 */
function handleBiometricsForm(e) {
  if (e.preventDefault) e.preventDefault();

  // check if userData contains a voiceBiometricsProfileID
  if (
    userData.voice &&
    userData.voice.biometrics &&
    userData.voice.biometrics.profileId
  ) {
    const au = document.getElementById('player');
    if (!au.blob) {
      showMessage({
        type: 'error',
        message: 'Please make a recording before attempting to enrol'
      });
      return;
    }

    createBiometricsEnrolment(au.blob);
  } else {
    createBiometricsProfile(e);
  }
}

function openBiometricsForm() {
  // hide account form
  document.getElementById('manage-account-form').className = 'hidden';

  document.getElementById('account-tab').className = '';
  document.getElementById('biometrics-tab').className = 'active';

  requestsInProgress.getUser = true;
  const xhr = new XMLHttpRequest();
  xhr.open('POST', localEndpoints.getUser, true);
  xhr.withCredentials = true;
  xhr.setRequestHeader('Content-Type', 'application/json');
  var csrfToken = sessionStorage.getItem(SESSION_ENUM.X_CSRF_TOKEN);
  xhr.setRequestHeader('x-csrf-token', csrfToken);
  xhr.onreadystatechange = function () {
    if (xhr.readyState === 4) {
      requestsInProgress.getUser = false;
      userData = JSON.parse(xhr.response);
      if (userData.userId) {
        // open manage account form
        document.getElementById('overlay').className = '';
        document.getElementById('manage-biometrics-form').className =
          '';
        // fill form with values retrieved from the call
        const {
          profileId,
          requiredEnrollments,
          enrollmentStatus: vbStatus,
          enrollmentPhrase: vbPhrase
        } =
          userData.voice && userData.voice.biometrics
            ? userData.voice.biometrics
            : {};

        const submitButton = document.querySelector(
          '#voice-biometrics-form-submit'
        );
        const enrollmentControls = document.querySelector(
          '#enrollment-controls'
        );

        switch (vbStatus) {
          case 'PROFILE CREATED':
          case 'Enrolling':
            // User needs to enrol
            submitButton.innerText = 'Enrol';
            // display enrollment controls
            enrollmentControls.className = '';
            break;

          case 'Enrolled':
            // hide enrollment controls
            enrollmentControls.className = 'hidden';
            submitButton.className = 'hidden';
            break;
        }

        document.getElementById('voice-biometrics-profile-id').value =
          profileId || 'NO PROFILE CREATED';

        document.getElementById('voice-biometrics-status').value =
          vbStatus || 'NO PROFILE CREATED';

        document.getElementById(
          'voice-biometrics-required-enrollments'
        ).value = requiredEnrollments;

        document.getElementById('voice-biometrics-phrase').value =
          vbPhrase || '';
      } else {
        showMessage({
          type: 'error',
          message:
            'Failed to get biometrics data!\nCheck console for errors'
        });
      }
    }
  };
  xhr.send(
    JSON.stringify({
      path: document.getElementById('userManagementPath').value
    })
  );
}

/**
 * opens overlay and tab manager to allow which form to display
 */
function openTabManager() {
  document.getElementById('overlay').className = '';
  document.getElementById('tab-window').className = '';

  // by default populate the account tab;
  openManageAccountForm();
}

/**
 * Handles request to update user information
 * @param e - click event
 */
async function handleUpdateUser(e) {
  if (e.preventDefault) e.preventDefault();

  // if phone number is not added, then make call to /addPhoneNumber endpoint to add it
  if (
    !userData.sms.userPhoneNumber &&
    e.target.querySelector('#manage-phone').value !== '' &&
    e.target.querySelector('#manage-phone').value.length <= 15
  ) {
    await addPhoneNumber(e);
  }

  const formData = {
    userFirstName: e.target.querySelector('#manage-first-name').value,
    userLastName: e.target.querySelector('#manage-last-name').value,
    userEmail: e.target.querySelector('#manage-email').value
  };

  // if phone number is added, update it together with other data
  if (userData.sms.userPhoneNumber) {
    formData.userPhoneNumber = e.target.querySelector(
      '#manage-phone'
    ).value;
    formData.smsUserOptIn = e.target.querySelector(
      '#sms-checkbox'
    ).checked;
    formData.whatsappUserOptIn = e.target.querySelector(
      '#whatsapp-checkbox'
    ).checked;
  }
  let errorMsgsCollection = [];
  const emailIdPattern = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
  const textPattern = /^[a-zA-Z ]+$/;
  if (!formData.userEmail.match(emailIdPattern)) {
    errorMsgsCollection.push('The Email Id is invalid'); }
  if (!formData.userFirstName.match(textPattern))
    errorMsgsCollection.push('Only Alphabet are allowed for first name field');
  if (!formData.userLastName.match(textPattern))
    errorMsgsCollection.push('Only Alphabet are allowed for last name field');
  if (formData.userPhoneNumber) {
    if (e.target.querySelector('#manage-phone').value.length > 15)
      errorMsgsCollection.push('Length of phone number should be less than 15');
  }
  if (errorMsgsCollection.length) {
    errorMsgsCollection.join(',');
      showMessage({
        type: 'error',
        message: errorMsgsCollection
      });
  } else {
  requestsInProgress.updateUser = true;
  const xhr = new XMLHttpRequest();
  xhr.open('POST', localEndpoints.updateUser, true);
  xhr.withCredentials = true;
  xhr.setRequestHeader('Content-Type', 'application/json');
  var csrfToken = sessionStorage.getItem(SESSION_ENUM.X_CSRF_TOKEN);
  xhr.setRequestHeader('x-csrf-token', csrfToken);
  xhr.onreadystatechange = function () {
    if (xhr.readyState === 4) {
      requestsInProgress.updateUser = false;
      const response = JSON.parse(xhr.response);
      if (response.userId) {
        // update user name in session storage and welcome message if it has been changed
        sessionStorage.setItem('userFirstName', response.firstName);
        const welcomeMsg = document.getElementById('welcome-msg');
        welcomeMsg.innerText = 'Welcome back, ' + response.firstName;
        showMessage({
          type: 'success',
          message: 'User details updated successfully'
        });
      } else {
        showMessage({
          type: 'error',
          message:
            'Failed to update user details!\nCheck console for errors'
        });
      }
    }
  };
  xhr.send(
    JSON.stringify({
      path: document.getElementById('userManagementPath').value,
      data: formData
    })
  );

  hideWindows();
  }
}

/**
 * Handles request to add phone number
 * @param e - click event
 */
function addPhoneNumber(e) {
  const formData = {
    userPhoneNumber: e.target.querySelector('#manage-phone').value,
    smsUserOptIn: e.target.querySelector('#sms-checkbox').checked,
    whatsappUserOptIn: e.target.querySelector('#whatsapp-checkbox')
      .checked
  };

  requestsInProgress.addPhoneNumber = true;
  return new Promise(function (resolve, reject) {
    const xhr = new XMLHttpRequest();
    xhr.open('POST', localEndpoints.addPhoneNumber, true);
    xhr.withCredentials = true;
    xhr.setRequestHeader('Content-Type', 'application/json');
    var csrfToken = sessionStorage.getItem(SESSION_ENUM.X_CSRF_TOKEN);
    xhr.setRequestHeader('x-csrf-token', csrfToken);
    xhr.onreadystatechange = function () {
      if (xhr.readyState === 4) {
        requestsInProgress.addPhoneNumber = false;
        const response = JSON.parse(xhr.response);
        if (response.status === 200) {
          resolve({ status: response.status });
          showMessage({
            type: 'success',
            message: 'Phone number added successfully'
          });
        } else {
          reject({ status: response.status });
          showMessage({
            type: 'error',
            message:
              'Failed to add phone number!\nCheck console for errors'
          });
        }
      }
    };
    xhr.send(
      JSON.stringify({
        path: document.getElementById('userManagementPath').value,
        data: formData
      })
    );
  });
}

/**
 * deletes user account
 */
function deleteUser() {
  const confirmation = confirm(
    'Are you sure you want to delete your account?'
  );
  if (confirmation) {
    requestsInProgress.deleteUser = true;
    const xhr = new XMLHttpRequest();
    xhr.open('POST', localEndpoints.deleteUser, true);
    xhr.withCredentials = true;
    xhr.setRequestHeader('Content-Type', 'application/json');
    var csrfToken = sessionStorage.getItem(SESSION_ENUM.X_CSRF_TOKEN);
    xhr.setRequestHeader('x-csrf-token', csrfToken);
    xhr.onreadystatechange = function () {
      if (xhr.readyState === 4) {
        requestsInProgress.deleteUser = false;
        showMessage({
          type: 'success',
          message: 'User account deleted successfully'
        });
        // set timeout to show success message at first and then sign out current user
        setTimeout(function () {
          signOut();
        }, 2000);
      }
    };
    hideWindows();
    xhr.send(
      JSON.stringify({
        path: document.getElementById('userManagementPath').value
      })
    );
  }
}

const concat = (buffer1, buffer2) => {
  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);

  tmp.set(new Uint8Array(buffer1), 0);
  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);

  return tmp.buffer;
};

function getArrayBufferFromBlob(blob) {
  return new Promise(function(resolve) {
    var reader = new FileReader();

    reader.onloadend = function() {
      resolve(reader.result);
    };

    reader.readAsArrayBuffer(blob);
  });
}

const withWaveHeader = (data, numberOfChannels, sampleRate) => {
  const header = new ArrayBuffer(44);

  const d = new DataView(header);

  d.setUint8(0, 'R'.charCodeAt(0));
  d.setUint8(1, 'I'.charCodeAt(0));
  d.setUint8(2, 'F'.charCodeAt(0));
  d.setUint8(3, 'F'.charCodeAt(0));

  d.setUint32(4, data.byteLength / 2 + 44, true);

  d.setUint8(8, 'W'.charCodeAt(0));
  d.setUint8(9, 'A'.charCodeAt(0));
  d.setUint8(10, 'V'.charCodeAt(0));
  d.setUint8(11, 'E'.charCodeAt(0));
  d.setUint8(12, 'f'.charCodeAt(0));
  d.setUint8(13, 'm'.charCodeAt(0));
  d.setUint8(14, 't'.charCodeAt(0));
  d.setUint8(15, ' '.charCodeAt(0));

  d.setUint32(16, 16, true);
  d.setUint16(20, 1, true);
  d.setUint16(22, numberOfChannels, true);
  d.setUint32(24, sampleRate, true);
  d.setUint32(28, sampleRate * 1 * 2);
  d.setUint16(32, numberOfChannels * 2);
  d.setUint16(34, 16, true);

  d.setUint8(36, 'd'.charCodeAt(0));
  d.setUint8(37, 'a'.charCodeAt(0));
  d.setUint8(38, 't'.charCodeAt(0));
  d.setUint8(39, 'a'.charCodeAt(0));
  d.setUint32(40, data.byteLength, true);

  return concat(header, data);
};

function setupWsClient(endpoint) {
  return new Promise((resolve, reject) => {
    const socket = new WebSocket(endpoint);

    socket.onerror = function(error) {
      console.log('SOCKET ERROR', error);
      reject(error);
    };

    socket.onopen = function() {
      console.log('SOCKET OPENED');
      resolve(socket);
    };
  });
}

function downsampleBuffer(buffer, sampleRate, outSampleRate) {
  if (outSampleRate === sampleRate) {
    return buffer;
  } else if (outSampleRate > sampleRate) {
    // throw error
    console.log(
      'downsampling rate show be smaller than original sample rate'
    );
  }
  const sampleRateRatio = sampleRate / outSampleRate;
  const result = new Int16Array(
    Math.round(buffer.length / sampleRateRatio)
  );
  let offsetResult = 0;
  let offsetBuffer = 0;
  while (offsetResult < result.length) {
    const nextOffsetBuffer = Math.round(
      (offsetResult + 1) * sampleRateRatio
    );
    let accum = 0,
      count = 0;
    for (
      let i = offsetBuffer;
      i < nextOffsetBuffer && i < buffer.length;
      i++
    ) {
      accum += buffer[i];
      count++;
    }
    result[offsetResult] = Math.min(1, accum / count) * 0x7fff;
    offsetResult++;
    offsetBuffer = nextOffsetBuffer;
  }
  return result.buffer;
}
